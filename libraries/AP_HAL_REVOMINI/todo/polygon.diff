--- px4/polygon.ii	2017-01-09 18:54:53.000000000 +0500
+++ revo/polygon.ii	2017-01-09 17:51:15.924982623 +0500
@@ -1,5 +1,5 @@
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.cpp"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot//"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.cpp"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane//"
 # 1 "<built-in>"
 #define __STDC__ 1
 #define __cplusplus 201103L
@@ -14,9 +14,9 @@
 #define __ATOMIC_RELEASE 3
 #define __ATOMIC_ACQ_REL 4
 #define __ATOMIC_CONSUME 1
-#define __OPTIMIZE_SIZE__ 1
 #define __OPTIMIZE__ 1
-#define __FINITE_MATH_ONLY__ 0
+#define __FAST_MATH__ 1
+#define __FINITE_MATH_ONLY__ 1
 #define __SIZEOF_INT__ 4
 #define __SIZEOF_LONG__ 4
 #define __SIZEOF_LONG_LONG__ 8
@@ -380,7888 +380,24655 @@
 #define __ELF__ 1
 # 1 "<command-line>"
 #define __USES_INITFINI__ 1
-#define __CUSTOM_FILE_IO__ 1
-#define CONFIG_ARCH_BOARD_PX4FMU_V2 1
-#define __PX4_NUTTX 1
-#define CONFIG_WCHAR_BUILTIN 1
-#define ARDUPILOT_BUILD 1
-#define TESTS_MATHLIB_DISABLE 1
-#define CONFIG_HAL_BOARD HAL_BOARD_PX4
-#define SKETCHNAME "ArduPlane"
-#define SKETCH_MAIN ArduPilot_main
-#define APM_BUILD_DIRECTORY APM_BUILD_ArduPlane
-#define GIT_VERSION "90516f10"
+#define VECT_TAB_FLASH 1
+#define BOARD_revomini_MP32V1F4 1
+#define MCU_STM32F407VG 1
+#define CONFIG_HAL_BOARD HAL_BOARD_REVOMINI
+#define STM32F4XX 1
+#define MCU_STM32F405RG 1
+#define USE_STDPERIPH_DRIVER 1
+#define HSE_VALUE 8000000
+#define ARM_MATH_CM4 1
+#define USE_OTG_FS_CORE 1
+#define USE_USB_OTG_FS 1
+#define USE_EMBEDDED_PHY 1
+#define __FPU_PRESENT 1
+#define __FPU_USED 1
+#define APM_BUILD_DIRECTORY APM_BUILD_ArduCopter
 #define MAVLINK_PROTOCOL_VERSION 2
-#define NUTTX_GIT_VERSION "be6ff61a"
-#define PX4_GIT_VERSION "3df5644c"
-#define UAVCAN 1
-#define __STDC_FORMAT_MACROS 1
 #define HAVE_STD_NULLPTR_T 0
-#define HAVE_ENDIAN_H 0
 #define HAVE_BYTESWAP_H 0
-#define HAVE_OCLOEXEC 0
-#define PX4_MAIN ArduPilot_app_main
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/src/include/visibility.h" 1
-# 43 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/src/include/visibility.h"
-#define __SYSTEMLIB_VISIBILITY_H 
+#define ARDUPILOT_BUILD 1
+#define TESTS_MATHLIB_DISABLE 1
+#define SKETCH_MAIN ArduPilot_main
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/board.h" 1
 
+#define _BOARD_STM32V1F4_H_ 
 
 
 
-#define __EXPORT __attribute__ ((visibility ("default")))
 
 
+#define __CM4_REV 0x0001
+#define __MPU_PRESENT 1
+#define __NVIC_PRIO_BITS 4
+#define __Vendor_SysTickConfig 0
+#define __FPU_PRESENT 1
 
+#define CYCLES_PER_MICROSECOND 168
+#define SYSTICK_RELOAD_VAL (CYCLES_PER_MICROSECOND*1000-1)
 
-#define __PRIVATE __attribute__ ((visibility ("hidden")))
+#undef STM32_PCLK1
+#undef STM32_PCLK2
+#define STM32_PCLK1 (CYCLES_PER_MICROSECOND*1000000/4)
+#define STM32_PCLK2 (CYCLES_PER_MICROSECOND*1000000/2)
 
+#define BOARD_BUTTON_PIN 254
 
-#define __BEGIN_DECLS extern "C" {
-#define __END_DECLS }
-# 1 "<command-line>" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.cpp"
-# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.cpp"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 1
-       
-
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/cmath" 1
-       
-
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cmath" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cmath"
-#define __INCLUDE_CXX_CMATH 
-
-
-
-
-
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/config.h" 1
-
-
-
-#define __INCLUDE_NUTTX_CONFIG_H 
-
-
-
-#define CONFIG_NUTTX_NEWCONFIG 1
-#define CONFIG_HOST_OSX 1
-#define CONFIG_RAW_BINARY 1
-#define CONFIG_ARCH_MATH_H 1
-#undef CONFIG_DEBUG
-#undef CONFIG_DEBUG_VERBOSE
-#define CONFIG_DEBUG_DMA 1
-#define CONFIG_DEBUG_SYMBOLS 1
-#define CONFIG_ARCH_ARM 1
-#define CONFIG_ARCH "arm"
-#define CONFIG_ARCH_CHIP_STM32 1
-#define CONFIG_ARCH_CORTEXM4 1
-#define CONFIG_ARCH_FAMILY "armv7-m"
-#define CONFIG_ARCH_CHIP "stm32"
-#define CONFIG_ARMV7M_USEBASEPRI 1
-#define CONFIG_ARCH_HAVE_CMNVECTOR 1
-#define CONFIG_ARMV7M_CMNVECTOR 1
-#define CONFIG_ARCH_HAVE_FPU 1
-#define CONFIG_ARCH_FPU 1
-#define CONFIG_ARCH_HAVE_MPU 1
-#define CONFIG_ARMV7M_TOOLCHAIN_GNU_EABI 1
-#undef CONFIG_ARMV7M_STACKCHECK
-#define CONFIG_SERIAL_TERMIOS 1
-#define CONFIG_SDIO_DMA 1
-#define CONFIG_SDIO_DMAPRIO 0x00010000
-#define CONFIG_ARCH_CHIP_STM32F427V 1
-#define CONFIG_STM32_STM32F40XX 1
-#define CONFIG_STM32_STM32F427 1
-#define CONFIG_STM32_ADC1 1
-#define CONFIG_STM32_BKPSRAM 1
-#define CONFIG_STM32_CCMDATARAM 1
-#define CONFIG_STM32_DMA1 1
-#define CONFIG_STM32_DMA2 1
-#define CONFIG_STM32_I2C1 1
-#define CONFIG_STM32_I2C2 1
-#define CONFIG_STM32_OTGFS 1
-#define CONFIG_STM32_PWR 1
-#define CONFIG_STM32_SDIO 1
-#define CONFIG_STM32_SPI1 1
-#define CONFIG_STM32_SPI2 1
-#define CONFIG_STM32_SPI4 1
-#define CONFIG_STM32_SYSCFG 1
-#define CONFIG_STM32_TIM1 1
-#define CONFIG_STM32_TIM3 1
-#define CONFIG_STM32_TIM4 1
-#define CONFIG_STM32_TIM9 1
-#define CONFIG_STM32_TIM10 1
-#define CONFIG_STM32_TIM11 1
-#define CONFIG_STM32_USART1 1
-#define CONFIG_STM32_USART2 1
-#define CONFIG_STM32_USART3 1
-#define CONFIG_STM32_UART4 1
-#define CONFIG_STM32_USART6 1
-#define CONFIG_STM32_UART7 1
-#define CONFIG_STM32_UART8 1
-#define CONFIG_STM32_WWDG 1
-#define CONFIG_STM32_ADC 1
-#define CONFIG_STM32_SPI 1
-#define CONFIG_STM32_I2C 1
-#define CONFIG_STM32_FLASH_PREFETCH 1
-#define CONFIG_STM32_JTAG_SW_ENABLE 1
-#define CONFIG_STM32_DISABLE_IDLE_SLEEP_DURING_DEBUG 1
-#define CONFIG_STM32_DMACAPABLE 1
-#define CONFIG_STM32_USART 1
-#define CONFIG_STM32_RXDMA_BUFFER_SIZE_OVERRIDE 256
-#define CONFIG_USART2_RXDMA 1
-#define CONFIG_USART3_RXDMA 1
-#define CONFIG_UART4_RXDMA 1
-#define CONFIG_UART5_RXDMA 1
-#define CONFIG_USART6_RXDMA 1
-#define CONFIG_UART8_RXDMA 1
-#define CONFIG_SERIAL_DISABLE_REORDERING 1
-#define CONFIG_STM32_USART_SINGLEWIRE 1
-#define CONFIG_STM32_SPI_DMA 1
-#define CONFIG_STM32_I2CTIMEOSEC 0
-#define CONFIG_STM32_I2CTIMEOMS 10
-#define CONFIG_SDIO_PRI 128
-#define CONFIG_ARCH_DMA 1
-#define CONFIG_ARCH_HAVE_VFORK 1
-#define CONFIG_ARCH_STACKDUMP 1
-#define CONFIG_ARCH_HAVE_RAMVECTORS 1
-#define CONFIG_BOARD_LOOPSPERMSEC 16717
-#define CONFIG_DRAM_START 0x20000000
-#define CONFIG_DRAM_SIZE 262144
-#define CONFIG_ARCH_HAVE_INTERRUPTSTACK 1
-#define CONFIG_ARCH_INTERRUPTSTACK 750
-#define CONFIG_BOOT_RUNFROMFLASH 1
-#define CONFIG_ARCH_BOARD_PX4FMU_V2 1
-#define CONFIG_ARCH_BOARD_CUSTOM 1
-#define CONFIG_ARCH_BOARD ""
-#define CONFIG_NSH_MMCSDMINOR 0
-#define CONFIG_NSH_MMCSDSLOTNO 0
-#define CONFIG_MMCSD_HAVE_SDIOWAIT_WRCOMPLETE 1
-#define CONFIG_MSEC_PER_TICK 1
-#define CONFIG_RR_INTERVAL 0
-#define CONFIG_SCHED_INSTRUMENTATION 1
-#define CONFIG_TASK_NAME_SIZE 24
-#define CONFIG_START_YEAR 1970
-#define CONFIG_START_MONTH 1
-#define CONFIG_START_DAY 1
-#define CONFIG_DEV_CONSOLE 1
-#define CONFIG_PRIORITY_INHERITANCE 1
-#define CONFIG_SEM_PREALLOCHOLDERS 0
-#define CONFIG_SEM_NNESTPRIO 8
-#define CONFIG_FDCLONE_STDIO 1
-#define CONFIG_SDCLONE_DISABLE 1
-#define CONFIG_SCHED_WAITPID 1
-#define CONFIG_SCHED_ATEXIT 1
-#define CONFIG_SCHED_ATEXIT_MAX 1
-#define CONFIG_USER_ENTRYPOINT nsh_main
-#define CONFIG_SIG_SIGUSR1 1
-#define CONFIG_SIG_SIGUSR2 2
-#define CONFIG_SIG_SIGALARM 3
-#define CONFIG_SIG_SIGCONDTIMEDOUT 16
-#define CONFIG_SIG_SIGWORK 4
-#define CONFIG_MAX_TASKS 32
-#define CONFIG_MAX_TASK_ARGS 10
-#define CONFIG_NPTHREAD_KEYS 4
-#define CONFIG_NFILE_DESCRIPTORS 50
-#define CONFIG_NFILE_STREAMS 8
-#define CONFIG_NAME_MAX 32
-#define CONFIG_PREALLOC_MQ_MSGS 4
-#define CONFIG_MQ_MAXMSGSIZE 32
-#define CONFIG_MAX_WDOGPARMS 2
-#define CONFIG_PREALLOC_WDOGS 50
-#define CONFIG_PREALLOC_TIMERS 50
-#define CONFIG_IDLETHREAD_STACKSIZE 1000
-#define CONFIG_USERMAIN_STACKSIZE 2500
-#define CONFIG_PTHREAD_STACK_MIN 512
-#define CONFIG_PTHREAD_STACK_DEFAULT 2048
-#define CONFIG_DEV_NULL 1
-#define CONFIG_I2C 1
-#define CONFIG_I2C_TRANSFER 1
-#define CONFIG_ARCH_HAVE_I2CRESET 1
-#define CONFIG_I2C_RESET 1
-#define CONFIG_SPI 1
-#define CONFIG_SPI_EXCHANGE 1
-#define CONFIG_RTC 1
-#define CONFIG_RTC_DATETIME 1
-#define CONFIG_RTC_HSECLOCK 1
-#define CONFIG_WATCHDOG 1
-#define CONFIG_MMCSD 1
-#define CONFIG_MMCSD_NSLOTS 1
-#define CONFIG_MMCSD_MULTIBLOCK_DISABLE 1
-#define CONFIG_MMCSD_SDIO 1
-#define CONFIG_MTD 1
-#define CONFIG_MTD_PARTITION 1
-#define CONFIG_MTD_BYTE_WRITE 1
-#define CONFIG_MTD_RAMTRON 1
-#define CONFIG_PIPES 1
-#define CONFIG_SERIAL 1
-#define CONFIG_SERIAL_REMOVABLE 1
-#define CONFIG_ARCH_HAVE_UART4 1
-#define CONFIG_ARCH_HAVE_UART7 1
-#define CONFIG_ARCH_HAVE_UART8 1
-#define CONFIG_ARCH_HAVE_USART1 1
-#define CONFIG_ARCH_HAVE_USART2 1
-#define CONFIG_ARCH_HAVE_USART3 1
-#define CONFIG_ARCH_HAVE_USART6 1
-#define CONFIG_MCU_SERIAL 1
-#define CONFIG_STANDARD_SERIAL 1
-#define CONFIG_SERIAL_NPOLLWAITERS 2
-#define CONFIG_UART7_SERIAL_CONSOLE 1
-#define CONFIG_USART1_RXBUFSIZE 128
-#define CONFIG_USART1_TXBUFSIZE 32
-#define CONFIG_USART1_BAUD 115200
-#define CONFIG_USART1_BITS 8
-#define CONFIG_USART1_PARITY 0
-#define CONFIG_USART1_2STOP 0
-#define CONFIG_USART2_RXBUFSIZE 600
-#define CONFIG_USART2_TXBUFSIZE 1100
-#define CONFIG_USART2_BAUD 57600
-#define CONFIG_USART2_BITS 8
-#define CONFIG_USART2_PARITY 0
-#define CONFIG_USART2_2STOP 0
-#define CONFIG_USART2_IFLOWCONTROL 1
-#define CONFIG_USART2_OFLOWCONTROL 1
-#define CONFIG_USART3_RXBUFSIZE 300
-#define CONFIG_USART3_TXBUFSIZE 300
-#define CONFIG_USART3_BAUD 57600
-#define CONFIG_USART3_BITS 8
-#define CONFIG_USART3_PARITY 0
-#define CONFIG_USART3_2STOP 0
-#define CONFIG_USART3_IFLOWCONTROL 1
-#define CONFIG_USART3_OFLOWCONTROL 1
-#define CONFIG_UART4_RXBUFSIZE 300
-#define CONFIG_UART4_TXBUFSIZE 300
-#define CONFIG_UART4_BAUD 57600
-#define CONFIG_UART4_BITS 8
-#define CONFIG_UART4_PARITY 0
-#define CONFIG_UART4_2STOP 0
-#define CONFIG_USART6_RXBUFSIZE 300
-#define CONFIG_USART6_TXBUFSIZE 300
-#define CONFIG_USART6_BAUD 57600
-#define CONFIG_USART6_BITS 8
-#define CONFIG_USART6_PARITY 0
-#define CONFIG_USART6_2STOP 0
-#define CONFIG_UART7_RXBUFSIZE 300
-#define CONFIG_UART7_TXBUFSIZE 300
-#define CONFIG_UART7_BAUD 57600
-#define CONFIG_UART7_BITS 8
-#define CONFIG_UART7_PARITY 0
-#define CONFIG_UART7_2STOP 0
-#define CONFIG_UART8_RXBUFSIZE 300
-#define CONFIG_UART8_TXBUFSIZE 300
-#define CONFIG_UART8_BAUD 57600
-#define CONFIG_UART8_BITS 8
-#define CONFIG_UART8_PARITY 0
-#define CONFIG_UART8_2STOP 0
-#define CONFIG_SERIAL_IFLOWCONTROL 1
-#define CONFIG_SERIAL_OFLOWCONTROL 1
-#define CONFIG_USBDEV 1
-#define CONFIG_USBDEV_BUSPOWERED 1
-#define CONFIG_USBDEV_MAXPOWER 500
-#define CONFIG_CDCACM 1
-#define CONFIG_CDCACM_EP0MAXPACKET 64
-#define CONFIG_CDCACM_EPINTIN 1
-#define CONFIG_CDCACM_EPINTIN_FSSIZE 64
-#define CONFIG_CDCACM_EPINTIN_HSSIZE 64
-#define CONFIG_CDCACM_EPBULKOUT 3
-#define CONFIG_CDCACM_EPBULKOUT_FSSIZE 64
-#define CONFIG_CDCACM_EPBULKOUT_HSSIZE 512
-#define CONFIG_CDCACM_EPBULKIN 2
-#define CONFIG_CDCACM_EPBULKIN_FSSIZE 64
-#define CONFIG_CDCACM_EPBULKIN_HSSIZE 512
-#define CONFIG_CDCACM_NWRREQS 4
-#define CONFIG_CDCACM_NRDREQS 4
-#define CONFIG_CDCACM_BULKIN_REQLEN 96
-#define CONFIG_CDCACM_RXBUFSIZE 600
-#define CONFIG_CDCACM_TXBUFSIZE 8000
-#define CONFIG_CDCACM_VENDORID 0x26ac
-#define CONFIG_CDCACM_PRODUCTID 0x0011
-#define CONFIG_CDCACM_VENDORSTR "3D Robotics"
-#define CONFIG_CDCACM_PRODUCTSTR "PX4 FMU v2.x"
-#define CONFIG_FS_FAT 1
-#define CONFIG_FAT_LCNAMES 1
-#define CONFIG_FAT_LFN 1
-#define CONFIG_FAT_MAXFNAME 32
-#define CONFIG_FS_FATTIME 1
-#define CONFIG_FAT_DMAMEMORY 1
-#define CONFIG_FS_ROMFS 1
-#define CONFIG_FS_BINFS 1
-#define CONFIG_MM_REGIONS 2
-#define CONFIG_GRAN 1
-#define CONFIG_BUILTIN 1
-#define CONFIG_STDIO_BUFFER_SIZE 32
-#define CONFIG_STDIO_LINEBUFFER 1
-#define CONFIG_NUNGET_CHARS 2
-#define CONFIG_LIB_HOMEDIR "/"
-#define CONFIG_LIBC_FLOATINGPOINT 1
-#define CONFIG_LIB_RAND_ORDER 1
-#define CONFIG_EOL_IS_EITHER_CRLF 1
-#define CONFIG_POSIX_SPAWN_PROXY_STACKSIZE 1024
-#define CONFIG_TASK_SPAWN_DEFAULT_STACKSIZE 2048
-#define CONFIG_LIBC_STRERROR 1
-#define CONFIG_ARCH_LOWPUTC 1
-#define CONFIG_LIB_SENDFILE_BUFSIZE 512
-#define CONFIG_ARCH_OPTIMIZED_FUNCTIONS 1
-#define CONFIG_ARCH_MEMCPY 1
-#define CONFIG_SCHED_WORKQUEUE 1
-#define CONFIG_SCHED_HPWORK 1
-#define CONFIG_SCHED_WORKPRIORITY 192
-#define CONFIG_SCHED_WORKPERIOD 5000
-#define CONFIG_SCHED_WORKSTACKSIZE 1600
-#define CONFIG_SCHED_LPWORK 1
-#define CONFIG_SCHED_LPWORKPRIORITY 50
-#define CONFIG_SCHED_LPWORKPERIOD 50000
-#define CONFIG_SCHED_LPWORKSTACKSIZE 1600
-#define CONFIG_C99_BOOL8 1
-#define CONFIG_HAVE_CXX 1
-#define CONFIG_HAVE_CXXINITIALIZE 1
-#define CONFIG_BUILTIN_PROXY_STACKSIZE 1024
-#define CONFIG_EXAMPLES_CDCACM 1
-#define CONFIG_EXAMPLES_MOUNT 1
-#define CONFIG_EXAMPLES_NSH 1
-#define CONFIG_NSH_LIBRARY 1
-#define CONFIG_NSH_BUILTIN_APPS 1
-#define CONFIG_NSH_CODECS_BUFSIZE 128
-#define CONFIG_NSH_FILEIOSIZE 512
-#define CONFIG_NSH_STRERROR 1
-#define CONFIG_NSH_LINELEN 128
-#define CONFIG_NSH_MAXARGUMENTS 12
-#define CONFIG_NSH_NESTDEPTH 8
-#define CONFIG_NSH_ROMFSETC 1
-#define CONFIG_NSH_ROMFSMOUNTPT "/etc"
-#define CONFIG_NSH_INITSCRIPT "init.d/rcS"
-#define CONFIG_NSH_ROMFSDEVNO 0
-#define CONFIG_NSH_ROMFSSECTSIZE 128
-#define CONFIG_NSH_ARCHROMFS 1
-#define CONFIG_NSH_FATDEVNO 1
-#define CONFIG_NSH_FATSECTSIZE 512
-#define CONFIG_NSH_FATNSECTORS 1024
-#define CONFIG_NSH_FATMOUNTPT "/tmp"
-#define CONFIG_NSH_CONSOLE 1
-#define CONFIG_NSH_ARCHINIT 1
-#define CONFIG_SYSTEM_READLINE 1
-#define CONFIG_READLINE_ECHO 1
-#define CONFIG_SYSTEM_SYSINFO 1
-#define CONFIG_NSOCKET_DESCRIPTORS 0
-#define CONFIG_STM32_FLASH_CONFIG_I 1
-#define CONFIG_APPS_DIR "../apps"
-# 416 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/config.h"
-#define CONFIG_DRAM_END (CONFIG_DRAM_START+CONFIG_DRAM_SIZE)
-# 457 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/config.h"
-#undef CONFIG_FS_READABLE
-#undef CONFIG_FS_WRITABLE
-
-
-
-#define CONFIG_FS_READABLE 1
-
-
-
-
-#define CONFIG_FS_WRITABLE 1
-
-
-
-
-
-#undef CONFIG_NET
-
-
-
-
-
-
-
-#undef CONFIG_NSOCKET_DESCRIPTORS
-#define CONFIG_NSOCKET_DESCRIPTORS 0
-
-
-
-
-
-#undef CONFIG_NET_TCP
-#undef CONFIG_NET_UDP
-#undef CONFIG_NET_ICMP
-
-
-
-
-
-#undef CONFIG_NFS
-
-
-
-
-
-#undef CONFIG_DEBUG_VERBOSE
-#undef CONFIG_DEBUG_SCHED
-#undef CONFIG_DEBUG_MM
-#undef CONFIG_DEBUG_PAGING
-#undef CONFIG_DEBUG_DMA
-#undef CONFIG_DEBUG_FS
-#undef CONFIG_DEBUG_LIB
-#undef CONFIG_DEBUG_BINFMT
-#undef CONFIG_DEBUG_NET
-#undef CONFIG_DEBUG_USB
-#undef CONFIG_DEBUG_GRAPHICS
-#undef CONFIG_DEBUG_GPIO
-#undef CONFIG_DEBUG_SPI
-#undef CONFIG_DEBUG_STACK
-# 44 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cmath" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h"
-#define __INCLUDE_NUTTX_COMPILER_H 
-# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h"
-#define CONFIG_CPP_HAVE_VARARGS 1
-#define CONFIG_CPP_HAVE_WARNING 1
-
-
-
-#define CONFIG_HAVE_FUNCTIONNAME 1
-#define CONFIG_HAVE_FILENAME 1
-# 68 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h"
-#define CONFIG_HAVE_WEAKFUNCTIONS 1
-#define weak_alias(name,aliasname) extern __typeof (name) aliasname __attribute__ ((weak, alias (#name)));
-
-#define weak_function __attribute__ ((weak))
-#define weak_const_function __attribute__ ((weak, __const__))
-# 82 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h"
-#define noreturn_function __attribute__ ((noreturn))
-
-
-
-
-
-#define farcall_function __attribute__ ((long_call))
-
-
-
-
-
-#define packed_struct __attribute__ ((packed))
-
-
-
-#define reentrant_function 
-
-
-
-
-
-#define naked_function __attribute__ ((naked,no_instrument_function))
-
-
-
-
-
-
-#define inline_function __attribute__ ((always_inline,no_instrument_function))
-#define noinline_function __attribute__ ((noinline))
-
-
-
-#define FAR 
-#define NEAR 
-#define DSEG 
-#define CODE 
-# 188 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h"
-#undef CONFIG_SMALL_MEMORY
-
-
-
-#undef CONFIG_LONG_IS_NOT_INT
-
-
-
-#undef CONFIG_PTR_IS_NOT_INT
-
-
-
-
-#define CONFIG_HAVE_INLINE 1
-
-
-
-#define CONFIG_HAVE_LONG_LONG 1
-#define CONFIG_HAVE_FLOAT 1
-#define CONFIG_HAVE_DOUBLE 1
-#define CONFIG_HAVE_LONG_DOUBLE 1
-
-
-
-#define CONFIG_CAN_PASS_STRUCTS 1
-# 480 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/compiler.h"
-#define EXTERN extern "C"
-extern "C" {
+#define BOARD_RFM22B_CS_PIN 103
+#define BOARD_RFM22B_INT_PIN 26
 
+#define BUZZER_PIN 5
 
 
+#define BOARD_NR_USARTS 5
+#define BOARD_USART1_TX_PIN 23
+#define BOARD_USART1_RX_PIN 24
+#define BOARD_USART3_TX_PIN 0
+#define BOARD_USART3_RX_PIN 100
+#define BOARD_USART6_TX_PIN 12
+#define BOARD_USART6_RX_PIN 13
 
+#define BOARD_USART4_RX_PIN 48
+#define BOARD_USART4_TX_PIN 47
 
-#undef EXTERN
+#define BOARD_USART5_RX_PIN 26
 
-}
-# 45 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cmath" 2
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/math.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/math.h"
-#define __INCLUDE_NUTTX_MATH_H 
-# 52 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/math.h"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h" 1
+#define BOARD_SPEKTRUM_RX_PIN BOARD_RFM22B_INT_PIN
+#define BOARD_SPEKTRUM_PWR_PIN BOARD_RFM22B_CS_PIN
+#define BOARD_SPEKTRUM_PWR_ON 1
+#define BOARD_SPEKTRUM_PWR_OFF 0
 
 
-#define _MATH_H_ 
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 1 3
-# 60 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 3
-#define __IEEE_LITTLE_ENDIAN 
-# 6 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h" 2
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 1 3
-# 13 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
-#define _ANSIDECL_H_ 
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 1 3
+#define BOARD_NR_SPI 3
+#define BOARD_SPI1_SCK_PIN 52
+#define BOARD_SPI1_MISO_PIN 53
+#define BOARD_SPI1_MOSI_PIN 54
+#define BOARD_SPI2_SCK_PIN 255
+#define BOARD_SPI2_MISO_PIN 255
+#define BOARD_SPI2_MOSI_PIN 255
+#define BOARD_SPI3_MOSI_PIN 18
+#define BOARD_SPI3_MISO_PIN 17
+#define BOARD_SPI3_SCK_PIN 16
 
+#define BOARD_DATAFLASH_CS_PIN 104
 
+#define BOARD_HMC5883_DRDY_PIN 38
 
+#define MPU6000_CS_PIN 51
+#define BOARD_MPU6000_DRDY_PIN 10
 
 
+#define BOARD_SBUS_INVERTER 6
 
+#define BOARD_USB_SENSE 11
 
-#define __NEWLIB_H__ 1
 
 
+#define BOARD_SOFT_SCL 14
+#define BOARD_SOFT_SDA 15
 
 
+#define BOARD_SOFTSERIAL_TX 14
+#define BOARD_SOFTSERIAL_RX 15
 
-#define _NEWLIB_VERSION "2.1.0"
 
+#define BOARD_NR_GPIO_PINS 108
+# 1 "<command-line>" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/defs.h" 1
 
+using namespace std;
 
+extern void clock_gettime(int mode, void *ptr);
+# 1 "<command-line>" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.cpp"
+# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.cpp"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 1
 
 
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/cmath" 1
 
-#define _WANT_IO_LONG_LONG 1
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 1 3
+# 39 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 3
 
-#define _WANT_REGISTER_FINI 1
-# 40 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 3
-#define _MB_LEN_MAX 1
-# 50 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 3
-#define HAVE_INITFINI_ARRAY 1
+# 40 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 3
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 1 3
+# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_CXX_CONFIG_H 1
 
 
-#define _ATEXIT_DYNAMIC_ALLOC 1
+#define __GLIBCXX__ 20141119
+# 43 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_PURE __attribute__ ((__pure__))
 
 
-#define _HAVE_LONG_DOUBLE 1
 
+#define _GLIBCXX_CONST __attribute__ ((__const__))
 
-#define _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1
 
 
-#define _LDBL_EQ_DBL 1
-# 72 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 3
-#define _FVWRITE_IN_STREAMIO 1
+#define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
+# 64 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 1
 
 
-#define _FSEEK_OPTIMIZATION 1
+#define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
+# 78 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_USE_DEPRECATED 1
 
 
-#define _WIDE_ORIENT 1
 
+#define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))
 
-#define _UNBUF_STREAM_OPT 1
-# 16 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 2 3
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 1 3
 
-#define __SYS_CONFIG_H__ 
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 1 3
-# 5 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 2 3
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/features.h" 1 3
-# 22 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/features.h" 3
-#define _SYS_FEATURES_H 
 
 
-extern "C" {
 
+#define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
+# 98 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_CONSTEXPR constexpr
+#define _GLIBCXX_USE_CONSTEXPR constexpr
+# 109 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_NOEXCEPT noexcept
+#define _GLIBCXX_USE_NOEXCEPT noexcept
+#define _GLIBCXX_THROW(_EXC) 
+# 120 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT
 
 
 
 
-#define __NEWLIB__ 2
-#define __NEWLIB_MINOR__ 1
 
 
+#define _GLIBCXX_THROW_OR_ABORT(_EXC) (__builtin_abort())
+# 141 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_EXTERN_TEMPLATE 1
+# 186 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+namespace std
+{
+  typedef unsigned int size_t;
+  typedef int ptrdiff_t;
 
 
-#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
+  typedef decltype(nullptr) nullptr_t;
 
+}
 
 
 
+#define _GLIBCXX_INLINE_VERSION 0
+# 240 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_BEGIN_NAMESPACE_VERSION 
+#define _GLIBCXX_END_NAMESPACE_VERSION 
+# 321 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_STD_A std
 
 
-#define __GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)
-# 233 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/features.h" 3
-}
-# 6 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 2 3
-# 216 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 3
-#define _POINTER_INT long
 
+#define _GLIBCXX_STD_C std
 
 
 
+#define _GLIBCXX_BEGIN_NAMESPACE_ALGO 
 
-#undef __RAND_MAX
 
 
+#define _GLIBCXX_END_NAMESPACE_ALGO 
 
-#define __RAND_MAX 0x7fffffff
-# 248 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 3
-#define __IMPORT 
 
 
+#define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER 
 
 
 
+#define _GLIBCXX_END_NAMESPACE_CONTAINER 
 
-#define _READ_WRITE_RETURN_TYPE int
 
 
 
+#undef _GLIBCXX_LONG_DOUBLE_COMPAT
+# 358 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_NAMESPACE_LDBL 
+#define _GLIBCXX_BEGIN_NAMESPACE_LDBL 
+#define _GLIBCXX_END_NAMESPACE_LDBL 
 
 
-#define _READ_WRITE_BUFSIZE_TYPE int
-# 17 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 2 3
 
 
+#define __glibcxx_assert(_Condition) 
+# 411 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) 
 
 
+#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) 
 
 
-#define _HAVE_STDC 
-# 34 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
-#define _BEGIN_STD_C extern "C" {
-#define _END_STD_C }
 
+#define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
+#define _GLIBCXX_END_EXTERN_C }
+# 430 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/os_defines.h" 1 3
+# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/os_defines.h" 3
+#define _GLIBCXX_OS_DEFINES 1
+# 431 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 2 3
 
-#define _NOTHROW __attribute__ ((__nothrow__))
-# 50 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
-#define _PTR void *
-#define _AND ,
-#define _NOARGS void
-#define _CONST const
-#define _VOLATILE volatile
-#define _SIGNED signed
-#define _DOTS , ...
-#define _VOID void
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/cpu_defines.h" 1 3
+# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/cpu_defines.h" 3
+#define _GLIBCXX_CPU_DEFINES 1
+# 434 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 2 3
 
 
 
 
+#define _GLIBCXX_PSEUDO_VISIBILITY(V) 
 
-#define _EXFUN_NOTHROW(name,proto) name proto _NOTHROW
-#define _EXFUN(name,proto) name proto
-#define _EXPARM(name,proto) (* name) proto
-#define _EXFNPTR(name,proto) (* name) proto
 
-#define _DEFUN(name,arglist,args) name(args)
-#define _DEFUN_VOID(name) name(_NOARGS)
-#define _CAST_VOID (void)
 
-#define _LONG_DOUBLE long double
 
 
-#define _PARAMS(paramlist) paramlist
-# 101 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
-#define _ATTRIBUTE(attrs) __attribute__ (attrs)
-# 127 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
-#define _ELIDABLE_INLINE static __inline__
 
+#define _GLIBCXX_WEAK_DEFINITION 
+# 454 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_FAST_MATH 1
+# 463 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define __N(msgid) (msgid)
 
 
-#define _NOINLINE __attribute__ ((__noinline__))
-#define _NOINLINE_STATIC _NOINLINE static
-# 7 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h" 2
+#undef min
+#undef max
 
-extern "C" {
 
 
-#define _M_LN2 0.693147180559945309417
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h"
-#define HUGE_VAL (__builtin_huge_val())
 
 
 
-#define HUGE_VALF (__builtin_huge_valf())
+#define _GLIBCXX_HAVE_ACOSF 1
 
 
 
-#define HUGE_VALL (__builtin_huge_vall())
 
 
+#define _GLIBCXX_HAVE_ASINF 1
 
-#define INFINITY (__builtin_inff())
 
 
 
-#define NAN (__builtin_nanf(""))
-# 87 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h"
-extern double atan (double);
-extern double cos (double);
-extern double sin (double);
-extern double tan (double);
-extern double tanh (double);
-extern double frexp (double, int *);
-extern double modf (double, double *);
-extern double ceil (double);
-extern double fabs (double);
-extern double floor (double);
 
+#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 1
 
 
+#define _GLIBCXX_HAVE_ATAN2F 1
 
 
 
-extern double acos (double);
-extern double asin (double);
-extern double atan2 (double, double);
-extern double cosh (double);
-extern double sinh (double);
-extern double exp (double);
-extern double ldexp (double, int);
-extern double log (double);
-extern double log10 (double);
-extern double pow (double, double);
-extern double sqrt (double);
-extern double fmod (double, double);
-# 123 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h"
-#define FLT_EVAL_METHOD 0
-typedef float float_t;
-typedef double double_t;
 
 
-#define FP_NAN 0
-#define FP_INFINITE 1
-#define FP_ZERO 2
-#define FP_SUBNORMAL 3
-#define FP_NORMAL 4
+#define _GLIBCXX_HAVE_ATANF 1
+# 507 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_CEILF 1
 
 
-#define FP_ILOGB0 (-INT_MAX)
 
 
-#define FP_ILOGBNAN INT_MAX
 
+#define _GLIBCXX_HAVE_COMPLEX_H 1
 
 
-#define MATH_ERRNO 1
+#define _GLIBCXX_HAVE_COSF 1
 
 
-#define MATH_ERREXCEPT 2
+#define _GLIBCXX_HAVE_COSHF 1
+# 531 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_EBADMSG 1
 
 
-#define math_errhandling MATH_ERRNO
+#define _GLIBCXX_HAVE_ECANCELED 1
 
 
-extern int __isinff (float x);
-extern int __isinfd (double x);
-extern int __isnanf (float x);
-extern int __isnand (double x);
-extern int __fpclassifyf (float x);
-extern int __fpclassifyd (double x);
-extern int __signbitf (float x);
-extern int __signbitd (double x);
+#define _GLIBCXX_HAVE_ECHILD 1
 
-#define fpclassify(__x) ((sizeof(__x) == sizeof(float)) ? __fpclassifyf(__x) : __fpclassifyd(__x))
 
+#define _GLIBCXX_HAVE_EIDRM 1
 
 
 
-#define isfinite(__y) (__extension__ ({int __cy = fpclassify(__y); __cy != FP_INFINITE && __cy != FP_NAN;}))
-# 177 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h"
-#define isinf(y) (fpclassify(y) == FP_INFINITE)
 
 
+#define _GLIBCXX_HAVE_ENODATA 1
 
-#define isnan(y) (fpclassify(y) == FP_NAN)
 
+#define _GLIBCXX_HAVE_ENOLINK 1
 
-#define isnormal(y) (fpclassify(y) == FP_NORMAL)
-#define signbit(__x) ((sizeof(__x) == sizeof(float)) ? __signbitf(__x) : __signbitd(__x))
 
+#define _GLIBCXX_HAVE_ENOSPC 1
 
 
-#define isgreater(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x > __y);}))
+#define _GLIBCXX_HAVE_ENOSR 1
 
 
-#define isgreaterequal(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x >= __y);}))
+#define _GLIBCXX_HAVE_ENOSTR 1
 
 
-#define isless(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x < __y);}))
+#define _GLIBCXX_HAVE_ENOTRECOVERABLE 1
 
 
-#define islessequal(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x <= __y);}))
+#define _GLIBCXX_HAVE_ENOTSUP 1
 
 
-#define islessgreater(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x < __y || __x > __y);}))
+#define _GLIBCXX_HAVE_EOVERFLOW 1
 
 
+#define _GLIBCXX_HAVE_EOWNERDEAD 1
 
-#define isunordered(a,b) (__extension__ ({__typeof__(a) __a = (a); __typeof__(b) __b = (b); fpclassify(__a) == FP_NAN || fpclassify(__b) == FP_NAN;}))
 
+#define _GLIBCXX_HAVE_EPERM 1
 
 
+#define _GLIBCXX_HAVE_EPROTO 1
 
 
-extern double infinity (void);
-extern double nan (const char *);
-extern int finite (double);
-extern double copysign (double, double);
-extern double logb (double);
-extern int ilogb (double);
+#define _GLIBCXX_HAVE_ETIME 1
 
-extern double asinh (double);
-extern double cbrt (double);
-extern double nextafter (double, double);
-extern double rint (double);
-extern double scalbn (double, int);
 
-extern double exp2 (double);
-extern double scalbln (double, long int);
-extern double tgamma (double);
-extern double nearbyint (double);
-extern long int lrint (double);
-extern long long int llrint (double);
-extern double round (double);
-extern long int lround (double);
-extern long long int llround (double);
-extern double trunc (double);
-extern double remquo (double, double, int *);
-extern double fdim (double, double);
-extern double fmax (double, double);
-extern double fmin (double, double);
-extern double fma (double, double, double);
+#define _GLIBCXX_HAVE_ETIMEDOUT 1
 
 
-extern double log1p (double);
-extern double expm1 (double);
+#define _GLIBCXX_HAVE_ETXTBSY 1
 
 
+#define _GLIBCXX_HAVE_EWOULDBLOCK 1
 
-extern double acosh (double);
-extern double atanh (double);
-extern double remainder (double, double);
-extern double gamma (double);
-extern double lgamma (double);
-extern double erf (double);
-extern double erfc (double);
-extern double log2 (double);
 
 
 
 
+#define _GLIBCXX_HAVE_EXPF 1
 
-extern double hypot (double, double);
 
 
 
 
+#define _GLIBCXX_HAVE_FABSF 1
+# 618 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_FLOAT_H 1
 
 
-extern float atanf (float);
-extern float cosf (float);
-extern float sinf (float);
-extern float tanf (float);
-extern float tanhf (float);
-extern float frexpf (float, int *);
-extern float modff (float, float *);
-extern float ceilf (float);
-extern float fabsf (float);
-extern float floorf (float);
+#define _GLIBCXX_HAVE_FLOORF 1
 
 
-extern float acosf (float);
-extern float asinf (float);
-extern float atan2f (float, float);
-extern float coshf (float);
-extern float sinhf (float);
-extern float expf (float);
-extern float ldexpf (float, int);
-extern float logf (float);
-extern float log10f (float);
-extern float powf (float, float);
-extern float sqrtf (float);
-extern float fmodf (float, float);
 
 
 
+#define _GLIBCXX_HAVE_FMODF 1
+# 639 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_FREXPF 1
 
-extern float exp2f (float);
-extern float scalblnf (float, long int);
-extern float tgammaf (float);
-extern float nearbyintf (float);
-extern long int lrintf (float);
-extern long long llrintf (float);
-extern float roundf (float);
-extern long int lroundf (float);
-extern long long int llroundf (float);
-extern float truncf (float);
-extern float remquof (float, float, int *);
-extern float fdimf (float, float);
-extern float fmaxf (float, float);
-extern float fminf (float, float);
-extern float fmaf (float, float, float);
 
-extern float infinityf (void);
-extern float nanf (const char *);
-extern int finitef (float);
-extern float copysignf (float, float);
-extern float logbf (float);
-extern int ilogbf (float);
 
-extern float asinhf (float);
-extern float cbrtf (float);
-extern float nextafterf (float, float);
-extern float rintf (float);
-extern float scalbnf (float, int);
-extern float log1pf (float);
-extern float expm1f (float);
 
 
-extern float acoshf (float);
-extern float atanhf (float);
-extern float remainderf (float, float);
-extern float gammaf (float);
-extern float lgammaf (float);
-extern float erff (float);
-extern float erfcf (float);
-extern float log2f (float);
+#define _GLIBCXX_HAVE_GETIPINFO 1
 
 
+#define _GLIBCXX_HAVE_GETS 1
 
-extern float hypotf (float, float);
 
+#define _GLIBCXX_HAVE_HYPOT 1
+# 660 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_ICONV 1
 
 
+#define _GLIBCXX_HAVE_IEEEFP_H 1
 
 
+#define _GLIBCXX_HAVE_INT64_T 1
 
-extern long double atanl (long double);
-extern long double cosl (long double);
-extern long double sinl (long double);
-extern long double tanl (long double);
-extern long double tanhl (long double);
-extern long double frexpl (long double value, int *);
-extern long double modfl (long double, long double *);
-extern long double ceill (long double);
-extern long double fabsl (long double);
-extern long double floorl (long double);
-extern long double log1pl (long double);
-extern long double expm1l (long double);
 
 
 
 
-extern long double acosl (long double);
-extern long double asinl (long double);
-extern long double atan2l (long double, long double);
-extern long double coshl (long double);
-extern long double sinhl (long double);
-extern long double expl (long double);
-extern long double ldexpl (long double, int);
-extern long double logl (long double);
-extern long double log2l (long double);
-extern long double log10l (long double);
-extern long double powl (long double, long double);
-extern long double sqrtl (long double);
-extern long double fmodl (long double, long double);
-extern long double hypotl (long double, long double);
+#define _GLIBCXX_HAVE_INT64_T_LONG_LONG 1
 
 
-extern long double copysignl (long double, long double);
-extern long double nanl (const char *);
-extern int ilogbl (long double);
-extern long double asinhl (long double);
-extern long double cbrtl (long double);
-extern long double nextafterl (long double, long double);
-extern long double rintl (long double);
-extern long double scalbnl (long double, int);
-extern long double exp2l (long double);
-extern long double scalblnl (long double, long);
-extern long double tgammal (long double);
-extern long double nearbyintl (long double);
-extern long int lrintl (long double);
-extern long long int llrintl (long double);
-extern long double roundl (long double);
-extern long lroundl (long double);
-extern long long int llroundl (long double);
-extern long double truncl (long double);
-extern long double remquol (long double, long double, int *);
-extern long double fdiml (long double, long double);
-extern long double fmaxl (long double, long double);
-extern long double fminl (long double, long double);
-extern long double fmal (long double, long double, long double);
+#define _GLIBCXX_HAVE_INTTYPES_H 1
+# 696 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_ISWBLANK 1
 
-extern long double acoshl (long double);
-extern long double atanhl (long double);
-extern long double remainderl (long double, long double);
-extern long double lgammal (long double);
-extern long double erfl (long double);
-extern long double erfcl (long double);
-# 420 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h"
-extern double drem (double, double);
-extern void sincos (double, double *, double *);
-extern double gamma_r (double, int *);
-extern double lgamma_r (double, int *);
 
-extern double y0 (double);
-extern double y1 (double);
-extern double yn (int, double);
-extern double j0 (double);
-extern double j1 (double);
-extern double jn (int, double);
+#define _GLIBCXX_HAVE_LC_MESSAGES 1
 
-extern float dremf (float, float);
-extern void sincosf (float, float *, float *);
-extern float gammaf_r (float, int *);
-extern float lgammaf_r (float, int *);
 
-extern float y0f (float);
-extern float y1f (float);
-extern float ynf (int, float);
-extern float j0f (float);
-extern float j1f (float);
-extern float jnf (int, float);
+#define _GLIBCXX_HAVE_LDEXPF 1
+# 729 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_LOCALE_H 1
 
 
+#define _GLIBCXX_HAVE_LOG10F 1
 
-extern double exp10 (double);
 
 
-extern double pow10 (double);
 
 
-extern float exp10f (float);
+#define _GLIBCXX_HAVE_LOGF 1
 
 
-extern float pow10f (float);
-# 464 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/math.h"
-#define signgam (*__signgam())
-extern int *__signgam (void);
 
 
-#define __signgam_r(ptr) _REENT_SIGNGAM(ptr)
 
+#define _GLIBCXX_HAVE_MACHINE_ENDIAN_H 1
 
 
+#define _GLIBCXX_HAVE_MACHINE_PARAM_H 1
 
 
-struct __exception
+#define _GLIBCXX_HAVE_MBSTATE_T 1
+# 759 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_MODFF 1
+# 771 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_POWF 1
+# 795 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_SINF 1
 
 
+#define _GLIBCXX_HAVE_SINHF 1
+# 807 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_SLEEP 1
 
-{
-  int type;
-  char *name;
-  double arg1;
-  double arg2;
-  double retval;
-  int err;
-};
 
+#define _GLIBCXX_HAVE_SQRTF 1
 
-extern int matherr (struct __exception *e);
 
 
 
 
+#define _GLIBCXX_HAVE_STDALIGN_H 1
 
 
-#define DOMAIN 1
-#define SING 2
-#define OVERFLOW 3
-#define UNDERFLOW 4
-#define TLOSS 5
-#define PLOSS 6
+#define _GLIBCXX_HAVE_STDBOOL_H 1
 
 
+#define _GLIBCXX_HAVE_STDINT_H 1
 
-#define MAXFLOAT 3.40282347e+38F
 
-#define M_E 2.7182818284590452354
-#define M_LOG2E 1.4426950408889634074
-#define M_LOG10E 0.43429448190325182765
-#define M_LN2 _M_LN2
-#define M_LN10 2.30258509299404568402
-#define M_PI 3.14159265358979323846
-#define M_TWOPI (M_PI * 2.0)
-#define M_PI_2 1.57079632679489661923
-#define M_PI_4 0.78539816339744830962
-#define M_3PI_4 2.3561944901923448370E0
-#define M_SQRTPI 1.77245385090551602792981
-#define M_1_PI 0.31830988618379067154
-#define M_2_PI 0.63661977236758134308
-#define M_2_SQRTPI 1.12837916709551257390
-#define M_DEG_TO_RAD 0.01745329251994
-#define M_RAD_TO_DEG 57.2957795130823
-#define M_SQRT2 1.41421356237309504880
-#define M_SQRT1_2 0.70710678118654752440
-#define M_LN2LO 1.9082149292705877000E-10
-#define M_LN2HI 6.9314718036912381649E-1
-#define M_SQRT3 1.73205080756887719000
-#define M_IVLN10 0.43429448190325182765
-#define M_LOG2_E _M_LN2
-#define M_INVLN2 1.4426950408889633870E0
+#define _GLIBCXX_HAVE_STDLIB_H 1
 
 
-#define M_E_F 2.7182818284590452354f
-#define M_LOG2E_F 1.4426950408889634074f
-#define M_LOG10E_F 0.43429448190325182765f
-#define M_LN2_F _M_LN2_F
-#define M_LN10_F 2.30258509299404568402f
-#define M_PI_F 3.14159265358979323846f
-#define M_TWOPI_F (M_PI_F * 2.0f)
-#define M_PI_2_F 1.57079632679489661923f
-#define M_PI_4_F 0.78539816339744830962f
-#define M_3PI_4_F 2.3561944901923448370E0f
-#define M_SQRTPI_F 1.77245385090551602792981f
-#define M_1_PI_F 0.31830988618379067154f
-#define M_2_PI_F 0.63661977236758134308f
-#define M_2_SQRTPI_F 1.12837916709551257390f
-#define M_DEG_TO_RAD_F 0.01745329251994f
-#define M_RAD_TO_DEG_F 57.2957795130823f
-#define M_SQRT2_F 1.41421356237309504880f
-#define M_SQRT1_2_F 0.70710678118654752440f
-#define M_LN2LO_F 1.9082149292705877000E-10f
-#define M_LN2HI_F 6.9314718036912381649E-1f
-#define M_SQRT3_F 1.73205080756887719000f
-#define M_IVLN10_F 0.43429448190325182765f
-#define M_LOG2_E_F _M_LN2_F
-#define M_INVLN2_F 1.4426950408889633870E0f
 
 
 
-enum __fdlibm_version
-{
-  __fdlibm_ieee = -1,
-  __fdlibm_svid,
-  __fdlibm_xopen,
-  __fdlibm_posix
-};
-
-#define _LIB_VERSION_TYPE enum __fdlibm_version
-#define _LIB_VERSION __fdlib_version
-
-extern enum __fdlibm_version __fdlib_version;
+#define _GLIBCXX_HAVE_STRERROR_R 1
 
-#define _IEEE_ __fdlibm_ieee
-#define _SVID_ __fdlibm_svid
-#define _XOPEN_ __fdlibm_xopen
-#define _POSIX_ __fdlibm_posix
 
+#define _GLIBCXX_HAVE_STRINGS_H 1
 
 
-}
-# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/math.h" 2
-# 47 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cmath" 2
+#define _GLIBCXX_HAVE_STRING_H 1
 
 
+#define _GLIBCXX_HAVE_STRTOF 1
+# 868 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_SYS_PARAM_H 1
 
 
+#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1
+# 880 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_SYS_STAT_H 1
 
-namespace std
-{
 
-  using ::acosf;
-  using ::asinf;
-  using ::atanf;
-  using ::atan2f;
-  using ::ceilf;
-  using ::cosf;
-  using ::coshf;
-  using ::expf;
-  using ::fabsf;
-  using ::floorf;
-  using ::fmodf;
-  using ::frexpf;
-  using ::ldexpf;
-  using ::logf;
-  using ::log10f;
-  using ::log2f;
-  using ::modff;
-  using ::roundf;
-  using ::powf;
-  using ::sinf;
-  using ::sinhf;
-  using ::sqrtf;
-  using ::tanf;
-  using ::tanhf;
 
 
 
-  using ::acos;
-  using ::asin;
-  using ::atan;
-  using ::atan2;
-  using ::ceil;
-  using ::cos;
-  using ::cosh;
-  using ::exp;
-  using ::fabs;
-  using ::floor;
-  using ::fmod;
-  using ::frexp;
-  using ::ldexp;
-  using ::log;
-  using ::log10;
-  using ::log2;
-  using ::modf;
-  using ::round;
-  using ::pow;
-  using ::sin;
-  using ::sinh;
-  using ::sqrt;
-  using ::tan;
-  using ::tanh;
+#define _GLIBCXX_HAVE_SYS_TIME_H 1
 
 
+#define _GLIBCXX_HAVE_SYS_TYPES_H 1
+# 898 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_S_ISREG 1
 
-  using ::acosl;
-  using ::asinl;
-  using ::atanl;
-  using ::atan2l;
-  using ::ceill;
-  using ::cosl;
-  using ::coshl;
-  using ::expl;
-  using ::fabsl;
-  using ::floorl;
-  using ::fmodl;
-  using ::frexpl;
-  using ::ldexpl;
-  using ::logl;
-  using ::log10l;
-  using ::log2l;
-  using ::modfl;
-  using ::roundl;
-  using ::powl;
-  using ::sinl;
-  using ::sinhl;
-  using ::sqrtl;
-  using ::tanl;
-  using ::tanhl;
 
+#define _GLIBCXX_HAVE_TANF 1
 
-}
-# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/cmath" 2
-# 13 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/cmath"
-#define GLIBC_FIX_NEEDED 0
-# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 1 3
-# 38 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-#define _GLIBCXX_NUMERIC_LIMITS 1
 
+#define _GLIBCXX_HAVE_TANHF 1
+# 913 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_HAVE_TGMATH_H 1
        
-# 41 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 1 3
-# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_CXX_CONFIG_H 1
 
 
-#define __GLIBCXX__ 20141119
-# 43 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_PURE __attribute__ ((__pure__))
 
+#define _GLIBCXX_HAVE_UNISTD_H 1
 
 
-#define _GLIBCXX_CONST __attribute__ ((__const__))
+#define _GLIBCXX_HAVE_USLEEP 1
 
 
+#define _GLIBCXX_HAVE_VFWSCANF 1
 
-#define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
-# 64 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 1
 
+#define _GLIBCXX_HAVE_VSWSCANF 1
 
-#define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
-# 78 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_USE_DEPRECATED 1
 
+#define _GLIBCXX_HAVE_VWSCANF 1
 
 
-#define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))
+#define _GLIBCXX_HAVE_WCHAR_H 1
 
 
+#define _GLIBCXX_HAVE_WCSTOF 1
 
 
+#define _GLIBCXX_HAVE_WCTYPE_H 1
+# 1142 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define LT_OBJDIR ".libs/"
 
 
-#define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
-# 98 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_CONSTEXPR constexpr
-#define _GLIBCXX_USE_CONSTEXPR constexpr
-# 109 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_NOEXCEPT noexcept
-#define _GLIBCXX_USE_NOEXCEPT noexcept
-#define _GLIBCXX_THROW(_EXC) 
-# 120 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT
 
 
 
+#define _GLIBCXX_PACKAGE_BUGREPORT ""
 
 
+#define _GLIBCXX_PACKAGE_NAME "package-unused"
 
-#define _GLIBCXX_THROW_OR_ABORT(_EXC) (__builtin_abort())
-# 141 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_EXTERN_TEMPLATE 1
-# 186 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-namespace std
-{
-  typedef unsigned int size_t;
-  typedef int ptrdiff_t;
 
+#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"
 
-  typedef decltype(nullptr) nullptr_t;
 
-}
+#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"
 
 
+#define _GLIBCXX_PACKAGE_URL ""
 
-#define _GLIBCXX_INLINE_VERSION 0
-# 240 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_BEGIN_NAMESPACE_VERSION 
-#define _GLIBCXX_END_NAMESPACE_VERSION 
-# 321 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_STD_A std
 
+#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
+# 1181 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define STDC_HEADERS 1
 
 
-#define _GLIBCXX_STD_C std
 
 
 
-#define _GLIBCXX_BEGIN_NAMESPACE_ALGO 
+#define _GLIBCXX_ATOMIC_BUILTINS 1
 
 
 
-#define _GLIBCXX_END_NAMESPACE_ALGO 
 
 
 
-#define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER 
+#define _GLIBCXX_FULLY_DYNAMIC_STRING 0
 
 
 
-#define _GLIBCXX_END_NAMESPACE_CONTAINER 
 
 
+#define _GLIBCXX_HOSTED 1
 
 
-#undef _GLIBCXX_LONG_DOUBLE_COMPAT
-# 358 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_NAMESPACE_LDBL 
-#define _GLIBCXX_BEGIN_NAMESPACE_LDBL 
-#define _GLIBCXX_END_NAMESPACE_LDBL 
 
 
+#define _GLIBCXX_PTRDIFF_T_IS_INT 1
 
 
-#define __glibcxx_assert(_Condition) 
-# 411 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) 
 
 
-#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) 
 
+#define _GLIBCXX_SIZE_T_IS_UINT 1
 
 
-#define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
-#define _GLIBCXX_END_EXTERN_C }
-# 430 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/os_defines.h" 1 3
-# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/os_defines.h" 3
-#define _GLIBCXX_OS_DEFINES 1
-# 431 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 2 3
 
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/cpu_defines.h" 1 3
-# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/cpu_defines.h" 3
-#define _GLIBCXX_CPU_DEFINES 1
-# 434 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 2 3
 
+#define _GLIBCXX_STDIO_EOF -1
 
 
+#define _GLIBCXX_STDIO_SEEK_CUR 1
 
-#define _GLIBCXX_PSEUDO_VISIBILITY(V) 
 
+#define _GLIBCXX_STDIO_SEEK_END 2
+# 1256 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_USE_C99_CTYPE_TR1 1
 
 
 
 
 
-#define _GLIBCXX_WEAK_DEFINITION 
-# 456 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_FAST_MATH 0
 
 
+#define _GLIBCXX_USE_C99_INTTYPES_TR1 1
 
 
 
+#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1
 
-#define __N(msgid) (msgid)
 
 
-#undef min
-#undef max
+#define _GLIBCXX_USE_C99_MATH 1
 
 
 
 
 
 
-#define _GLIBCXX_HAVE_ACOSF 1
 
+#define _GLIBCXX_USE_C99_STDINT_TR1 1
+# 1300 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_USE_GETTIMEOFDAY 1
+# 1312 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_USE_LONG_LONG 1
+# 1331 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1
+# 1340 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
+#define _GLIBCXX_USE_TMPNAM 1
 
 
+#define _GLIBCXX_USE_WCHAR_T 1
 
 
-#define _GLIBCXX_HAVE_ASINF 1
+#define _GLIBCXX_VERBOSE 1
 
 
 
 
 
-#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 1
+#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
+# 42 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/bits/cpp_type_traits.h" 1 3
+# 33 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/bits/cpp_type_traits.h" 3
+#define _CPP_TYPE_TRAITS_H 1
 
 
-#define _GLIBCXX_HAVE_ATAN2F 1
+# 36 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/bits/cpp_type_traits.h" 3
+# 68 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/bits/cpp_type_traits.h" 3
+namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
+{
 
 
+  template<typename _Iterator, typename _Container>
+    class __normal_iterator;
 
 
+}
 
-#define _GLIBCXX_HAVE_ATANF 1
-# 507 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_CEILF 1
+namespace std __attribute__ ((__visibility__ ("default")))
+{
 
 
+  struct __true_type { };
+  struct __false_type { };
 
+  template<bool>
+    struct __truth_type
+    { typedef __false_type __type; };
 
+  template<>
+    struct __truth_type<true>
+    { typedef __true_type __type; };
 
-#define _GLIBCXX_HAVE_COMPLEX_H 1
 
 
-#define _GLIBCXX_HAVE_COSF 1
+  template<class _Sp, class _Tp>
+    struct __traitor
+    {
+      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
+      typedef typename __truth_type<__value>::__type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_COSHF 1
-# 531 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_EBADMSG 1
+  template<typename, typename>
+    struct __are_same
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
+  template<typename _Tp>
+    struct __are_same<_Tp, _Tp>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_ECANCELED 1
 
+  template<typename _Tp>
+    struct __is_void
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
-#define _GLIBCXX_HAVE_ECHILD 1
+  template<>
+    struct __is_void<void>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_EIDRM 1
 
 
+  template<typename _Tp>
+    struct __is_integer
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
 
 
-#define _GLIBCXX_HAVE_ENODATA 1
 
+  template<>
+    struct __is_integer<bool>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_ENOLINK 1
+  template<>
+    struct __is_integer<char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
+  template<>
+    struct __is_integer<signed char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_ENOSPC 1
+  template<>
+    struct __is_integer<unsigned char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_ENOSR 1
+  template<>
+    struct __is_integer<wchar_t>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_ENOSTR 1
 
+  template<>
+    struct __is_integer<char16_t>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_ENOTRECOVERABLE 1
+  template<>
+    struct __is_integer<char32_t>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_ENOTSUP 1
+  template<>
+    struct __is_integer<short>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
+  template<>
+    struct __is_integer<unsigned short>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_EOVERFLOW 1
+  template<>
+    struct __is_integer<int>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
+  template<>
+    struct __is_integer<unsigned int>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_EOWNERDEAD 1
+  template<>
+    struct __is_integer<long>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
+  template<>
+    struct __is_integer<unsigned long>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_EPERM 1
-
+  template<>
+    struct __is_integer<long long>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_EPROTO 1
+  template<>
+    struct __is_integer<unsigned long long>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_ETIME 1
 
 
-#define _GLIBCXX_HAVE_ETIMEDOUT 1
+  template<typename _Tp>
+    struct __is_floating
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_ETXTBSY 1
+  template<>
+    struct __is_floating<float>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
+  template<>
+    struct __is_floating<double>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_EWOULDBLOCK 1
+  template<>
+    struct __is_floating<long double>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
 
 
+  template<typename _Tp>
+    struct __is_pointer
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
-#define _GLIBCXX_HAVE_EXPF 1
+  template<typename _Tp>
+    struct __is_pointer<_Tp*>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
 
 
+  template<typename _Tp>
+    struct __is_normal_iterator
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
-#define _GLIBCXX_HAVE_FABSF 1
-# 618 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_FLOAT_H 1
+  template<typename _Iterator, typename _Container>
+    struct __is_normal_iterator< __gnu_cxx::__normal_iterator<_Iterator,
+             _Container> >
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_FLOORF 1
 
 
+  template<typename _Tp>
+    struct __is_arithmetic
+    : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
+    { };
 
 
 
-#define _GLIBCXX_HAVE_FMODF 1
-# 639 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_FREXPF 1
 
+  template<typename _Tp>
+    struct __is_scalar
+    : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
+    { };
 
 
 
 
-#define _GLIBCXX_HAVE_GETIPINFO 1
+  template<typename _Tp>
+    struct __is_char
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
+  template<>
+    struct __is_char<char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_GETS 1
 
+  template<>
+    struct __is_char<wchar_t>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_HYPOT 1
-# 660 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_ICONV 1
 
+  template<typename _Tp>
+    struct __is_byte
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
-#define _GLIBCXX_HAVE_IEEEFP_H 1
+  template<>
+    struct __is_byte<char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
+  template<>
+    struct __is_byte<signed char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
-#define _GLIBCXX_HAVE_INT64_T 1
+  template<>
+    struct __is_byte<unsigned char>
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
 
 
+  template<typename _Tp>
+    struct __is_move_iterator
+    {
+      enum { __value = 0 };
+      typedef __false_type __type;
+    };
 
-#define _GLIBCXX_HAVE_INT64_T_LONG_LONG 1
 
+  template<typename _Iterator>
+    class move_iterator;
 
-#define _GLIBCXX_HAVE_INTTYPES_H 1
-# 696 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_ISWBLANK 1
+  template<typename _Iterator>
+    struct __is_move_iterator< move_iterator<_Iterator> >
+    {
+      enum { __value = 1 };
+      typedef __true_type __type;
+    };
 
 
-#define _GLIBCXX_HAVE_LC_MESSAGES 1
 
+}
+# 43 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/ext/type_traits.h" 1 3
+# 30 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/ext/type_traits.h" 3
+#define _EXT_TYPE_TRAITS 1
 
-#define _GLIBCXX_HAVE_LDEXPF 1
-# 729 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_LOCALE_H 1
 
+# 33 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/ext/type_traits.h" 3
 
-#define _GLIBCXX_HAVE_LOG10F 1
 
 
 
+namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
+{
 
 
-#define _GLIBCXX_HAVE_LOGF 1
 
+  template<bool, typename>
+    struct __enable_if
+    { };
 
+  template<typename _Tp>
+    struct __enable_if<true, _Tp>
+    { typedef _Tp __type; };
 
 
 
-#define _GLIBCXX_HAVE_MACHINE_ENDIAN_H 1
+  template<bool _Cond, typename _Iftrue, typename _Iffalse>
+    struct __conditional_type
+    { typedef _Iftrue __type; };
 
+  template<typename _Iftrue, typename _Iffalse>
+    struct __conditional_type<false, _Iftrue, _Iffalse>
+    { typedef _Iffalse __type; };
 
-#define _GLIBCXX_HAVE_MACHINE_PARAM_H 1
 
 
-#define _GLIBCXX_HAVE_MBSTATE_T 1
-# 759 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_MODFF 1
-# 771 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_POWF 1
-# 795 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_SINF 1
+  template<typename _Tp>
+    struct __add_unsigned
+    {
+    private:
+      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
 
+    public:
+      typedef typename __if_type::__type __type;
+    };
 
-#define _GLIBCXX_HAVE_SINHF 1
-# 807 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_SLEEP 1
+  template<>
+    struct __add_unsigned<char>
+    { typedef unsigned char __type; };
 
+  template<>
+    struct __add_unsigned<signed char>
+    { typedef unsigned char __type; };
 
-#define _GLIBCXX_HAVE_SQRTF 1
+  template<>
+    struct __add_unsigned<short>
+    { typedef unsigned short __type; };
 
+  template<>
+    struct __add_unsigned<int>
+    { typedef unsigned int __type; };
 
+  template<>
+    struct __add_unsigned<long>
+    { typedef unsigned long __type; };
 
+  template<>
+    struct __add_unsigned<long long>
+    { typedef unsigned long long __type; };
 
 
-#define _GLIBCXX_HAVE_STDALIGN_H 1
+  template<>
+    struct __add_unsigned<bool>;
 
+  template<>
+    struct __add_unsigned<wchar_t>;
 
-#define _GLIBCXX_HAVE_STDBOOL_H 1
 
 
-#define _GLIBCXX_HAVE_STDINT_H 1
+  template<typename _Tp>
+    struct __remove_unsigned
+    {
+    private:
+      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
 
+    public:
+      typedef typename __if_type::__type __type;
+    };
 
-#define _GLIBCXX_HAVE_STDLIB_H 1
+  template<>
+    struct __remove_unsigned<char>
+    { typedef signed char __type; };
 
+  template<>
+    struct __remove_unsigned<unsigned char>
+    { typedef signed char __type; };
 
+  template<>
+    struct __remove_unsigned<unsigned short>
+    { typedef short __type; };
 
+  template<>
+    struct __remove_unsigned<unsigned int>
+    { typedef int __type; };
 
+  template<>
+    struct __remove_unsigned<unsigned long>
+    { typedef long __type; };
 
-#define _GLIBCXX_HAVE_STRERROR_R 1
+  template<>
+    struct __remove_unsigned<unsigned long long>
+    { typedef long long __type; };
 
 
-#define _GLIBCXX_HAVE_STRINGS_H 1
+  template<>
+    struct __remove_unsigned<bool>;
 
+  template<>
+    struct __remove_unsigned<wchar_t>;
 
-#define _GLIBCXX_HAVE_STRING_H 1
 
 
-#define _GLIBCXX_HAVE_STRTOF 1
-# 868 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_SYS_PARAM_H 1
+  template<typename _Type>
+    inline bool
+    __is_null_pointer(_Type* __ptr)
+    { return __ptr == 0; }
 
+  template<typename _Type>
+    inline bool
+    __is_null_pointer(_Type)
+    { return false; }
 
-#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1
-# 880 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_SYS_STAT_H 1
 
+  inline bool
+  __is_null_pointer(std::nullptr_t)
+  { return true; }
 
 
 
+  template<typename _Tp, bool = std::__is_integer<_Tp>::__value>
+    struct __promote
+    { typedef double __type; };
 
-#define _GLIBCXX_HAVE_SYS_TIME_H 1
 
 
-#define _GLIBCXX_HAVE_SYS_TYPES_H 1
-# 898 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_S_ISREG 1
 
+  template<typename _Tp>
+    struct __promote<_Tp, false>
+    { };
 
-#define _GLIBCXX_HAVE_TANF 1
+  template<>
+    struct __promote<long double>
+    { typedef long double __type; };
 
+  template<>
+    struct __promote<double>
+    { typedef double __type; };
 
-#define _GLIBCXX_HAVE_TANHF 1
-# 913 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_HAVE_TGMATH_H 1
+  template<>
+    struct __promote<float>
+    { typedef float __type; };
 
+  template<typename _Tp, typename _Up,
+           typename _Tp2 = typename __promote<_Tp>::__type,
+           typename _Up2 = typename __promote<_Up>::__type>
+    struct __promote_2
+    {
+      typedef __typeof__(_Tp2() + _Up2()) __type;
+    };
 
+  template<typename _Tp, typename _Up, typename _Vp,
+           typename _Tp2 = typename __promote<_Tp>::__type,
+           typename _Up2 = typename __promote<_Up>::__type,
+           typename _Vp2 = typename __promote<_Vp>::__type>
+    struct __promote_3
+    {
+      typedef __typeof__(_Tp2() + _Up2() + _Vp2()) __type;
+    };
 
+  template<typename _Tp, typename _Up, typename _Vp, typename _Wp,
+           typename _Tp2 = typename __promote<_Tp>::__type,
+           typename _Up2 = typename __promote<_Up>::__type,
+           typename _Vp2 = typename __promote<_Vp>::__type,
+           typename _Wp2 = typename __promote<_Wp>::__type>
+    struct __promote_4
+    {
+      typedef __typeof__(_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
+    };
 
 
-#define _GLIBCXX_HAVE_UNISTD_H 1
+}
+# 44 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 1 3
 
 
-#define _GLIBCXX_HAVE_USLEEP 1
+#define _MATH_H_ 
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 1 3
+# 9 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+extern "C" {
 
-#define _GLIBCXX_HAVE_VFWSCANF 1
+#define _SYS_REENT_H_ 
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 1 3
+# 13 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
+#define _ANSIDECL_H_ 
 
-#define _GLIBCXX_HAVE_VSWSCANF 1
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 1 3
 
 
-#define _GLIBCXX_HAVE_VWSCANF 1
 
 
-#define _GLIBCXX_HAVE_WCHAR_H 1
 
 
-#define _GLIBCXX_HAVE_WCSTOF 1
 
+#define __NEWLIB_H__ 1
 
-#define _GLIBCXX_HAVE_WCTYPE_H 1
-# 1142 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define LT_OBJDIR ".libs/"
 
 
 
 
+#define _NEWLIB_VERSION "2.1.0"
 
-#define _GLIBCXX_PACKAGE_BUGREPORT ""
 
 
-#define _GLIBCXX_PACKAGE_NAME "package-unused"
 
 
-#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"
 
+#define _WANT_IO_LONG_LONG 1
 
-#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"
 
+#define _WANT_REGISTER_FINI 1
+# 40 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 3
+#define _MB_LEN_MAX 1
+# 50 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 3
+#define HAVE_INITFINI_ARRAY 1
 
-#define _GLIBCXX_PACKAGE_URL ""
 
 
-#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
-# 1181 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define STDC_HEADERS 1
+#define _ATEXIT_DYNAMIC_ALLOC 1
 
 
+#define _HAVE_LONG_DOUBLE 1
 
 
+#define _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1
 
-#define _GLIBCXX_ATOMIC_BUILTINS 1
 
+#define _LDBL_EQ_DBL 1
+# 72 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/newlib.h" 3
+#define _FVWRITE_IN_STREAMIO 1
 
 
+#define _FSEEK_OPTIMIZATION 1
 
 
+#define _WIDE_ORIENT 1
 
-#define _GLIBCXX_FULLY_DYNAMIC_STRING 0
 
+#define _UNBUF_STREAM_OPT 1
+# 16 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 1 3
 
+#define __SYS_CONFIG_H__ 
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 1 3
+# 60 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 3
+#define __IEEE_LITTLE_ENDIAN 
+# 5 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/features.h" 1 3
+# 22 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/features.h" 3
+#define _SYS_FEATURES_H 
 
 
-#define _GLIBCXX_HOSTED 1
+extern "C" {
 
 
 
 
-#define _GLIBCXX_PTRDIFF_T_IS_INT 1
 
+#define __NEWLIB__ 2
+#define __NEWLIB_MINOR__ 1
 
 
 
 
-#define _GLIBCXX_SIZE_T_IS_UINT 1
+#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
 
 
 
 
 
-#define _GLIBCXX_STDIO_EOF -1
 
+#define __GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)
+# 233 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/features.h" 3
+}
+# 6 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 2 3
+# 216 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 3
+#define _POINTER_INT long
 
-#define _GLIBCXX_STDIO_SEEK_CUR 1
 
 
-#define _GLIBCXX_STDIO_SEEK_END 2
-# 1256 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_USE_C99_CTYPE_TR1 1
 
 
+#undef __RAND_MAX
 
 
 
+#define __RAND_MAX 0x7fffffff
+# 244 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/config.h" 3
+#define __EXPORT 
 
 
-#define _GLIBCXX_USE_C99_INTTYPES_TR1 1
 
+#define __IMPORT 
 
 
-#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1
 
 
 
-#define _GLIBCXX_USE_C99_MATH 1
 
+#define _READ_WRITE_RETURN_TYPE int
 
 
 
 
 
+#define _READ_WRITE_BUFSIZE_TYPE int
+# 17 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 2 3
 
-#define _GLIBCXX_USE_C99_STDINT_TR1 1
-# 1300 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_USE_GETTIMEOFDAY 1
-# 1312 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_USE_LONG_LONG 1
-# 1331 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1
-# 1340 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/arm-none-eabi/armv7e-m/fpu/bits/c++config.h" 3
-#define _GLIBCXX_USE_TMPNAM 1
 
 
-#define _GLIBCXX_USE_WCHAR_T 1
 
 
-#define _GLIBCXX_VERBOSE 1
 
+#define _HAVE_STDC 
+# 34 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
+#define _BEGIN_STD_C extern "C" {
+#define _END_STD_C }
 
 
+#define _NOTHROW __attribute__ ((__nothrow__))
+# 50 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
+#define _PTR void *
+#define _AND ,
+#define _NOARGS void
+#define _CONST const
+#define _VOLATILE volatile
+#define _SIGNED signed
+#define _DOTS , ...
+#define _VOID void
 
 
-#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
-# 43 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 2 3
-# 80 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-#define __glibcxx_integral_traps true
-# 89 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-#define __glibcxx_float_has_denorm_loss false
 
 
-#define __glibcxx_float_traps false
 
 
-#define __glibcxx_float_tinyness_before false
+#define _EXFUN_NOTHROW(name,proto) name proto _NOTHROW
+#define _EXFUN(name,proto) name proto
+#define _EXPARM(name,proto) (* name) proto
+#define _EXFNPTR(name,proto) (* name) proto
 
+#define _DEFUN(name,arglist,args) name(args)
+#define _DEFUN_VOID(name) name(_NOARGS)
+#define _CAST_VOID (void)
 
+#define _LONG_DOUBLE long double
 
 
+#define _PARAMS(paramlist) paramlist
+# 101 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
+#define _ATTRIBUTE(attrs) __attribute__ (attrs)
+# 127 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 3
+#define _ELIDABLE_INLINE static __inline__
 
 
 
-#define __glibcxx_double_has_denorm_loss false
+#define _NOINLINE __attribute__ ((__noinline__))
+#define _NOINLINE_STATIC _NOINLINE static
+# 14 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 39 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#define _STDDEF_H 
+#define _STDDEF_H_ 
 
+#define _ANSI_STDDEF_H 
+# 136 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#define _PTRDIFF_T 
+#define _T_PTRDIFF_ 
+#define _T_PTRDIFF 
+#define __PTRDIFF_T 
+#define _PTRDIFF_T_ 
+#define _BSD_PTRDIFF_T_ 
+#define ___int_ptrdiff_t_h 
+#define _GCC_PTRDIFF_T 
 
-#define __glibcxx_double_traps false
 
 
-#define __glibcxx_double_tinyness_before false
+typedef int ptrdiff_t;
+# 158 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_ptrdiff_t
+# 184 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#define __size_t__ 
+#define __SIZE_T__ 
+#define _SIZE_T 
+#define _SYS_SIZE_T_H 
+#define _T_SIZE_ 
+#define _T_SIZE 
+#define __SIZE_T 
+#define _SIZE_T_ 
+#define _BSD_SIZE_T_ 
+#define _SIZE_T_DEFINED_ 
+#define _SIZE_T_DEFINED 
+#define _BSD_SIZE_T_DEFINED_ 
+#define _SIZE_T_DECLARED 
+#define ___int_size_t_h 
+#define _GCC_SIZE_T 
+#define _SIZET_ 
 
 
 
 
 
 
+#define __size_t 
 
-#define __glibcxx_long_double_has_denorm_loss false
 
 
-#define __glibcxx_long_double_traps false
 
 
-#define __glibcxx_long_double_tinyness_before false
+typedef unsigned int size_t;
+# 234 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_size_t
+# 263 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#define __wchar_t__ 
+#define __WCHAR_T__ 
+#define _WCHAR_T 
+#define _T_WCHAR_ 
+#define _T_WCHAR 
+#define __WCHAR_T 
+#define _WCHAR_T_ 
+#define _BSD_WCHAR_T_ 
+#define _WCHAR_T_DEFINED_ 
+#define _WCHAR_T_DEFINED 
+#define _WCHAR_T_H 
+#define ___int_wchar_t_h 
+#define __INT_WCHAR_T_H 
+#define _GCC_WCHAR_T 
+#define _WCHAR_T_DECLARED 
+# 290 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef _BSD_WCHAR_T_
+# 343 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_wchar_t
+# 397 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef NULL
 
+#define NULL __null
+# 408 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_NULL
 
 
 
-#define __glibcxx_signed(T) ((T)(-1) < 0)
 
-#define __glibcxx_min(T) (__glibcxx_signed (T) ? -__glibcxx_max (T) - 1 : (T)0)
+#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
 
 
-#define __glibcxx_max(T) (__glibcxx_signed (T) ? (((((T)1 << (__glibcxx_digits (T) - 1)) - 1) << 1) + 1) : ~(T)0)
 
 
+#define _GCC_MAX_ALIGN_T 
 
-#define __glibcxx_digits(T) (sizeof(T) * __CHAR_BIT__ - __glibcxx_signed (T))
 
 
+typedef struct {
+  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
+  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
+} max_align_t;
 
-#define __glibcxx_digits10(T) (__glibcxx_digits (T) * 643L / 2136)
 
 
-#define __glibcxx_max_digits10(T) (2 + (T) * 643L / 2136)
 
 
-namespace std __attribute__ ((__visibility__ ("default")))
-{
+#define _GXX_NULLPTR_T 
+  typedef decltype(nullptr) nullptr_t;
+# 15 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 1 3
+# 10 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 3
+#define _SYS__TYPES_H 
 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_types.h" 1 3
 
 
 
 
 
+#define _MACHINE__TYPES_H 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 1 3
 
-  enum float_round_style
-  {
-    round_indeterminate = -1,
-    round_toward_zero = 0,
-    round_to_nearest = 1,
-    round_toward_infinity = 2,
-    round_toward_neg_infinity = 3
-  };
 
 
 
 
+#define _MACHINE__DEFAULT_TYPES_H 
+# 15 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+#define __EXP(x) __ ##x ##__
 
 
 
-  enum float_denorm_style
-  {
 
-    denorm_indeterminate = -1,
 
-    denorm_absent = 0,
 
-    denorm_present = 1
-  };
-# 191 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-  struct __numeric_limits_base
-  {
 
+extern "C" {
 
-    static constexpr bool is_specialized = false;
 
 
+typedef signed char __int8_t;
 
+typedef unsigned char __uint8_t;
 
-    static constexpr int digits = 0;
 
 
-    static constexpr int digits10 = 0;
+#define ___int8_t_defined 1
 
 
 
 
-    static constexpr int max_digits10 = 0;
 
 
 
-    static constexpr bool is_signed = false;
+typedef short int __int16_t;
 
+typedef short unsigned int __uint16_t;
 
-    static constexpr bool is_integer = false;
 
 
+#define ___int16_t_defined 1
+# 63 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+typedef long int __int32_t;
 
+typedef long unsigned int __uint32_t;
 
-    static constexpr bool is_exact = false;
 
 
+#define ___int32_t_defined 1
+# 89 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+typedef long long int __int64_t;
 
-    static constexpr int radix = 0;
+typedef long long unsigned int __uint64_t;
 
 
 
-    static constexpr int min_exponent = 0;
+#define ___int64_t_defined 1
+# 120 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+typedef signed char __int_least8_t;
 
+typedef unsigned char __uint_least8_t;
 
 
-    static constexpr int min_exponent10 = 0;
 
+#define ___int_least8_t_defined 1
+# 146 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+typedef short int __int_least16_t;
 
+typedef short unsigned int __uint_least16_t;
 
 
-    static constexpr int max_exponent = 0;
 
+#define ___int_least16_t_defined 1
+# 168 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+typedef long int __int_least32_t;
 
+typedef long unsigned int __uint_least32_t;
 
-    static constexpr int max_exponent10 = 0;
 
 
-    static constexpr bool has_infinity = false;
+#define ___int_least32_t_defined 1
+# 186 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+typedef long long int __int_least64_t;
 
+typedef long long unsigned int __uint_least64_t;
 
 
-    static constexpr bool has_quiet_NaN = false;
 
+#define ___int_least64_t_defined 1
 
 
-    static constexpr bool has_signaling_NaN = false;
 
 
-    static constexpr float_denorm_style has_denorm = denorm_absent;
 
 
 
-    static constexpr bool has_denorm_loss = false;
+typedef int __intptr_t;
 
+typedef unsigned int __uintptr_t;
+# 214 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_default_types.h" 3
+#undef __EXP
 
 
-    static constexpr bool is_iec559 = false;
+}
+# 8 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/_types.h" 2 3
+# 13 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/lock.h" 1 3
 
+#define __SYS_LOCK_H__ 
 
 
 
-    static constexpr bool is_bounded = false;
-# 277 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-    static constexpr bool is_modulo = false;
+typedef int _LOCK_T;
+typedef int _LOCK_RECURSIVE_T;
 
 
-    static constexpr bool traps = false;
 
+#define __LOCK_INIT(class,lock) static int lock = 0;
+#define __LOCK_INIT_RECURSIVE(class,lock) static int lock = 0;
+#define __lock_init(lock) (_CAST_VOID 0)
+#define __lock_init_recursive(lock) (_CAST_VOID 0)
+#define __lock_close(lock) (_CAST_VOID 0)
+#define __lock_close_recursive(lock) (_CAST_VOID 0)
+#define __lock_acquire(lock) (_CAST_VOID 0)
+#define __lock_acquire_recursive(lock) (_CAST_VOID 0)
+#define __lock_try_acquire(lock) (_CAST_VOID 0)
+#define __lock_try_acquire_recursive(lock) (_CAST_VOID 0)
+#define __lock_release(lock) (_CAST_VOID 0)
+#define __lock_release_recursive(lock) (_CAST_VOID 0)
+# 14 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 2 3
 
-    static constexpr bool tinyness_before = false;
 
+typedef long _off_t;
 
 
 
-    static constexpr float_round_style round_style =
-          round_toward_zero;
-  };
-# 303 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-  template<typename _Tp>
-    struct numeric_limits : public __numeric_limits_base
-    {
+typedef short __dev_t;
 
 
-      static constexpr _Tp
-      min() noexcept { return _Tp(); }
 
+typedef unsigned short __uid_t;
 
-      static constexpr _Tp
-      max() noexcept { return _Tp(); }
 
+typedef unsigned short __gid_t;
 
 
 
-      static constexpr _Tp
-      lowest() noexcept { return _Tp(); }
+__extension__ typedef long long _off64_t;
 
 
 
 
-      static constexpr _Tp
-      epsilon() noexcept { return _Tp(); }
 
 
-      static constexpr _Tp
-      round_error() noexcept { return _Tp(); }
 
+typedef long _fpos_t;
+# 54 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 3
+#define unsigned signed
+typedef signed int _ssize_t;
+#undef unsigned
+# 66 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 3
+#define __need_wint_t 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 158 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_ptrdiff_t
+# 234 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_size_t
+# 343 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_wchar_t
 
-      static constexpr _Tp
-      infinity() noexcept { return _Tp(); }
 
 
 
-      static constexpr _Tp
-      quiet_NaN() noexcept { return _Tp(); }
+#define _WINT_T 
 
 
 
-      static constexpr _Tp
-      signaling_NaN() noexcept { return _Tp(); }
 
+typedef unsigned int wint_t;
 
+#undef __need_wint_t
+# 397 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef NULL
 
+#define NULL __null
+# 408 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_NULL
 
-      static constexpr _Tp
-      denorm_min() noexcept { return _Tp(); }
-    };
 
 
-  template<typename _Tp>
-    struct numeric_limits<const _Tp>
-    : public numeric_limits<_Tp> { };
 
-  template<typename _Tp>
-    struct numeric_limits<volatile _Tp>
-    : public numeric_limits<_Tp> { };
+#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
+# 68 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_types.h" 2 3
 
-  template<typename _Tp>
-    struct numeric_limits<const volatile _Tp>
-    : public numeric_limits<_Tp> { };
 
 
+typedef struct
+{
+  int __count;
+  union
+  {
+    wint_t __wch;
+    unsigned char __wchb[4];
+  } __value;
+} _mbstate_t;
 
 
 
+typedef _LOCK_RECURSIVE_T _flock_t;
 
-  template<>
-    struct numeric_limits<bool>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr bool
-      min() noexcept { return false; }
 
-      static constexpr bool
-      max() noexcept { return true; }
 
+typedef void *_iconv_t;
+# 16 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 2 3
 
-      static constexpr bool
-      lowest() noexcept { return min(); }
+#define _NULL 0
 
-      static constexpr int digits = 1;
-      static constexpr int digits10 = 0;
 
-      static constexpr int max_digits10 = 0;
 
-      static constexpr bool is_signed = false;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define __Long long
+typedef unsigned long __ULong;
+# 38 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+struct _reent;
 
-      static constexpr bool
-      epsilon() noexcept { return false; }
 
-      static constexpr bool
-      round_error() noexcept { return false; }
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr bool
-      infinity() noexcept { return false; }
 
-      static constexpr bool
-      quiet_NaN() noexcept { return false; }
+struct _Bigint
+{
+  struct _Bigint *_next;
+  int _k, _maxwds, _sign, _wds;
+  __ULong _x[1];
+};
 
-      static constexpr bool
-      signaling_NaN() noexcept { return false; }
 
-      static constexpr bool
-      denorm_min() noexcept { return false; }
+struct __tm
+{
+  int __tm_sec;
+  int __tm_min;
+  int __tm_hour;
+  int __tm_mday;
+  int __tm_mon;
+  int __tm_year;
+  int __tm_wday;
+  int __tm_yday;
+  int __tm_isdst;
+};
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
 
 
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+#define _ATEXIT_SIZE 32
 
+struct _on_exit_args {
+ void * _fnargs[32];
+ void * _dso_handle[32];
 
-  template<>
-    struct numeric_limits<char>
-    {
-      static constexpr bool is_specialized = true;
+ __ULong _fntypes;
 
-      static constexpr char
-      min() noexcept { return (((char)(-1) < 0) ? -(((char)(-1) < 0) ? (((((char)1 << ((sizeof(char) * 8 - ((char)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char)0) - 1 : (char)0); }
 
-      static constexpr char
-      max() noexcept { return (((char)(-1) < 0) ? (((((char)1 << ((sizeof(char) * 8 - ((char)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char)0); }
+ __ULong _is_cxa;
+};
+# 91 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+struct _atexit {
+ struct _atexit *_next;
+ int _ind;
 
+ void (*_fns[32])(void);
+        struct _on_exit_args _on_exit_args;
+};
+#define _ATEXIT_INIT {_NULL, 0, {_NULL}, {{_NULL}, {_NULL}, 0, 0}}
 
-      static constexpr char
-      lowest() noexcept { return min(); }
 
 
-      static constexpr int digits = (sizeof(char) * 8 - ((char)(-1) < 0));
-      static constexpr int digits10 = ((sizeof(char) * 8 - ((char)(-1) < 0)) * 643L / 2136);
 
-      static constexpr int max_digits10 = 0;
 
-      static constexpr bool is_signed = ((char)(-1) < 0);
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define _REENT_INIT_ATEXIT _NULL, _ATEXIT_INIT,
+# 115 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+struct __sbuf {
+ unsigned char *_base;
+ int _size;
+};
+# 176 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+#define _REENT_SMALL_CHECK_INIT(ptr) 
 
-      static constexpr char
-      epsilon() noexcept { return 0; }
 
-      static constexpr char
-      round_error() noexcept { return 0; }
+struct __sFILE {
+  unsigned char *_p;
+  int _r;
+  int _w;
+  short _flags;
+  short _file;
+  struct __sbuf _bf;
+  int _lbfsize;
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr
-      char infinity() noexcept { return char(); }
 
-      static constexpr char
-      quiet_NaN() noexcept { return char(); }
 
-      static constexpr char
-      signaling_NaN() noexcept { return char(); }
 
-      static constexpr char
-      denorm_min() noexcept { return static_cast<char>(0); }
+  void * _cookie;
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = !is_signed;
+  int (* _read) (struct _reent *, void *, char *, int)
+                                          ;
+  int (* _write) (struct _reent *, void *, const char *, int)
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+                                   ;
+  _fpos_t (* _seek) (struct _reent *, void *, _fpos_t, int);
+  int (* _close) (struct _reent *, void *);
 
 
-  template<>
-    struct numeric_limits<signed char>
-    {
-      static constexpr bool is_specialized = true;
+  struct __sbuf _ub;
+  unsigned char *_up;
+  int _ur;
 
-      static constexpr signed char
-      min() noexcept { return -127 - 1; }
 
-      static constexpr signed char
-      max() noexcept { return 127; }
+  unsigned char _ubuf[3];
+  unsigned char _nbuf[1];
 
 
-      static constexpr signed char
-      lowest() noexcept { return min(); }
+  struct __sbuf _lb;
 
 
-      static constexpr int digits = (sizeof(signed char) * 8 - ((signed char)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(signed char) * 8 - ((signed char)(-1) < 0)) * 643L / 2136);
+  int _blksize;
+  _off_t _offset;
 
-      static constexpr int max_digits10 = 0;
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+  struct _reent *_data;
 
-      static constexpr signed char
-      epsilon() noexcept { return 0; }
 
-      static constexpr signed char
-      round_error() noexcept { return 0; }
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+  _flock_t _lock;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
+  _mbstate_t _mbstate;
+  int _flags2;
+};
+# 285 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+typedef struct __sFILE __FILE;
 
-      static constexpr signed char
-      infinity() noexcept { return static_cast<signed char>(0); }
 
-      static constexpr signed char
-      quiet_NaN() noexcept { return static_cast<signed char>(0); }
 
-      static constexpr signed char
-      signaling_NaN() noexcept
-      { return static_cast<signed char>(0); }
+struct _glue
+{
+  struct _glue *_next;
+  int _niobs;
+  __FILE *_iobs;
+};
+# 310 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+#define _RAND48_SEED_0 (0x330e)
+#define _RAND48_SEED_1 (0xabcd)
+#define _RAND48_SEED_2 (0x1234)
+#define _RAND48_MULT_0 (0xe66d)
+#define _RAND48_MULT_1 (0xdeec)
+#define _RAND48_MULT_2 (0x0005)
+#define _RAND48_ADD (0x000b)
+struct _rand48 {
+  unsigned short _seed[3];
+  unsigned short _mult[3];
+  unsigned short _add;
 
-      static constexpr signed char
-      denorm_min() noexcept
-      { return static_cast<signed char>(0); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
 
+};
 
-  template<>
-    struct numeric_limits<unsigned char>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr unsigned char
-      min() noexcept { return 0; }
+#define _REENT_EMERGENCY_SIZE 25
+#define _REENT_ASCTIME_SIZE 26
+#define _REENT_SIGNAL_SIZE 24
+# 569 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+struct _reent
+{
+  int _errno;
 
-      static constexpr unsigned char
-      max() noexcept { return 127 * 2U + 1; }
 
 
-      static constexpr unsigned char
-      lowest() noexcept { return min(); }
 
+  __FILE *_stdin, *_stdout, *_stderr;
 
-      static constexpr int digits
-       = (sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0)) * 643L / 2136);
+  int _inc;
+  char _emergency[25];
 
-      static constexpr int max_digits10 = 0;
+  int _current_category;
+  const char *_current_locale;
 
-      static constexpr bool is_signed = false;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+  int __sdidinit;
 
-      static constexpr unsigned char
-      epsilon() noexcept { return 0; }
+  void (* __cleanup) (struct _reent *);
 
-      static constexpr unsigned char
-      round_error() noexcept { return 0; }
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+  struct _Bigint *_result;
+  int _result_k;
+  struct _Bigint *_p5s;
+  struct _Bigint **_freelist;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr unsigned char
-      infinity() noexcept
-      { return static_cast<unsigned char>(0); }
+  int _cvtlen;
+  char *_cvtbuf;
 
-      static constexpr unsigned char
-      quiet_NaN() noexcept
-      { return static_cast<unsigned char>(0); }
+  union
+    {
+      struct
+        {
+          unsigned int _unused_rand;
+          char * _strtok_last;
+          char _asctime_buf[26];
+          struct __tm _localtime_buf;
+          int _gamma_signgam;
+          __extension__ unsigned long long _rand_next;
+          struct _rand48 _r48;
+          _mbstate_t _mblen_state;
+          _mbstate_t _mbtowc_state;
+          _mbstate_t _wctomb_state;
+          char _l64a_buf[8];
+          char _signal_buf[24];
+          int _getdate_err;
+          _mbstate_t _mbrlen_state;
+          _mbstate_t _mbrtowc_state;
+          _mbstate_t _mbsrtowcs_state;
+          _mbstate_t _wcrtomb_state;
+          _mbstate_t _wcsrtombs_state;
+   int _h_errno;
+        } _reent;
 
-      static constexpr unsigned char
-      signaling_NaN() noexcept
-      { return static_cast<unsigned char>(0); }
 
-      static constexpr unsigned char
-      denorm_min() noexcept
-      { return static_cast<unsigned char>(0); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = true;
+      struct
+        {
+#define _N_LISTS 30
+          unsigned char * _nextf[30];
+          unsigned int _nmalloc[30];
+        } _unused;
+    } _new;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
 
 
-  template<>
-    struct numeric_limits<wchar_t>
-    {
-      static constexpr bool is_specialized = true;
+  struct _atexit *_atexit;
+  struct _atexit _atexit0;
 
-      static constexpr wchar_t
-      min() noexcept { return (((wchar_t)(-1) < 0) ? -(((wchar_t)(-1) < 0) ? (((((wchar_t)1 << ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(wchar_t)0) - 1 : (wchar_t)0); }
 
-      static constexpr wchar_t
-      max() noexcept { return (((wchar_t)(-1) < 0) ? (((((wchar_t)1 << ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(wchar_t)0); }
 
+  void (**(_sig_func))(int);
 
-      static constexpr wchar_t
-      lowest() noexcept { return min(); }
 
 
-      static constexpr int digits = (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) * 643L / 2136);
 
-      static constexpr int max_digits10 = 0;
+  struct _glue __sglue;
+  __FILE __sf[3];
+};
 
-      static constexpr bool is_signed = ((wchar_t)(-1) < 0);
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define _REENT_INIT(var) { 0, &(var).__sf[0], &(var).__sf[1], &(var).__sf[2], 0, "", 0, "C", 0, _NULL, _NULL, 0, _NULL, _NULL, 0, _NULL, { { 0, _NULL, "", {0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0, _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {0, {0}}, {0, {0}}, {0, {0}}, "", "", 0, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _REENT_INIT_ATEXIT _NULL, {_NULL, 0, _NULL} }
+# 697 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+#define _REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(var))); (var)->_stdin = &(var)->__sf[0]; (var)->_stdout = &(var)->__sf[1]; (var)->_stderr = &(var)->__sf[2]; (var)->_current_locale = "C"; (var)->_new._reent._rand_next = 1; (var)->_new._reent._r48._seed[0] = _RAND48_SEED_0; (var)->_new._reent._r48._seed[1] = _RAND48_SEED_1; (var)->_new._reent._r48._seed[2] = _RAND48_SEED_2; (var)->_new._reent._r48._mult[0] = _RAND48_MULT_0; (var)->_new._reent._r48._mult[1] = _RAND48_MULT_1; (var)->_new._reent._r48._mult[2] = _RAND48_MULT_2; (var)->_new._reent._r48._add = _RAND48_ADD; }
+# 713 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+#define _REENT_CHECK_RAND48(ptr) 
+#define _REENT_CHECK_MP(ptr) 
+#define _REENT_CHECK_TM(ptr) 
+#define _REENT_CHECK_ASCTIME_BUF(ptr) 
+#define _REENT_CHECK_EMERGENCY(ptr) 
+#define _REENT_CHECK_MISC(ptr) 
+#define _REENT_CHECK_SIGNAL_BUF(ptr) 
 
-      static constexpr wchar_t
-      epsilon() noexcept { return 0; }
+#define _REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_signgam)
+#define _REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_next)
+#define _REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._seed)
+#define _REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._mult)
+#define _REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._add)
+#define _REENT_MP_RESULT(ptr) ((ptr)->_result)
+#define _REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)
+#define _REENT_MP_P5S(ptr) ((ptr)->_p5s)
+#define _REENT_MP_FREELIST(ptr) ((ptr)->_freelist)
+#define _REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctime_buf)
+#define _REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)
+#define _REENT_EMERGENCY(ptr) ((ptr)->_emergency)
+#define _REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok_last)
+#define _REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_state)
+#define _REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtowc_state)
+#define _REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctomb_state)
+#define _REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrlen_state)
+#define _REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrtowc_state)
+#define _REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mbsrtowcs_state)
+#define _REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrtomb_state)
+#define _REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wcsrtombs_state)
+#define _REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)
+#define _REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_buf)
+#define _REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._getdate_err))
 
-      static constexpr wchar_t
-      round_error() noexcept { return 0; }
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr wchar_t
-      infinity() noexcept { return wchar_t(); }
 
-      static constexpr wchar_t
-      quiet_NaN() noexcept { return wchar_t(); }
 
-      static constexpr wchar_t
-      signaling_NaN() noexcept { return wchar_t(); }
+#define _Kmax (sizeof (size_t) << 3)
 
-      static constexpr wchar_t
-      denorm_min() noexcept { return wchar_t(); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = !is_signed;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
 
 
 
-  template<>
-    struct numeric_limits<char16_t>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr char16_t
-      min() noexcept { return (((char16_t)(-1) < 0) ? -(((char16_t)(-1) < 0) ? (((((char16_t)1 << ((sizeof(char16_t) * 8 - ((char16_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char16_t)0) - 1 : (char16_t)0); }
+#define __ATTRIBUTE_IMPURE_PTR__ 
 
-      static constexpr char16_t
-      max() noexcept { return (((char16_t)(-1) < 0) ? (((((char16_t)1 << ((sizeof(char16_t) * 8 - ((char16_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char16_t)0); }
 
-      static constexpr char16_t
-      lowest() noexcept { return min(); }
+extern struct _reent *_impure_ptr ;
+extern struct _reent *const _global_impure_ptr ;
 
-      static constexpr int digits = (sizeof(char16_t) * 8 - ((char16_t)(-1) < 0));
-      static constexpr int digits10 = ((sizeof(char16_t) * 8 - ((char16_t)(-1) < 0)) * 643L / 2136);
-      static constexpr int max_digits10 = 0;
-      static constexpr bool is_signed = ((char16_t)(-1) < 0);
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+void _reclaim_reent (struct _reent *);
+# 775 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/reent.h" 3
+#define _REENT _impure_ptr
 
-      static constexpr char16_t
-      epsilon() noexcept { return 0; }
 
-      static constexpr char16_t
-      round_error() noexcept { return 0; }
+#define _GLOBAL_REENT _global_impure_ptr
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr char16_t
-      infinity() noexcept { return char16_t(); }
 
-      static constexpr char16_t
-      quiet_NaN() noexcept { return char16_t(); }
 
-      static constexpr char16_t
-      signaling_NaN() noexcept { return char16_t(); }
+#define _GLOBAL_ATEXIT (_GLOBAL_REENT->_atexit)
 
-      static constexpr char16_t
-      denorm_min() noexcept { return char16_t(); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = !is_signed;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style = round_toward_zero;
-    };
+}
+# 6 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 1 3
+# 7 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 2 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/_ansi.h" 1 3
+# 8 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 2 3
 
+extern "C" {
 
-  template<>
-    struct numeric_limits<char32_t>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr char32_t
-      min() noexcept { return (((char32_t)(-1) < 0) ? -(((char32_t)(-1) < 0) ? (((((char32_t)1 << ((sizeof(char32_t) * 8 - ((char32_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char32_t)0) - 1 : (char32_t)0); }
 
-      static constexpr char32_t
-      max() noexcept { return (((char32_t)(-1) < 0) ? (((((char32_t)1 << ((sizeof(char32_t) * 8 - ((char32_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char32_t)0); }
 
-      static constexpr char32_t
-      lowest() noexcept { return min(); }
+union __dmath
+{
+  double d;
+  __ULong i[2];
+};
 
-      static constexpr int digits = (sizeof(char32_t) * 8 - ((char32_t)(-1) < 0));
-      static constexpr int digits10 = ((sizeof(char32_t) * 8 - ((char32_t)(-1) < 0)) * 643L / 2136);
-      static constexpr int max_digits10 = 0;
-      static constexpr bool is_signed = ((char32_t)(-1) < 0);
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+union __fmath
+{
+  float f;
+  __ULong i[1];
+};
 
-      static constexpr char32_t
-      epsilon() noexcept { return 0; }
 
-      static constexpr char32_t
-      round_error() noexcept { return 0; }
+union __ldmath
+{
+  long double ld;
+  __ULong i[4];
+};
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr char32_t
-      infinity() noexcept { return char32_t(); }
+#define _M_LN2 0.693147180559945309417
 
-      static constexpr char32_t
-      quiet_NaN() noexcept { return char32_t(); }
 
-      static constexpr char32_t
-      signaling_NaN() noexcept { return char32_t(); }
 
-      static constexpr char32_t
-      denorm_min() noexcept { return char32_t(); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = !is_signed;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style = round_toward_zero;
-    };
+#define HUGE_VAL (__builtin_huge_val())
 
 
 
-  template<>
-    struct numeric_limits<short>
-    {
-      static constexpr bool is_specialized = true;
+#define HUGE_VALF (__builtin_huge_valf())
 
-      static constexpr short
+
+
+#define HUGE_VALL (__builtin_huge_vall())
+
+
+
+#define INFINITY (__builtin_inff())
+
+
+
+#define NAN (__builtin_nanf(""))
+# 108 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 3
+extern double atan (double);
+extern double cos (double);
+extern double sin (double);
+extern double tan (double);
+extern double tanh (double);
+extern double frexp (double, int *);
+extern double modf (double, double *);
+extern double ceil (double);
+extern double fabs (double);
+extern double floor (double);
+
+
+
+
+
+
+extern double acos (double);
+extern double asin (double);
+extern double atan2 (double, double);
+extern double cosh (double);
+extern double sinh (double);
+extern double exp (double);
+extern double ldexp (double, int);
+extern double log (double);
+extern double log10 (double);
+extern double pow (double, double);
+extern double sqrt (double);
+extern double fmod (double, double);
+# 150 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 3
+#define FLT_EVAL_METHOD __FLT_EVAL_METHOD__
+#define __TMP_FLT_EVAL_METHOD 
+
+
+
+    typedef float float_t;
+    typedef double double_t;
+# 173 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 3
+#undef FLT_EVAL_METHOD
+
+
+#define FP_NAN 0
+#define FP_INFINITE 1
+#define FP_ZERO 2
+#define FP_SUBNORMAL 3
+#define FP_NORMAL 4
+
+
+#define FP_ILOGB0 (-INT_MAX)
+
+
+#define FP_ILOGBNAN INT_MAX
+
+
+
+#define MATH_ERRNO 1
+
+
+#define MATH_ERREXCEPT 2
+
+
+#define math_errhandling MATH_ERRNO
+
+
+extern int __isinff (float x);
+extern int __isinfd (double x);
+extern int __isnanf (float x);
+extern int __isnand (double x);
+extern int __fpclassifyf (float x);
+extern int __fpclassifyd (double x);
+extern int __signbitf (float x);
+extern int __signbitd (double x);
+
+#define fpclassify(__x) ((sizeof(__x) == sizeof(float)) ? __fpclassifyf(__x) : __fpclassifyd(__x))
+
+
+
+
+#define isfinite(__y) (__extension__ ({int __cy = fpclassify(__y); __cy != FP_INFINITE && __cy != FP_NAN;}))
+# 225 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 3
+#define isinf(y) (fpclassify(y) == FP_INFINITE)
+
+
+
+#define isnan(y) (fpclassify(y) == FP_NAN)
+
+
+#define isnormal(y) (fpclassify(y) == FP_NORMAL)
+#define signbit(__x) ((sizeof(__x) == sizeof(float)) ? __signbitf(__x) : __signbitd(__x))
+
+
+
+#define isgreater(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x > __y);}))
+
+
+#define isgreaterequal(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x >= __y);}))
+
+
+#define isless(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x < __y);}))
+
+
+#define islessequal(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x <= __y);}))
+
+
+#define islessgreater(x,y) (__extension__ ({__typeof__(x) __x = (x); __typeof__(y) __y = (y); !isunordered(__x,__y) && (__x < __y || __x > __y);}))
+
+
+
+#define isunordered(a,b) (__extension__ ({__typeof__(a) __a = (a); __typeof__(b) __b = (b); fpclassify(__a) == FP_NAN || fpclassify(__b) == FP_NAN;}))
+
+
+
+
+
+extern double infinity (void);
+extern double nan (const char *);
+extern int finite (double);
+extern double copysign (double, double);
+extern double logb (double);
+extern int ilogb (double);
+
+extern double asinh (double);
+extern double cbrt (double);
+extern double nextafter (double, double);
+extern double rint (double);
+extern double scalbn (double, int);
+
+extern double exp2 (double);
+extern double scalbln (double, long int);
+extern double tgamma (double);
+extern double nearbyint (double);
+extern long int lrint (double);
+extern long long int llrint (double);
+extern double round (double);
+extern long int lround (double);
+extern long long int llround (double);
+extern double trunc (double);
+extern double remquo (double, double, int *);
+extern double fdim (double, double);
+extern double fmax (double, double);
+extern double fmin (double, double);
+extern double fma (double, double, double);
+
+
+extern double log1p (double);
+extern double expm1 (double);
+
+
+
+extern double acosh (double);
+extern double atanh (double);
+extern double remainder (double, double);
+extern double gamma (double);
+extern double lgamma (double);
+extern double erf (double);
+extern double erfc (double);
+extern double log2 (double);
+
+
+
+
+
+extern double hypot (double, double);
+
+
+
+
+
+
+extern float atanf (float);
+extern float cosf (float);
+extern float sinf (float);
+extern float tanf (float);
+extern float tanhf (float);
+extern float frexpf (float, int *);
+extern float modff (float, float *);
+extern float ceilf (float);
+extern float fabsf (float);
+extern float floorf (float);
+
+
+extern float acosf (float);
+extern float asinf (float);
+extern float atan2f (float, float);
+extern float coshf (float);
+extern float sinhf (float);
+extern float expf (float);
+extern float ldexpf (float, int);
+extern float logf (float);
+extern float log10f (float);
+extern float powf (float, float);
+extern float sqrtf (float);
+extern float fmodf (float, float);
+
+
+
+
+extern float exp2f (float);
+extern float scalblnf (float, long int);
+extern float tgammaf (float);
+extern float nearbyintf (float);
+extern long int lrintf (float);
+extern long long int llrintf (float);
+extern float roundf (float);
+extern long int lroundf (float);
+extern long long int llroundf (float);
+extern float truncf (float);
+extern float remquof (float, float, int *);
+extern float fdimf (float, float);
+extern float fmaxf (float, float);
+extern float fminf (float, float);
+extern float fmaf (float, float, float);
+
+extern float infinityf (void);
+extern float nanf (const char *);
+extern int finitef (float);
+extern float copysignf (float, float);
+extern float logbf (float);
+extern int ilogbf (float);
+
+extern float asinhf (float);
+extern float cbrtf (float);
+extern float nextafterf (float, float);
+extern float rintf (float);
+extern float scalbnf (float, int);
+extern float log1pf (float);
+extern float expm1f (float);
+
+
+extern float acoshf (float);
+extern float atanhf (float);
+extern float remainderf (float, float);
+extern float gammaf (float);
+extern float lgammaf (float);
+extern float erff (float);
+extern float erfcf (float);
+extern float log2f (float);
+extern float hypotf (float, float);
+
+
+
+
+
+
+extern long double atanl (long double);
+extern long double cosl (long double);
+extern long double sinl (long double);
+extern long double tanl (long double);
+extern long double tanhl (long double);
+extern long double frexpl (long double, int *);
+extern long double modfl (long double, long double *);
+extern long double ceill (long double);
+extern long double fabsl (long double);
+extern long double floorl (long double);
+extern long double log1pl (long double);
+extern long double expm1l (long double);
+
+
+
+
+extern long double acosl (long double);
+extern long double asinl (long double);
+extern long double atan2l (long double, long double);
+extern long double coshl (long double);
+extern long double sinhl (long double);
+extern long double expl (long double);
+extern long double ldexpl (long double, int);
+extern long double logl (long double);
+extern long double log10l (long double);
+extern long double powl (long double, long double);
+extern long double sqrtl (long double);
+extern long double fmodl (long double, long double);
+extern long double hypotl (long double, long double);
+
+
+extern long double copysignl (long double, long double);
+extern long double nanl (const char *);
+extern int ilogbl (long double);
+extern long double asinhl (long double);
+extern long double cbrtl (long double);
+extern long double nextafterl (long double, long double);
+extern long double rintl (long double);
+extern long double scalbnl (long double, int);
+extern long double exp2l (long double);
+extern long double scalblnl (long double, long);
+extern long double tgammal (long double);
+extern long double nearbyintl (long double);
+extern long int lrintl (long double);
+extern long long int llrintl (long double);
+extern long double roundl (long double);
+extern long lroundl (long double);
+extern long long int llroundl (long double);
+extern long double truncl (long double);
+extern long double remquol (long double, long double, int *);
+extern long double fdiml (long double, long double);
+extern long double fmaxl (long double, long double);
+extern long double fminl (long double, long double);
+extern long double fmal (long double, long double, long double);
+
+extern long double acoshl (long double);
+extern long double atanhl (long double);
+extern long double remainderl (long double, long double);
+extern long double lgammal (long double);
+extern long double erfl (long double);
+extern long double erfcl (long double);
+# 464 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 3
+extern double drem (double, double);
+extern void sincos (double, double *, double *);
+extern double gamma_r (double, int *);
+extern double lgamma_r (double, int *);
+
+extern double y0 (double);
+extern double y1 (double);
+extern double yn (int, double);
+extern double j0 (double);
+extern double j1 (double);
+extern double jn (int, double);
+
+extern float dremf (float, float);
+extern void sincosf (float, float *, float *);
+extern float gammaf_r (float, int *);
+extern float lgammaf_r (float, int *);
+
+extern float y0f (float);
+extern float y1f (float);
+extern float ynf (int, float);
+extern float j0f (float);
+extern float j1f (float);
+extern float jnf (int, float);
+
+
+
+extern double exp10 (double);
+
+
+extern double pow10 (double);
+
+
+extern float exp10f (float);
+
+
+extern float pow10f (float);
+# 508 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 3
+#define signgam (*__signgam())
+extern int *__signgam (void);
+
+
+#define __signgam_r(ptr) _REENT_SIGNGAM(ptr)
+
+
+
+
+
+struct __exception
+
+
+
+{
+  int type;
+  char *name;
+  double arg1;
+  double arg2;
+  double retval;
+  int err;
+};
+
+
+extern int matherr (struct __exception *e);
+
+
+
+
+
+
+#define DOMAIN 1
+#define SING 2
+#define OVERFLOW 3
+#define UNDERFLOW 4
+#define TLOSS 5
+#define PLOSS 6
+
+
+
+
+
+
+
+#define MAXFLOAT 3.40282347e+38F
+
+#define M_E 2.7182818284590452354
+#define M_LOG2E 1.4426950408889634074
+#define M_LOG10E 0.43429448190325182765
+#define M_LN2 _M_LN2
+#define M_LN10 2.30258509299404568402
+#define M_PI 3.14159265358979323846
+#define M_PI_2 1.57079632679489661923
+#define M_PI_4 0.78539816339744830962
+#define M_1_PI 0.31830988618379067154
+#define M_2_PI 0.63661977236758134308
+#define M_2_SQRTPI 1.12837916709551257390
+#define M_SQRT2 1.41421356237309504880
+#define M_SQRT1_2 0.70710678118654752440
+
+
+
+
+
+#define M_TWOPI (M_PI * 2.0)
+#define M_3PI_4 2.3561944901923448370E0
+#define M_SQRTPI 1.77245385090551602792981
+#define M_LN2LO 1.9082149292705877000E-10
+#define M_LN2HI 6.9314718036912381649E-1
+#define M_SQRT3 1.73205080756887719000
+#define M_IVLN10 0.43429448190325182765
+#define M_LOG2_E _M_LN2
+#define M_INVLN2 1.4426950408889633870E0
+
+
+
+enum __fdlibm_version
+{
+  __fdlibm_ieee = -1,
+  __fdlibm_svid,
+  __fdlibm_xopen,
+  __fdlibm_posix
+};
+
+#define _LIB_VERSION_TYPE enum __fdlibm_version
+#define _LIB_VERSION __fdlib_version
+
+extern enum __fdlibm_version __fdlib_version;
+
+#define _IEEE_ __fdlibm_ieee
+#define _SVID_ __fdlibm_svid
+#define _XOPEN_ __fdlibm_xopen
+#define _POSIX_ __fdlibm_posix
+
+
+
+}
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/fastmath.h" 1 3
+# 608 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/math.h" 2 3
+# 45 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 2 3
+
+
+#define _GLIBCXX_CMATH 1
+
+
+#undef abs
+#undef div
+#undef acos
+#undef asin
+#undef atan
+#undef atan2
+#undef ceil
+#undef cos
+#undef cosh
+#undef exp
+#undef fabs
+#undef floor
+#undef fmod
+#undef frexp
+#undef ldexp
+#undef log
+#undef log10
+#undef modf
+#undef pow
+#undef sin
+#undef sinh
+#undef sqrt
+#undef tan
+#undef tanh
+
+namespace std __attribute__ ((__visibility__ ("default")))
+{
+
+
+
+  inline constexpr double
+  abs(double __x)
+  { return __builtin_fabs(__x); }
+
+
+
+  inline constexpr float
+  abs(float __x)
+  { return __builtin_fabsf(__x); }
+
+  inline constexpr long double
+  abs(long double __x)
+  { return __builtin_fabsl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    abs(_Tp __x)
+    { return __builtin_fabs(__x); }
+
+  using ::acos;
+
+
+  inline constexpr float
+  acos(float __x)
+  { return __builtin_acosf(__x); }
+
+  inline constexpr long double
+  acos(long double __x)
+  { return __builtin_acosl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    acos(_Tp __x)
+    { return __builtin_acos(__x); }
+
+  using ::asin;
+
+
+  inline constexpr float
+  asin(float __x)
+  { return __builtin_asinf(__x); }
+
+  inline constexpr long double
+  asin(long double __x)
+  { return __builtin_asinl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    asin(_Tp __x)
+    { return __builtin_asin(__x); }
+
+  using ::atan;
+
+
+  inline constexpr float
+  atan(float __x)
+  { return __builtin_atanf(__x); }
+
+  inline constexpr long double
+  atan(long double __x)
+  { return __builtin_atanl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    atan(_Tp __x)
+    { return __builtin_atan(__x); }
+
+  using ::atan2;
+
+
+  inline constexpr float
+  atan2(float __y, float __x)
+  { return __builtin_atan2f(__y, __x); }
+
+  inline constexpr long double
+  atan2(long double __y, long double __x)
+  { return __builtin_atan2l(__y, __x); }
+
+
+  template<typename _Tp, typename _Up>
+    inline constexpr
+    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
+    atan2(_Tp __y, _Up __x)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return atan2(__type(__y), __type(__x));
+    }
+
+  using ::ceil;
+
+
+  inline constexpr float
+  ceil(float __x)
+  { return __builtin_ceilf(__x); }
+
+  inline constexpr long double
+  ceil(long double __x)
+  { return __builtin_ceill(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    ceil(_Tp __x)
+    { return __builtin_ceil(__x); }
+
+  using ::cos;
+
+
+  inline constexpr float
+  cos(float __x)
+  { return __builtin_cosf(__x); }
+
+  inline constexpr long double
+  cos(long double __x)
+  { return __builtin_cosl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    cos(_Tp __x)
+    { return __builtin_cos(__x); }
+
+  using ::cosh;
+
+
+  inline constexpr float
+  cosh(float __x)
+  { return __builtin_coshf(__x); }
+
+  inline constexpr long double
+  cosh(long double __x)
+  { return __builtin_coshl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    cosh(_Tp __x)
+    { return __builtin_cosh(__x); }
+
+  using ::exp;
+
+
+  inline constexpr float
+  exp(float __x)
+  { return __builtin_expf(__x); }
+
+  inline constexpr long double
+  exp(long double __x)
+  { return __builtin_expl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    exp(_Tp __x)
+    { return __builtin_exp(__x); }
+
+  using ::fabs;
+
+
+  inline constexpr float
+  fabs(float __x)
+  { return __builtin_fabsf(__x); }
+
+  inline constexpr long double
+  fabs(long double __x)
+  { return __builtin_fabsl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    fabs(_Tp __x)
+    { return __builtin_fabs(__x); }
+
+  using ::floor;
+
+
+  inline constexpr float
+  floor(float __x)
+  { return __builtin_floorf(__x); }
+
+  inline constexpr long double
+  floor(long double __x)
+  { return __builtin_floorl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    floor(_Tp __x)
+    { return __builtin_floor(__x); }
+
+  using ::fmod;
+
+
+  inline constexpr float
+  fmod(float __x, float __y)
+  { return __builtin_fmodf(__x, __y); }
+
+  inline constexpr long double
+  fmod(long double __x, long double __y)
+  { return __builtin_fmodl(__x, __y); }
+
+
+  template<typename _Tp, typename _Up>
+    inline constexpr
+    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
+    fmod(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return fmod(__type(__x), __type(__y));
+    }
+
+  using ::frexp;
+
+
+  inline float
+  frexp(float __x, int* __exp)
+  { return __builtin_frexpf(__x, __exp); }
+
+  inline long double
+  frexp(long double __x, int* __exp)
+  { return __builtin_frexpl(__x, __exp); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    frexp(_Tp __x, int* __exp)
+    { return __builtin_frexp(__x, __exp); }
+
+  using ::ldexp;
+
+
+  inline constexpr float
+  ldexp(float __x, int __exp)
+  { return __builtin_ldexpf(__x, __exp); }
+
+  inline constexpr long double
+  ldexp(long double __x, int __exp)
+  { return __builtin_ldexpl(__x, __exp); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    ldexp(_Tp __x, int __exp)
+    { return __builtin_ldexp(__x, __exp); }
+
+  using ::log;
+
+
+  inline constexpr float
+  log(float __x)
+  { return __builtin_logf(__x); }
+
+  inline constexpr long double
+  log(long double __x)
+  { return __builtin_logl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    log(_Tp __x)
+    { return __builtin_log(__x); }
+
+  using ::log10;
+
+
+  inline constexpr float
+  log10(float __x)
+  { return __builtin_log10f(__x); }
+
+  inline constexpr long double
+  log10(long double __x)
+  { return __builtin_log10l(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    log10(_Tp __x)
+    { return __builtin_log10(__x); }
+
+  using ::modf;
+
+
+  inline float
+  modf(float __x, float* __iptr)
+  { return __builtin_modff(__x, __iptr); }
+
+  inline long double
+  modf(long double __x, long double* __iptr)
+  { return __builtin_modfl(__x, __iptr); }
+
+
+  using ::pow;
+
+
+  inline constexpr float
+  pow(float __x, float __y)
+  { return __builtin_powf(__x, __y); }
+
+  inline constexpr long double
+  pow(long double __x, long double __y)
+  { return __builtin_powl(__x, __y); }
+# 431 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 3
+  template<typename _Tp, typename _Up>
+    inline constexpr
+    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
+    pow(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return pow(__type(__x), __type(__y));
+    }
+
+  using ::sin;
+
+
+  inline constexpr float
+  sin(float __x)
+  { return __builtin_sinf(__x); }
+
+  inline constexpr long double
+  sin(long double __x)
+  { return __builtin_sinl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    sin(_Tp __x)
+    { return __builtin_sin(__x); }
+
+  using ::sinh;
+
+
+  inline constexpr float
+  sinh(float __x)
+  { return __builtin_sinhf(__x); }
+
+  inline constexpr long double
+  sinh(long double __x)
+  { return __builtin_sinhl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    sinh(_Tp __x)
+    { return __builtin_sinh(__x); }
+
+  using ::sqrt;
+
+
+  inline constexpr float
+  sqrt(float __x)
+  { return __builtin_sqrtf(__x); }
+
+  inline constexpr long double
+  sqrt(long double __x)
+  { return __builtin_sqrtl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    sqrt(_Tp __x)
+    { return __builtin_sqrt(__x); }
+
+  using ::tan;
+
+
+  inline constexpr float
+  tan(float __x)
+  { return __builtin_tanf(__x); }
+
+  inline constexpr long double
+  tan(long double __x)
+  { return __builtin_tanl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    tan(_Tp __x)
+    { return __builtin_tan(__x); }
+
+  using ::tanh;
+
+
+  inline constexpr float
+  tanh(float __x)
+  { return __builtin_tanhf(__x); }
+
+  inline constexpr long double
+  tanh(long double __x)
+  { return __builtin_tanhl(__x); }
+
+
+  template<typename _Tp>
+    inline constexpr
+    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                    double>::__type
+    tanh(_Tp __x)
+    { return __builtin_tanh(__x); }
+
+
+}
+
+
+
+
+
+#undef fpclassify
+#undef isfinite
+#undef isinf
+#undef isnan
+#undef isnormal
+#undef signbit
+#undef isgreater
+#undef isgreaterequal
+#undef isless
+#undef islessequal
+#undef islessgreater
+#undef isunordered
+
+namespace std __attribute__ ((__visibility__ ("default")))
+{
+
+
+
+  constexpr int
+  fpclassify(float __x)
+  { return __builtin_fpclassify(0, 1, 4,
+    3, 2, __x); }
+
+  constexpr int
+  fpclassify(double __x)
+  { return __builtin_fpclassify(0, 1, 4,
+    3, 2, __x); }
+
+  constexpr int
+  fpclassify(long double __x)
+  { return __builtin_fpclassify(0, 1, 4,
+    3, 2, __x); }
+
+  template<typename _Tp>
+    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                              int>::__type
+    fpclassify(_Tp __x)
+    { return __x != 0 ? 4 : 2; }
+
+  constexpr bool
+  isfinite(float __x)
+  { return __builtin_isfinite(__x); }
+
+  constexpr bool
+  isfinite(double __x)
+  { return __builtin_isfinite(__x); }
+
+  constexpr bool
+  isfinite(long double __x)
+  { return __builtin_isfinite(__x); }
+
+  template<typename _Tp>
+    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                              bool>::__type
+    isfinite(_Tp __x)
+    { return true; }
+
+  constexpr bool
+  isinf(float __x)
+  { return __builtin_isinf(__x); }
+
+  constexpr bool
+  isinf(double __x)
+  { return __builtin_isinf(__x); }
+
+  constexpr bool
+  isinf(long double __x)
+  { return __builtin_isinf(__x); }
+
+  template<typename _Tp>
+    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                              bool>::__type
+    isinf(_Tp __x)
+    { return false; }
+
+  constexpr bool
+  isnan(float __x)
+  { return __builtin_isnan(__x); }
+
+  constexpr bool
+  isnan(double __x)
+  { return __builtin_isnan(__x); }
+
+  constexpr bool
+  isnan(long double __x)
+  { return __builtin_isnan(__x); }
+
+  template<typename _Tp>
+    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                              bool>::__type
+    isnan(_Tp __x)
+    { return false; }
+
+  constexpr bool
+  isnormal(float __x)
+  { return __builtin_isnormal(__x); }
+
+  constexpr bool
+  isnormal(double __x)
+  { return __builtin_isnormal(__x); }
+
+  constexpr bool
+  isnormal(long double __x)
+  { return __builtin_isnormal(__x); }
+
+  template<typename _Tp>
+    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                              bool>::__type
+    isnormal(_Tp __x)
+    { return __x != 0 ? true : false; }
+
+
+  constexpr bool
+  signbit(float __x)
+  { return __builtin_signbitf(__x); }
+
+  constexpr bool
+  signbit(double __x)
+  { return __builtin_signbit(__x); }
+
+  constexpr bool
+  signbit(long double __x)
+  { return __builtin_signbitl(__x); }
+
+  template<typename _Tp>
+    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
+                                              bool>::__type
+    signbit(_Tp __x)
+    { return __x < 0 ? true : false; }
+
+  constexpr bool
+  isgreater(float __x, float __y)
+  { return __builtin_isgreater(__x, __y); }
+
+  constexpr bool
+  isgreater(double __x, double __y)
+  { return __builtin_isgreater(__x, __y); }
+
+  constexpr bool
+  isgreater(long double __x, long double __y)
+  { return __builtin_isgreater(__x, __y); }
+
+  template<typename _Tp, typename _Up>
+    constexpr typename
+    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
+       && __is_arithmetic<_Up>::__value), bool>::__type
+    isgreater(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return __builtin_isgreater(__type(__x), __type(__y));
+    }
+
+  constexpr bool
+  isgreaterequal(float __x, float __y)
+  { return __builtin_isgreaterequal(__x, __y); }
+
+  constexpr bool
+  isgreaterequal(double __x, double __y)
+  { return __builtin_isgreaterequal(__x, __y); }
+
+  constexpr bool
+  isgreaterequal(long double __x, long double __y)
+  { return __builtin_isgreaterequal(__x, __y); }
+
+  template<typename _Tp, typename _Up>
+    constexpr typename
+    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
+       && __is_arithmetic<_Up>::__value), bool>::__type
+    isgreaterequal(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return __builtin_isgreaterequal(__type(__x), __type(__y));
+    }
+
+  constexpr bool
+  isless(float __x, float __y)
+  { return __builtin_isless(__x, __y); }
+
+  constexpr bool
+  isless(double __x, double __y)
+  { return __builtin_isless(__x, __y); }
+
+  constexpr bool
+  isless(long double __x, long double __y)
+  { return __builtin_isless(__x, __y); }
+
+  template<typename _Tp, typename _Up>
+    constexpr typename
+    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
+       && __is_arithmetic<_Up>::__value), bool>::__type
+    isless(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return __builtin_isless(__type(__x), __type(__y));
+    }
+
+  constexpr bool
+  islessequal(float __x, float __y)
+  { return __builtin_islessequal(__x, __y); }
+
+  constexpr bool
+  islessequal(double __x, double __y)
+  { return __builtin_islessequal(__x, __y); }
+
+  constexpr bool
+  islessequal(long double __x, long double __y)
+  { return __builtin_islessequal(__x, __y); }
+
+  template<typename _Tp, typename _Up>
+    constexpr typename
+    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
+       && __is_arithmetic<_Up>::__value), bool>::__type
+    islessequal(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return __builtin_islessequal(__type(__x), __type(__y));
+    }
+
+  constexpr bool
+  islessgreater(float __x, float __y)
+  { return __builtin_islessgreater(__x, __y); }
+
+  constexpr bool
+  islessgreater(double __x, double __y)
+  { return __builtin_islessgreater(__x, __y); }
+
+  constexpr bool
+  islessgreater(long double __x, long double __y)
+  { return __builtin_islessgreater(__x, __y); }
+
+  template<typename _Tp, typename _Up>
+    constexpr typename
+    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
+       && __is_arithmetic<_Up>::__value), bool>::__type
+    islessgreater(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return __builtin_islessgreater(__type(__x), __type(__y));
+    }
+
+  constexpr bool
+  isunordered(float __x, float __y)
+  { return __builtin_isunordered(__x, __y); }
+
+  constexpr bool
+  isunordered(double __x, double __y)
+  { return __builtin_isunordered(__x, __y); }
+
+  constexpr bool
+  isunordered(long double __x, long double __y)
+  { return __builtin_isunordered(__x, __y); }
+
+  template<typename _Tp, typename _Up>
+    constexpr typename
+    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
+       && __is_arithmetic<_Up>::__value), bool>::__type
+    isunordered(_Tp __x, _Up __y)
+    {
+      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
+      return __builtin_isunordered(__type(__x), __type(__y));
+    }
+# 917 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cmath" 3
+
+}
+# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/cmath" 2
+# 13 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/cmath"
+#define GLIBC_FIX_NEEDED 0
+# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 1 3
+# 38 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+#define _GLIBCXX_NUMERIC_LIMITS 1
+
+       
+# 41 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+# 80 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+#define __glibcxx_integral_traps true
+# 89 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+#define __glibcxx_float_has_denorm_loss false
+
+
+#define __glibcxx_float_traps false
+
+
+#define __glibcxx_float_tinyness_before false
+
+
+
+
+
+
+
+#define __glibcxx_double_has_denorm_loss false
+
+
+#define __glibcxx_double_traps false
+
+
+#define __glibcxx_double_tinyness_before false
+
+
+
+
+
+
+
+#define __glibcxx_long_double_has_denorm_loss false
+
+
+#define __glibcxx_long_double_traps false
+
+
+#define __glibcxx_long_double_tinyness_before false
+
+
+
+
+#define __glibcxx_signed(T) ((T)(-1) < 0)
+
+#define __glibcxx_min(T) (__glibcxx_signed (T) ? -__glibcxx_max (T) - 1 : (T)0)
+
+
+#define __glibcxx_max(T) (__glibcxx_signed (T) ? (((((T)1 << (__glibcxx_digits (T) - 1)) - 1) << 1) + 1) : ~(T)0)
+
+
+
+#define __glibcxx_digits(T) (sizeof(T) * __CHAR_BIT__ - __glibcxx_signed (T))
+
+
+
+#define __glibcxx_digits10(T) (__glibcxx_digits (T) * 643L / 2136)
+
+
+#define __glibcxx_max_digits10(T) (2 + (T) * 643L / 2136)
+
+
+namespace std __attribute__ ((__visibility__ ("default")))
+{
+
+
+
+
+
+
+
+  enum float_round_style
+  {
+    round_indeterminate = -1,
+    round_toward_zero = 0,
+    round_to_nearest = 1,
+    round_toward_infinity = 2,
+    round_toward_neg_infinity = 3
+  };
+
+
+
+
+
+
+
+  enum float_denorm_style
+  {
+
+    denorm_indeterminate = -1,
+
+    denorm_absent = 0,
+
+    denorm_present = 1
+  };
+# 191 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+  struct __numeric_limits_base
+  {
+
+
+    static constexpr bool is_specialized = false;
+
+
+
+
+    static constexpr int digits = 0;
+
+
+    static constexpr int digits10 = 0;
+
+
+
+
+    static constexpr int max_digits10 = 0;
+
+
+
+    static constexpr bool is_signed = false;
+
+
+    static constexpr bool is_integer = false;
+
+
+
+
+    static constexpr bool is_exact = false;
+
+
+
+    static constexpr int radix = 0;
+
+
+
+    static constexpr int min_exponent = 0;
+
+
+
+    static constexpr int min_exponent10 = 0;
+
+
+
+
+    static constexpr int max_exponent = 0;
+
+
+
+    static constexpr int max_exponent10 = 0;
+
+
+    static constexpr bool has_infinity = false;
+
+
+
+    static constexpr bool has_quiet_NaN = false;
+
+
+
+    static constexpr bool has_signaling_NaN = false;
+
+
+    static constexpr float_denorm_style has_denorm = denorm_absent;
+
+
+
+    static constexpr bool has_denorm_loss = false;
+
+
+
+    static constexpr bool is_iec559 = false;
+
+
+
+
+    static constexpr bool is_bounded = false;
+# 277 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+    static constexpr bool is_modulo = false;
+
+
+    static constexpr bool traps = false;
+
+
+    static constexpr bool tinyness_before = false;
+
+
+
+
+    static constexpr float_round_style round_style =
+          round_toward_zero;
+  };
+# 303 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+  template<typename _Tp>
+    struct numeric_limits : public __numeric_limits_base
+    {
+
+
+      static constexpr _Tp
+      min() noexcept { return _Tp(); }
+
+
+      static constexpr _Tp
+      max() noexcept { return _Tp(); }
+
+
+
+
+      static constexpr _Tp
+      lowest() noexcept { return _Tp(); }
+
+
+
+
+      static constexpr _Tp
+      epsilon() noexcept { return _Tp(); }
+
+
+      static constexpr _Tp
+      round_error() noexcept { return _Tp(); }
+
+
+      static constexpr _Tp
+      infinity() noexcept { return _Tp(); }
+
+
+
+      static constexpr _Tp
+      quiet_NaN() noexcept { return _Tp(); }
+
+
+
+      static constexpr _Tp
+      signaling_NaN() noexcept { return _Tp(); }
+
+
+
+
+      static constexpr _Tp
+      denorm_min() noexcept { return _Tp(); }
+    };
+
+
+  template<typename _Tp>
+    struct numeric_limits<const _Tp>
+    : public numeric_limits<_Tp> { };
+
+  template<typename _Tp>
+    struct numeric_limits<volatile _Tp>
+    : public numeric_limits<_Tp> { };
+
+  template<typename _Tp>
+    struct numeric_limits<const volatile _Tp>
+    : public numeric_limits<_Tp> { };
+
+
+
+
+
+
+  template<>
+    struct numeric_limits<bool>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr bool
+      min() noexcept { return false; }
+
+      static constexpr bool
+      max() noexcept { return true; }
+
+
+      static constexpr bool
+      lowest() noexcept { return min(); }
+
+      static constexpr int digits = 1;
+      static constexpr int digits10 = 0;
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = false;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr bool
+      epsilon() noexcept { return false; }
+
+      static constexpr bool
+      round_error() noexcept { return false; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr bool
+      infinity() noexcept { return false; }
+
+      static constexpr bool
+      quiet_NaN() noexcept { return false; }
+
+      static constexpr bool
+      signaling_NaN() noexcept { return false; }
+
+      static constexpr bool
+      denorm_min() noexcept { return false; }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+
+
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<char>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr char
+      min() noexcept { return (((char)(-1) < 0) ? -(((char)(-1) < 0) ? (((((char)1 << ((sizeof(char) * 8 - ((char)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char)0) - 1 : (char)0); }
+
+      static constexpr char
+      max() noexcept { return (((char)(-1) < 0) ? (((((char)1 << ((sizeof(char) * 8 - ((char)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char)0); }
+
+
+      static constexpr char
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits = (sizeof(char) * 8 - ((char)(-1) < 0));
+      static constexpr int digits10 = ((sizeof(char) * 8 - ((char)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = ((char)(-1) < 0);
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr char
+      epsilon() noexcept { return 0; }
+
+      static constexpr char
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr
+      char infinity() noexcept { return char(); }
+
+      static constexpr char
+      quiet_NaN() noexcept { return char(); }
+
+      static constexpr char
+      signaling_NaN() noexcept { return char(); }
+
+      static constexpr char
+      denorm_min() noexcept { return static_cast<char>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = !is_signed;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<signed char>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr signed char
+      min() noexcept { return -127 - 1; }
+
+      static constexpr signed char
+      max() noexcept { return 127; }
+
+
+      static constexpr signed char
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits = (sizeof(signed char) * 8 - ((signed char)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(signed char) * 8 - ((signed char)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr signed char
+      epsilon() noexcept { return 0; }
+
+      static constexpr signed char
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr signed char
+      infinity() noexcept { return static_cast<signed char>(0); }
+
+      static constexpr signed char
+      quiet_NaN() noexcept { return static_cast<signed char>(0); }
+
+      static constexpr signed char
+      signaling_NaN() noexcept
+      { return static_cast<signed char>(0); }
+
+      static constexpr signed char
+      denorm_min() noexcept
+      { return static_cast<signed char>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<unsigned char>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr unsigned char
+      min() noexcept { return 0; }
+
+      static constexpr unsigned char
+      max() noexcept { return 127 * 2U + 1; }
+
+
+      static constexpr unsigned char
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits
+       = (sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = false;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr unsigned char
+      epsilon() noexcept { return 0; }
+
+      static constexpr unsigned char
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr unsigned char
+      infinity() noexcept
+      { return static_cast<unsigned char>(0); }
+
+      static constexpr unsigned char
+      quiet_NaN() noexcept
+      { return static_cast<unsigned char>(0); }
+
+      static constexpr unsigned char
+      signaling_NaN() noexcept
+      { return static_cast<unsigned char>(0); }
+
+      static constexpr unsigned char
+      denorm_min() noexcept
+      { return static_cast<unsigned char>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = true;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<wchar_t>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr wchar_t
+      min() noexcept { return (((wchar_t)(-1) < 0) ? -(((wchar_t)(-1) < 0) ? (((((wchar_t)1 << ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(wchar_t)0) - 1 : (wchar_t)0); }
+
+      static constexpr wchar_t
+      max() noexcept { return (((wchar_t)(-1) < 0) ? (((((wchar_t)1 << ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(wchar_t)0); }
+
+
+      static constexpr wchar_t
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits = (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = ((wchar_t)(-1) < 0);
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr wchar_t
+      epsilon() noexcept { return 0; }
+
+      static constexpr wchar_t
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr wchar_t
+      infinity() noexcept { return wchar_t(); }
+
+      static constexpr wchar_t
+      quiet_NaN() noexcept { return wchar_t(); }
+
+      static constexpr wchar_t
+      signaling_NaN() noexcept { return wchar_t(); }
+
+      static constexpr wchar_t
+      denorm_min() noexcept { return wchar_t(); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = !is_signed;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+
+  template<>
+    struct numeric_limits<char16_t>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr char16_t
+      min() noexcept { return (((char16_t)(-1) < 0) ? -(((char16_t)(-1) < 0) ? (((((char16_t)1 << ((sizeof(char16_t) * 8 - ((char16_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char16_t)0) - 1 : (char16_t)0); }
+
+      static constexpr char16_t
+      max() noexcept { return (((char16_t)(-1) < 0) ? (((((char16_t)1 << ((sizeof(char16_t) * 8 - ((char16_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char16_t)0); }
+
+      static constexpr char16_t
+      lowest() noexcept { return min(); }
+
+      static constexpr int digits = (sizeof(char16_t) * 8 - ((char16_t)(-1) < 0));
+      static constexpr int digits10 = ((sizeof(char16_t) * 8 - ((char16_t)(-1) < 0)) * 643L / 2136);
+      static constexpr int max_digits10 = 0;
+      static constexpr bool is_signed = ((char16_t)(-1) < 0);
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr char16_t
+      epsilon() noexcept { return 0; }
+
+      static constexpr char16_t
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr char16_t
+      infinity() noexcept { return char16_t(); }
+
+      static constexpr char16_t
+      quiet_NaN() noexcept { return char16_t(); }
+
+      static constexpr char16_t
+      signaling_NaN() noexcept { return char16_t(); }
+
+      static constexpr char16_t
+      denorm_min() noexcept { return char16_t(); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = !is_signed;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<char32_t>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr char32_t
+      min() noexcept { return (((char32_t)(-1) < 0) ? -(((char32_t)(-1) < 0) ? (((((char32_t)1 << ((sizeof(char32_t) * 8 - ((char32_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char32_t)0) - 1 : (char32_t)0); }
+
+      static constexpr char32_t
+      max() noexcept { return (((char32_t)(-1) < 0) ? (((((char32_t)1 << ((sizeof(char32_t) * 8 - ((char32_t)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(char32_t)0); }
+
+      static constexpr char32_t
+      lowest() noexcept { return min(); }
+
+      static constexpr int digits = (sizeof(char32_t) * 8 - ((char32_t)(-1) < 0));
+      static constexpr int digits10 = ((sizeof(char32_t) * 8 - ((char32_t)(-1) < 0)) * 643L / 2136);
+      static constexpr int max_digits10 = 0;
+      static constexpr bool is_signed = ((char32_t)(-1) < 0);
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr char32_t
+      epsilon() noexcept { return 0; }
+
+      static constexpr char32_t
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr char32_t
+      infinity() noexcept { return char32_t(); }
+
+      static constexpr char32_t
+      quiet_NaN() noexcept { return char32_t(); }
+
+      static constexpr char32_t
+      signaling_NaN() noexcept { return char32_t(); }
+
+      static constexpr char32_t
+      denorm_min() noexcept { return char32_t(); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = !is_signed;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style = round_toward_zero;
+    };
+
+
+
+  template<>
+    struct numeric_limits<short>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr short
       min() noexcept { return -32767 - 1; }
 
-      static constexpr short
-      max() noexcept { return 32767; }
+      static constexpr short
+      max() noexcept { return 32767; }
+
+
+      static constexpr short
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits = (sizeof(short) * 8 - ((short)(-1) < 0));
+      static constexpr int digits10 = ((sizeof(short) * 8 - ((short)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr short
+      epsilon() noexcept { return 0; }
+
+      static constexpr short
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr short
+      infinity() noexcept { return short(); }
+
+      static constexpr short
+      quiet_NaN() noexcept { return short(); }
+
+      static constexpr short
+      signaling_NaN() noexcept { return short(); }
+
+      static constexpr short
+      denorm_min() noexcept { return short(); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<unsigned short>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr unsigned short
+      min() noexcept { return 0; }
+
+      static constexpr unsigned short
+      max() noexcept { return 32767 * 2U + 1; }
+
+
+      static constexpr unsigned short
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits
+       = (sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = false;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr unsigned short
+      epsilon() noexcept { return 0; }
+
+      static constexpr unsigned short
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr unsigned short
+      infinity() noexcept
+      { return static_cast<unsigned short>(0); }
+
+      static constexpr unsigned short
+      quiet_NaN() noexcept
+      { return static_cast<unsigned short>(0); }
+
+      static constexpr unsigned short
+      signaling_NaN() noexcept
+      { return static_cast<unsigned short>(0); }
+
+      static constexpr unsigned short
+      denorm_min() noexcept
+      { return static_cast<unsigned short>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = true;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<int>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr int
+      min() noexcept { return -2147483647 - 1; }
+
+      static constexpr int
+      max() noexcept { return 2147483647; }
+
+
+      static constexpr int
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits = (sizeof(int) * 8 - ((int)(-1) < 0));
+      static constexpr int digits10 = ((sizeof(int) * 8 - ((int)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr int
+      epsilon() noexcept { return 0; }
+
+      static constexpr int
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr int
+      infinity() noexcept { return static_cast<int>(0); }
+
+      static constexpr int
+      quiet_NaN() noexcept { return static_cast<int>(0); }
+
+      static constexpr int
+      signaling_NaN() noexcept { return static_cast<int>(0); }
+
+      static constexpr int
+      denorm_min() noexcept { return static_cast<int>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<unsigned int>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr unsigned int
+      min() noexcept { return 0; }
+
+      static constexpr unsigned int
+      max() noexcept { return 2147483647 * 2U + 1; }
+
+
+      static constexpr unsigned int
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits
+       = (sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = false;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr unsigned int
+      epsilon() noexcept { return 0; }
+
+      static constexpr unsigned int
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr unsigned int
+      infinity() noexcept { return static_cast<unsigned int>(0); }
+
+      static constexpr unsigned int
+      quiet_NaN() noexcept
+      { return static_cast<unsigned int>(0); }
+
+      static constexpr unsigned int
+      signaling_NaN() noexcept
+      { return static_cast<unsigned int>(0); }
+
+      static constexpr unsigned int
+      denorm_min() noexcept
+      { return static_cast<unsigned int>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = true;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<long>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr long
+      min() noexcept { return -2147483647L - 1; }
+
+      static constexpr long
+      max() noexcept { return 2147483647L; }
+
+
+      static constexpr long
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits = (sizeof(long) * 8 - ((long)(-1) < 0));
+      static constexpr int digits10 = ((sizeof(long) * 8 - ((long)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr long
+      epsilon() noexcept { return 0; }
+
+      static constexpr long
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr long
+      infinity() noexcept { return static_cast<long>(0); }
+
+      static constexpr long
+      quiet_NaN() noexcept { return static_cast<long>(0); }
+
+      static constexpr long
+      signaling_NaN() noexcept { return static_cast<long>(0); }
+
+      static constexpr long
+      denorm_min() noexcept { return static_cast<long>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<unsigned long>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr unsigned long
+      min() noexcept { return 0; }
+
+      static constexpr unsigned long
+      max() noexcept { return 2147483647L * 2UL + 1; }
+
+
+      static constexpr unsigned long
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits
+       = (sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = false;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr unsigned long
+      epsilon() noexcept { return 0; }
+
+      static constexpr unsigned long
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr unsigned long
+      infinity() noexcept
+      { return static_cast<unsigned long>(0); }
+
+      static constexpr unsigned long
+      quiet_NaN() noexcept
+      { return static_cast<unsigned long>(0); }
+
+      static constexpr unsigned long
+      signaling_NaN() noexcept
+      { return static_cast<unsigned long>(0); }
+
+      static constexpr unsigned long
+      denorm_min() noexcept
+      { return static_cast<unsigned long>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = true;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<long long>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr long long
+      min() noexcept { return -9223372036854775807LL - 1; }
+
+      static constexpr long long
+      max() noexcept { return 9223372036854775807LL; }
+
+
+      static constexpr long long
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits
+       = (sizeof(long long) * 8 - ((long long)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(long long) * 8 - ((long long)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr long long
+      epsilon() noexcept { return 0; }
+
+      static constexpr long long
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr long long
+      infinity() noexcept { return static_cast<long long>(0); }
+
+      static constexpr long long
+      quiet_NaN() noexcept { return static_cast<long long>(0); }
+
+      static constexpr long long
+      signaling_NaN() noexcept
+      { return static_cast<long long>(0); }
+
+      static constexpr long long
+      denorm_min() noexcept { return static_cast<long long>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+
+
+  template<>
+    struct numeric_limits<unsigned long long>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr unsigned long long
+      min() noexcept { return 0; }
+
+      static constexpr unsigned long long
+      max() noexcept { return 9223372036854775807LL * 2ULL + 1; }
+
+
+      static constexpr unsigned long long
+      lowest() noexcept { return min(); }
+
+
+      static constexpr int digits
+       = (sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0));
+      static constexpr int digits10
+       = ((sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0)) * 643L / 2136);
+
+      static constexpr int max_digits10 = 0;
+
+      static constexpr bool is_signed = false;
+      static constexpr bool is_integer = true;
+      static constexpr bool is_exact = true;
+      static constexpr int radix = 2;
+
+      static constexpr unsigned long long
+      epsilon() noexcept { return 0; }
+
+      static constexpr unsigned long long
+      round_error() noexcept { return 0; }
+
+      static constexpr int min_exponent = 0;
+      static constexpr int min_exponent10 = 0;
+      static constexpr int max_exponent = 0;
+      static constexpr int max_exponent10 = 0;
+
+      static constexpr bool has_infinity = false;
+      static constexpr bool has_quiet_NaN = false;
+      static constexpr bool has_signaling_NaN = false;
+      static constexpr float_denorm_style has_denorm
+       = denorm_absent;
+      static constexpr bool has_denorm_loss = false;
+
+      static constexpr unsigned long long
+      infinity() noexcept
+      { return static_cast<unsigned long long>(0); }
+
+      static constexpr unsigned long long
+      quiet_NaN() noexcept
+      { return static_cast<unsigned long long>(0); }
+
+      static constexpr unsigned long long
+      signaling_NaN() noexcept
+      { return static_cast<unsigned long long>(0); }
+
+      static constexpr unsigned long long
+      denorm_min() noexcept
+      { return static_cast<unsigned long long>(0); }
+
+      static constexpr bool is_iec559 = false;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = true;
+
+      static constexpr bool traps = true;
+      static constexpr bool tinyness_before = false;
+      static constexpr float_round_style round_style
+       = round_toward_zero;
+    };
+# 1552 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
+  template<>
+    struct numeric_limits<float>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr float
+      min() noexcept { return 1.1754943508222875e-38F; }
+
+      static constexpr float
+      max() noexcept { return 3.4028234663852886e+38F; }
+
+
+      static constexpr float
+      lowest() noexcept { return -3.4028234663852886e+38F; }
+
+
+      static constexpr int digits = 24;
+      static constexpr int digits10 = 6;
+
+      static constexpr int max_digits10
+  = (2 + (24) * 643L / 2136);
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = false;
+      static constexpr bool is_exact = false;
+      static constexpr int radix = 2;
+
+      static constexpr float
+      epsilon() noexcept { return 1.1920928955078125e-7F; }
+
+      static constexpr float
+      round_error() noexcept { return 0.5F; }
+
+      static constexpr int min_exponent = (-125);
+      static constexpr int min_exponent10 = (-37);
+      static constexpr int max_exponent = 128;
+      static constexpr int max_exponent10 = 38;
+
+      static constexpr bool has_infinity = 1;
+      static constexpr bool has_quiet_NaN = 1;
+      static constexpr bool has_signaling_NaN = has_quiet_NaN;
+      static constexpr float_denorm_style has_denorm
+ = bool(1) ? denorm_present : denorm_absent;
+      static constexpr bool has_denorm_loss
+       = false;
+
+      static constexpr float
+      infinity() noexcept { return __builtin_huge_valf(); }
+
+      static constexpr float
+      quiet_NaN() noexcept { return __builtin_nanf(""); }
+
+      static constexpr float
+      signaling_NaN() noexcept { return __builtin_nansf(""); }
+
+      static constexpr float
+      denorm_min() noexcept { return 1.4012984643248171e-45F; }
+
+      static constexpr bool is_iec559
+ = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = false;
+      static constexpr bool tinyness_before
+       = false;
+      static constexpr float_round_style round_style
+       = round_to_nearest;
+    };
+
+#undef __glibcxx_float_has_denorm_loss
+#undef __glibcxx_float_traps
+#undef __glibcxx_float_tinyness_before
+
+
+  template<>
+    struct numeric_limits<double>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr double
+      min() noexcept { return double(2.2250738585072014e-308L); }
+
+      static constexpr double
+      max() noexcept { return double(1.7976931348623157e+308L); }
+
+
+      static constexpr double
+      lowest() noexcept { return -double(1.7976931348623157e+308L); }
+
+
+      static constexpr int digits = 53;
+      static constexpr int digits10 = 15;
+
+      static constexpr int max_digits10
+  = (2 + (53) * 643L / 2136);
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = false;
+      static constexpr bool is_exact = false;
+      static constexpr int radix = 2;
+
+      static constexpr double
+      epsilon() noexcept { return double(2.2204460492503131e-16L); }
+
+      static constexpr double
+      round_error() noexcept { return 0.5; }
+
+      static constexpr int min_exponent = (-1021);
+      static constexpr int min_exponent10 = (-307);
+      static constexpr int max_exponent = 1024;
+      static constexpr int max_exponent10 = 308;
+
+      static constexpr bool has_infinity = 1;
+      static constexpr bool has_quiet_NaN = 1;
+      static constexpr bool has_signaling_NaN = has_quiet_NaN;
+      static constexpr float_denorm_style has_denorm
+ = bool(1) ? denorm_present : denorm_absent;
+      static constexpr bool has_denorm_loss
+        = false;
+
+      static constexpr double
+      infinity() noexcept { return __builtin_huge_val(); }
+
+      static constexpr double
+      quiet_NaN() noexcept { return __builtin_nan(""); }
+
+      static constexpr double
+      signaling_NaN() noexcept { return __builtin_nans(""); }
+
+      static constexpr double
+      denorm_min() noexcept { return double(4.9406564584124654e-324L); }
+
+      static constexpr bool is_iec559
+ = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = false;
+      static constexpr bool tinyness_before
+       = false;
+      static constexpr float_round_style round_style
+       = round_to_nearest;
+    };
+
+#undef __glibcxx_double_has_denorm_loss
+#undef __glibcxx_double_traps
+#undef __glibcxx_double_tinyness_before
+
+
+  template<>
+    struct numeric_limits<long double>
+    {
+      static constexpr bool is_specialized = true;
+
+      static constexpr long double
+      min() noexcept { return 2.2250738585072014e-308L; }
+
+      static constexpr long double
+      max() noexcept { return 1.7976931348623157e+308L; }
+
+
+      static constexpr long double
+      lowest() noexcept { return -1.7976931348623157e+308L; }
+
+
+      static constexpr int digits = 53;
+      static constexpr int digits10 = 15;
+
+      static constexpr int max_digits10
+  = (2 + (53) * 643L / 2136);
+
+      static constexpr bool is_signed = true;
+      static constexpr bool is_integer = false;
+      static constexpr bool is_exact = false;
+      static constexpr int radix = 2;
+
+      static constexpr long double
+      epsilon() noexcept { return 2.2204460492503131e-16L; }
+
+      static constexpr long double
+      round_error() noexcept { return 0.5L; }
+
+      static constexpr int min_exponent = (-1021);
+      static constexpr int min_exponent10 = (-307);
+      static constexpr int max_exponent = 1024;
+      static constexpr int max_exponent10 = 308;
+
+      static constexpr bool has_infinity = 1;
+      static constexpr bool has_quiet_NaN = 1;
+      static constexpr bool has_signaling_NaN = has_quiet_NaN;
+      static constexpr float_denorm_style has_denorm
+ = bool(1) ? denorm_present : denorm_absent;
+      static constexpr bool has_denorm_loss
+ = false;
+
+      static constexpr long double
+      infinity() noexcept { return __builtin_huge_vall(); }
+
+      static constexpr long double
+      quiet_NaN() noexcept { return __builtin_nanl(""); }
+
+      static constexpr long double
+      signaling_NaN() noexcept { return __builtin_nansl(""); }
+
+      static constexpr long double
+      denorm_min() noexcept { return 4.9406564584124654e-324L; }
+
+      static constexpr bool is_iec559
+ = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
+      static constexpr bool is_bounded = true;
+      static constexpr bool is_modulo = false;
+
+      static constexpr bool traps = false;
+      static constexpr bool tinyness_before =
+      false;
+      static constexpr float_round_style round_style =
+            round_to_nearest;
+    };
+
+#undef __glibcxx_long_double_has_denorm_loss
+#undef __glibcxx_long_double_traps
+#undef __glibcxx_long_double_tinyness_before
+
+
+}
+
+#undef __glibcxx_signed
+#undef __glibcxx_min
+#undef __glibcxx_max
+#undef __glibcxx_digits
+#undef __glibcxx_digits10
+#undef __glibcxx_max_digits10
+# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdint.h" 1 3 4
+
+
+
+#undef __STDC_LIMIT_MACROS
+#define __STDC_LIMIT_MACROS 
+#undef __STDC_CONSTANT_MACROS
+#define __STDC_CONSTANT_MACROS 
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 1 3 4
+# 10 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define _STDINT_H 
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_intsup.h" 1 3 4
+# 10 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_intsup.h" 3 4
+#define _SYS__INTSUP_H 
+
+
+
+
+
+#define __STDINT_EXP(x) __ ##x ##__
+# 26 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/_intsup.h" 3 4
+#define __have_longlong64 1
+
+
+
+
+
+
+#define __have_long32 1
+# 14 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 2 3 4
+
+
+extern "C" {
+
+
+
+typedef __int8_t int8_t ;
+typedef __uint8_t uint8_t ;
+#define __int8_t_defined 1
+
+
+
+typedef __int_least8_t int_least8_t;
+typedef __uint_least8_t uint_least8_t;
+#define __int_least8_t_defined 1
+
+
+
+typedef __int16_t int16_t ;
+typedef __uint16_t uint16_t ;
+#define __int16_t_defined 1
+
+
+
+typedef __int_least16_t int_least16_t;
+typedef __uint_least16_t uint_least16_t;
+#define __int_least16_t_defined 1
+
+
+
+typedef __int32_t int32_t ;
+typedef __uint32_t uint32_t ;
+#define __int32_t_defined 1
+
+
+
+typedef __int_least32_t int_least32_t;
+typedef __uint_least32_t uint_least32_t;
+#define __int_least32_t_defined 1
+
+
+
+typedef __int64_t int64_t ;
+typedef __uint64_t uint64_t ;
+#define __int64_t_defined 1
+
+
+
+typedef __int_least64_t int_least64_t;
+typedef __uint_least64_t uint_least64_t;
+#define __int_least64_t_defined 1
+# 74 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+  typedef int int_fast8_t;
+  typedef unsigned int uint_fast8_t;
+#define __int_fast8_t_defined 1
+
+
+
+
+
+
+
+  typedef int int_fast16_t;
+  typedef unsigned int uint_fast16_t;
+#define __int_fast16_t_defined 1
+
+
+
+
+
+
+
+  typedef int int_fast32_t;
+  typedef unsigned int uint_fast32_t;
+#define __int_fast32_t_defined 1
+
+
+
+
+
+
+
+  typedef long long int int_fast64_t;
+  typedef long long unsigned int uint_fast64_t;
+#define __int_fast64_t_defined 1
+# 153 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+  typedef long long int intmax_t;
+# 162 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+  typedef long long unsigned int uintmax_t;
+
+
+
+
+
+
+typedef __intptr_t intptr_t;
+typedef __uintptr_t uintptr_t;
+
+
+#define INTPTR_MIN (-__INTPTR_MAX__ - 1)
+#define INTPTR_MAX __INTPTR_MAX__
+#define UINTPTR_MAX __UINTPTR_MAX__
+# 197 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT8_MIN (-__INT8_MAX__ - 1)
+#define INT8_MAX __INT8_MAX__
+#define UINT8_MAX __UINT8_MAX__
+
+
+
+
+
+
+
+#define INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)
+#define INT_LEAST8_MAX __INT_LEAST8_MAX__
+#define UINT_LEAST8_MAX __UINT_LEAST8_MAX__
+# 219 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT16_MIN (-__INT16_MAX__ - 1)
+#define INT16_MAX __INT16_MAX__
+#define UINT16_MAX __UINT16_MAX__
+
+
+
+
+
+
+
+#define INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)
+#define INT_LEAST16_MAX __INT_LEAST16_MAX__
+#define UINT_LEAST16_MAX __UINT_LEAST16_MAX__
+# 241 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT32_MIN (-__INT32_MAX__ - 1)
+#define INT32_MAX __INT32_MAX__
+#define UINT32_MAX __UINT32_MAX__
+# 257 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)
+#define INT_LEAST32_MAX __INT_LEAST32_MAX__
+#define UINT_LEAST32_MAX __UINT_LEAST32_MAX__
+# 275 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT64_MIN (-__INT64_MAX__ - 1)
+#define INT64_MAX __INT64_MAX__
+#define UINT64_MAX __UINT64_MAX__
+# 291 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)
+#define INT_LEAST64_MAX __INT_LEAST64_MAX__
+#define UINT_LEAST64_MAX __UINT_LEAST64_MAX__
+# 307 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)
+#define INT_FAST8_MAX __INT_FAST8_MAX__
+#define UINT_FAST8_MAX __UINT_FAST8_MAX__
+# 323 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)
+#define INT_FAST16_MAX __INT_FAST16_MAX__
+#define UINT_FAST16_MAX __UINT_FAST16_MAX__
+# 339 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)
+#define INT_FAST32_MAX __INT_FAST32_MAX__
+#define UINT_FAST32_MAX __UINT_FAST32_MAX__
+# 355 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)
+#define INT_FAST64_MAX __INT_FAST64_MAX__
+#define UINT_FAST64_MAX __UINT_FAST64_MAX__
+# 371 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INTMAX_MAX __INTMAX_MAX__
+#define INTMAX_MIN (-INTMAX_MAX - 1)
+
+
+
+
+
+
+
+#define UINTMAX_MAX __UINTMAX_MAX__
+
+
+
+
+
+
+
+#define SIZE_MAX __SIZE_MAX__
+
+
+
+
+
+#define SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)
+#define SIG_ATOMIC_MAX __STDINT_EXP(INT_MAX)
+
+
+
+#define PTRDIFF_MAX __PTRDIFF_MAX__
+
+
+
+#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)
+
+
+
+
+#define WCHAR_MIN __WCHAR_MIN__
+# 419 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define WCHAR_MAX __WCHAR_MAX__
+# 429 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define WINT_MAX __WINT_MAX__
+
+
+
+
+#define WINT_MIN __WINT_MIN__
+
+
+
+
+
+
+#define INT8_C(x) __INT8_C(x)
+#define UINT8_C(x) __UINT8_C(x)
+# 453 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT16_C(x) __INT16_C(x)
+#define UINT16_C(x) __UINT16_C(x)
+# 465 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT32_C(x) __INT32_C(x)
+#define UINT32_C(x) __UINT32_C(x)
+# 478 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INT64_C(x) __INT64_C(x)
+#define UINT64_C(x) __UINT64_C(x)
+# 494 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+#define INTMAX_C(x) __INTMAX_C(x)
+#define UINTMAX_C(x) __UINTMAX_C(x)
+# 508 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdint.h" 3 4
+}
+# 10 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdint.h" 2 3 4
+
+
+
+#define _GCC_WRAP_STDINT_H 
+# 6 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/type_traits" 1
+       
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 1 3
+# 30 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+#define _GLIBCXX_TYPE_TRAITS 1
+
+       
+# 33 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+# 42 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+namespace std
+{
+  typedef short unsigned int uint_least16_t;
+  typedef long unsigned int uint_least32_t;
+}
+
+
+
+
+
+namespace std __attribute__ ((__visibility__ ("default")))
+{
+
+# 68 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp, _Tp __v>
+    struct integral_constant
+    {
+      static constexpr _Tp value = __v;
+      typedef _Tp value_type;
+      typedef integral_constant<_Tp, __v> type;
+      constexpr operator value_type() const { return value; }
+
+
+
+    };
+
+  template<typename _Tp, _Tp __v>
+    constexpr _Tp integral_constant<_Tp, __v>::value;
+
+
+  typedef integral_constant<bool, true> true_type;
+
+
+  typedef integral_constant<bool, false> false_type;
+
+
+
+  template<bool, typename, typename>
+    struct conditional;
+
+  template<typename...>
+    struct __or_;
+
+  template<>
+    struct __or_<>
+    : public false_type
+    { };
+
+  template<typename _B1>
+    struct __or_<_B1>
+    : public _B1
+    { };
+
+  template<typename _B1, typename _B2>
+    struct __or_<_B1, _B2>
+    : public conditional<_B1::value, _B1, _B2>::type
+    { };
+
+  template<typename _B1, typename _B2, typename _B3, typename... _Bn>
+    struct __or_<_B1, _B2, _B3, _Bn...>
+    : public conditional<_B1::value, _B1, __or_<_B2, _B3, _Bn...>>::type
+    { };
+
+  template<typename...>
+    struct __and_;
+
+  template<>
+    struct __and_<>
+    : public true_type
+    { };
+
+  template<typename _B1>
+    struct __and_<_B1>
+    : public _B1
+    { };
+
+  template<typename _B1, typename _B2>
+    struct __and_<_B1, _B2>
+    : public conditional<_B1::value, _B2, _B1>::type
+    { };
+
+  template<typename _B1, typename _B2, typename _B3, typename... _Bn>
+    struct __and_<_B1, _B2, _B3, _Bn...>
+    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type
+    { };
+
+  template<typename _Pp>
+    struct __not_
+    : public integral_constant<bool, !_Pp::value>
+    { };
+
+
+
+
+
+
+  template<typename _Tp>
+    struct __success_type
+    { typedef _Tp type; };
+
+  struct __failure_type
+  { };
+
+
+
+  template<typename>
+    struct remove_cv;
+
+  template<typename>
+    struct __is_void_helper
+    : public false_type { };
+
+  template<>
+    struct __is_void_helper<void>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_void
+    : public __is_void_helper<typename remove_cv<_Tp>::type>::type
+    { };
+
+  template<typename>
+    struct __is_integral_helper
+    : public false_type { };
+
+  template<>
+    struct __is_integral_helper<bool>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<char>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<signed char>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<unsigned char>
+    : public true_type { };
+
+
+  template<>
+    struct __is_integral_helper<wchar_t>
+    : public true_type { };
+
+
+  template<>
+    struct __is_integral_helper<char16_t>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<char32_t>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<short>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<unsigned short>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<int>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<unsigned int>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<long>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<unsigned long>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<long long>
+    : public true_type { };
+
+  template<>
+    struct __is_integral_helper<unsigned long long>
+    : public true_type { };
+# 253 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp>
+    struct is_integral
+    : public __is_integral_helper<typename remove_cv<_Tp>::type>::type
+    { };
+
+  template<typename>
+    struct __is_floating_point_helper
+    : public false_type { };
+
+  template<>
+    struct __is_floating_point_helper<float>
+    : public true_type { };
+
+  template<>
+    struct __is_floating_point_helper<double>
+    : public true_type { };
+
+  template<>
+    struct __is_floating_point_helper<long double>
+    : public true_type { };
+# 281 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp>
+    struct is_floating_point
+    : public __is_floating_point_helper<typename remove_cv<_Tp>::type>::type
+    { };
+
+
+  template<typename>
+    struct is_array
+    : public false_type { };
+
+  template<typename _Tp, std::size_t _Size>
+    struct is_array<_Tp[_Size]>
+    : public true_type { };
+
+  template<typename _Tp>
+    struct is_array<_Tp[]>
+    : public true_type { };
+
+  template<typename>
+    struct __is_pointer_helper
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_pointer_helper<_Tp*>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_pointer
+    : public __is_pointer_helper<typename remove_cv<_Tp>::type>::type
+    { };
+
+
+  template<typename>
+    struct is_lvalue_reference
+    : public false_type { };
+
+  template<typename _Tp>
+    struct is_lvalue_reference<_Tp&>
+    : public true_type { };
+
+
+  template<typename>
+    struct is_rvalue_reference
+    : public false_type { };
+
+  template<typename _Tp>
+    struct is_rvalue_reference<_Tp&&>
+    : public true_type { };
+
+  template<typename>
+    struct is_function;
+
+  template<typename>
+    struct __is_member_object_pointer_helper
+    : public false_type { };
+
+  template<typename _Tp, typename _Cp>
+    struct __is_member_object_pointer_helper<_Tp _Cp::*>
+    : public integral_constant<bool, !is_function<_Tp>::value> { };
+
+
+  template<typename _Tp>
+    struct is_member_object_pointer
+    : public __is_member_object_pointer_helper<
+    typename remove_cv<_Tp>::type>::type
+    { };
+
+  template<typename>
+    struct __is_member_function_pointer_helper
+    : public false_type { };
+
+  template<typename _Tp, typename _Cp>
+    struct __is_member_function_pointer_helper<_Tp _Cp::*>
+    : public integral_constant<bool, is_function<_Tp>::value> { };
+
+
+  template<typename _Tp>
+    struct is_member_function_pointer
+    : public __is_member_function_pointer_helper<
+    typename remove_cv<_Tp>::type>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_enum
+    : public integral_constant<bool, __is_enum(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_union
+    : public integral_constant<bool, __is_union(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_class
+    : public integral_constant<bool, __is_class(_Tp)>
+    { };
+
+
+  template<typename>
+    struct is_function
+    : public false_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...)>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......)>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) const>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) const &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) const &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) const>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) const &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) const &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) volatile>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) volatile &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) volatile &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) volatile>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) volatile &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) volatile &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) const volatile>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) const volatile &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes...) const volatile &&>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) const volatile>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) const volatile &>
+    : public true_type { };
+
+  template<typename _Res, typename... _ArgTypes>
+    struct is_function<_Res(_ArgTypes......) const volatile &&>
+    : public true_type { };
+
+  template<typename>
+    struct __is_null_pointer_helper
+    : public false_type { };
+
+  template<>
+    struct __is_null_pointer_helper<std::nullptr_t>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_null_pointer
+    : public __is_null_pointer_helper<typename remove_cv<_Tp>::type>::type
+    { };
+
+
+  template<typename _Tp>
+    struct __is_nullptr_t
+    : public is_null_pointer<_Tp>
+    { };
+
+
+
+
+  template<typename _Tp>
+    struct is_reference
+    : public __or_<is_lvalue_reference<_Tp>,
+                   is_rvalue_reference<_Tp>>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_arithmetic
+    : public __or_<is_integral<_Tp>, is_floating_point<_Tp>>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_fundamental
+    : public __or_<is_arithmetic<_Tp>, is_void<_Tp>,
+     is_null_pointer<_Tp>>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_object
+    : public __not_<__or_<is_function<_Tp>, is_reference<_Tp>,
+                          is_void<_Tp>>>::type
+    { };
+
+  template<typename>
+    struct is_member_pointer;
+
+
+  template<typename _Tp>
+    struct is_scalar
+    : public __or_<is_arithmetic<_Tp>, is_enum<_Tp>, is_pointer<_Tp>,
+                   is_member_pointer<_Tp>, is_null_pointer<_Tp>>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_compound
+    : public integral_constant<bool, !is_fundamental<_Tp>::value> { };
+
+  template<typename _Tp>
+    struct __is_member_pointer_helper
+    : public false_type { };
+
+  template<typename _Tp, typename _Cp>
+    struct __is_member_pointer_helper<_Tp _Cp::*>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_member_pointer
+    : public __is_member_pointer_helper<typename remove_cv<_Tp>::type>::type
+    { };
+
+
+
+  template<typename _Tp>
+    struct __is_referenceable
+    : public __or_<is_object<_Tp>, is_reference<_Tp>>::type
+    { };
+
+  template<typename _Res, typename... _Args>
+    struct __is_referenceable<_Res(_Args...)>
+    : public true_type
+    { };
+
+  template<typename _Res, typename... _Args>
+    struct __is_referenceable<_Res(_Args......)>
+    : public true_type
+    { };
+
+
+
+
+  template<typename>
+    struct is_const
+    : public false_type { };
+
+  template<typename _Tp>
+    struct is_const<_Tp const>
+    : public true_type { };
+
+
+  template<typename>
+    struct is_volatile
+    : public false_type { };
+
+  template<typename _Tp>
+    struct is_volatile<_Tp volatile>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_trivial
+    : public integral_constant<bool, __is_trivial(_Tp)>
+    { };
+
+
+
+
+  template<typename _Tp>
+    struct is_standard_layout
+    : public integral_constant<bool, __is_standard_layout(_Tp)>
+    { };
+
+
+
+  template<typename _Tp>
+    struct is_pod
+    : public integral_constant<bool, __is_pod(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_literal_type
+    : public integral_constant<bool, __is_literal_type(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_empty
+    : public integral_constant<bool, __is_empty(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_polymorphic
+    : public integral_constant<bool, __is_polymorphic(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_abstract
+    : public integral_constant<bool, __is_abstract(_Tp)>
+    { };
+
+  template<typename _Tp,
+    bool = is_arithmetic<_Tp>::value>
+    struct __is_signed_helper
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_signed_helper<_Tp, true>
+    : public integral_constant<bool, _Tp(-1) < _Tp(0)>
+    { };
+
+
+  template<typename _Tp>
+    struct is_signed
+    : public __is_signed_helper<_Tp>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_unsigned
+    : public __and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp>>>::type
+    { };
+
+
+
+
+  template<typename>
+    struct add_rvalue_reference;
+
+
+
+
+
+  template<typename _Tp>
+    typename add_rvalue_reference<_Tp>::type declval() noexcept;
+
+  template<typename, unsigned = 0>
+    struct extent;
+
+  template<typename>
+    struct remove_all_extents;
+
+  template<typename _Tp>
+    struct __is_array_known_bounds
+    : public integral_constant<bool, (extent<_Tp>::value > 0)>
+    { };
+
+  template<typename _Tp>
+    struct __is_array_unknown_bounds
+    : public __and_<is_array<_Tp>, __not_<extent<_Tp>>>::type
+    { };
+
+
+
+
+
+
+  struct __do_is_destructible_impl
+  {
+    template<typename _Tp, typename = decltype(declval<_Tp&>().~_Tp())>
+      static true_type __test(int);
+
+    template<typename>
+      static false_type __test(...);
+  };
+
+  template<typename _Tp>
+    struct __is_destructible_impl
+    : public __do_is_destructible_impl
+    {
+      typedef decltype(__test<_Tp>(0)) type;
+    };
+
+  template<typename _Tp,
+           bool = __or_<is_void<_Tp>,
+                        __is_array_unknown_bounds<_Tp>,
+                        is_function<_Tp>>::value,
+           bool = __or_<is_reference<_Tp>, is_scalar<_Tp>>::value>
+    struct __is_destructible_safe;
+
+  template<typename _Tp>
+    struct __is_destructible_safe<_Tp, false, false>
+    : public __is_destructible_impl<typename
+               remove_all_extents<_Tp>::type>::type
+    { };
+
+  template<typename _Tp>
+    struct __is_destructible_safe<_Tp, true, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_destructible_safe<_Tp, false, true>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_destructible
+    : public __is_destructible_safe<_Tp>::type
+    { };
+
+
+
+
+
+  struct __do_is_nt_destructible_impl
+  {
+    template<typename _Tp>
+      static integral_constant<bool, noexcept(declval<_Tp&>().~_Tp())>
+        __test(int);
+
+    template<typename>
+      static false_type __test(...);
+  };
+
+  template<typename _Tp>
+    struct __is_nt_destructible_impl
+    : public __do_is_nt_destructible_impl
+    {
+      typedef decltype(__test<_Tp>(0)) type;
+    };
+
+  template<typename _Tp,
+           bool = __or_<is_void<_Tp>,
+                        __is_array_unknown_bounds<_Tp>,
+                        is_function<_Tp>>::value,
+           bool = __or_<is_reference<_Tp>, is_scalar<_Tp>>::value>
+    struct __is_nt_destructible_safe;
+
+  template<typename _Tp>
+    struct __is_nt_destructible_safe<_Tp, false, false>
+    : public __is_nt_destructible_impl<typename
+               remove_all_extents<_Tp>::type>::type
+    { };
+
+  template<typename _Tp>
+    struct __is_nt_destructible_safe<_Tp, true, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_nt_destructible_safe<_Tp, false, true>
+    : public true_type { };
+
+
+  template<typename _Tp>
+    struct is_nothrow_destructible
+    : public __is_nt_destructible_safe<_Tp>::type
+    { };
+
+  struct __do_is_default_constructible_impl
+  {
+    template<typename _Tp, typename = decltype(_Tp())>
+      static true_type __test(int);
+
+    template<typename>
+      static false_type __test(...);
+  };
+
+  template<typename _Tp>
+    struct __is_default_constructible_impl
+    : public __do_is_default_constructible_impl
+    {
+      typedef decltype(__test<_Tp>(0)) type;
+    };
+
+  template<typename _Tp>
+    struct __is_default_constructible_atom
+    : public __and_<__not_<is_void<_Tp>>,
+                    __is_default_constructible_impl<_Tp>>::type
+    { };
+
+  template<typename _Tp, bool = is_array<_Tp>::value>
+    struct __is_default_constructible_safe;
+
+
+
+
+
+
+  template<typename _Tp>
+    struct __is_default_constructible_safe<_Tp, true>
+    : public __and_<__is_array_known_bounds<_Tp>,
+      __is_default_constructible_atom<typename
+                      remove_all_extents<_Tp>::type>>::type
+    { };
+
+  template<typename _Tp>
+    struct __is_default_constructible_safe<_Tp, false>
+    : public __is_default_constructible_atom<_Tp>::type
+    { };
+
+
+  template<typename _Tp>
+    struct is_default_constructible
+    : public __is_default_constructible_safe<_Tp>::type
+    { };
+# 850 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  struct __do_is_static_castable_impl
+  {
+    template<typename _From, typename _To, typename
+             = decltype(static_cast<_To>(declval<_From>()))>
+      static true_type __test(int);
+
+    template<typename, typename>
+      static false_type __test(...);
+  };
+
+  template<typename _From, typename _To>
+    struct __is_static_castable_impl
+    : public __do_is_static_castable_impl
+    {
+      typedef decltype(__test<_From, _To>(0)) type;
+    };
+
+  template<typename _From, typename _To>
+    struct __is_static_castable_safe
+    : public __is_static_castable_impl<_From, _To>::type
+    { };
+
+
+  template<typename _From, typename _To>
+    struct __is_static_castable
+    : public integral_constant<bool, (__is_static_castable_safe<
+          _From, _To>::value)>
+    { };
+
+
+
+
+
+
+  struct __do_is_direct_constructible_impl
+  {
+    template<typename _Tp, typename _Arg, typename
+      = decltype(::new _Tp(declval<_Arg>()))>
+      static true_type __test(int);
+
+    template<typename, typename>
+      static false_type __test(...);
+  };
+
+  template<typename _Tp, typename _Arg>
+    struct __is_direct_constructible_impl
+    : public __do_is_direct_constructible_impl
+    {
+      typedef decltype(__test<_Tp, _Arg>(0)) type;
+    };
+
+  template<typename _Tp, typename _Arg>
+    struct __is_direct_constructible_new_safe
+    : public __and_<is_destructible<_Tp>,
+                    __is_direct_constructible_impl<_Tp, _Arg>>::type
+    { };
+
+  template<typename, typename>
+    struct is_same;
+
+  template<typename, typename>
+    struct is_base_of;
+
+  template<typename>
+    struct remove_reference;
+
+  template<typename _From, typename _To, bool
+           = __not_<__or_<is_void<_From>,
+                          is_function<_From>>>::value>
+    struct __is_base_to_derived_ref;
+
+
+
+  template<typename _From, typename _To>
+    struct __is_base_to_derived_ref<_From, _To, true>
+    {
+      typedef typename remove_cv<typename remove_reference<_From
+        >::type>::type __src_t;
+      typedef typename remove_cv<typename remove_reference<_To
+        >::type>::type __dst_t;
+      typedef __and_<__not_<is_same<__src_t, __dst_t>>,
+       is_base_of<__src_t, __dst_t>> type;
+      static constexpr bool value = type::value;
+    };
+
+  template<typename _From, typename _To>
+    struct __is_base_to_derived_ref<_From, _To, false>
+    : public false_type
+    { };
+
+  template<typename _From, typename _To, bool
+           = __and_<is_lvalue_reference<_From>,
+                    is_rvalue_reference<_To>>::value>
+    struct __is_lvalue_to_rvalue_ref;
+
+
+
+  template<typename _From, typename _To>
+    struct __is_lvalue_to_rvalue_ref<_From, _To, true>
+    {
+      typedef typename remove_cv<typename remove_reference<
+        _From>::type>::type __src_t;
+      typedef typename remove_cv<typename remove_reference<
+        _To>::type>::type __dst_t;
+      typedef __and_<__not_<is_function<__src_t>>,
+        __or_<is_same<__src_t, __dst_t>,
+      is_base_of<__dst_t, __src_t>>> type;
+      static constexpr bool value = type::value;
+    };
+
+  template<typename _From, typename _To>
+    struct __is_lvalue_to_rvalue_ref<_From, _To, false>
+    : public false_type
+    { };
+
+
+
+
+
+
+
+  template<typename _Tp, typename _Arg>
+    struct __is_direct_constructible_ref_cast
+    : public __and_<__is_static_castable<_Arg, _Tp>,
+                    __not_<__or_<__is_base_to_derived_ref<_Arg, _Tp>,
+                                 __is_lvalue_to_rvalue_ref<_Arg, _Tp>
+                   >>>::type
+    { };
+
+  template<typename _Tp, typename _Arg>
+    struct __is_direct_constructible_new
+    : public conditional<is_reference<_Tp>::value,
+    __is_direct_constructible_ref_cast<_Tp, _Arg>,
+    __is_direct_constructible_new_safe<_Tp, _Arg>
+    >::type
+    { };
+
+  template<typename _Tp, typename _Arg>
+    struct __is_direct_constructible
+    : public __is_direct_constructible_new<_Tp, _Arg>::type
+    { };
+
+
+
+
+
+
+  struct __do_is_nary_constructible_impl
+  {
+    template<typename _Tp, typename... _Args, typename
+             = decltype(_Tp(declval<_Args>()...))>
+      static true_type __test(int);
+
+    template<typename, typename...>
+      static false_type __test(...);
+  };
+
+  template<typename _Tp, typename... _Args>
+    struct __is_nary_constructible_impl
+    : public __do_is_nary_constructible_impl
+    {
+      typedef decltype(__test<_Tp, _Args...>(0)) type;
+    };
+
+  template<typename _Tp, typename... _Args>
+    struct __is_nary_constructible
+    : public __is_nary_constructible_impl<_Tp, _Args...>::type
+    {
+      static_assert(sizeof...(_Args) > 1,
+                    "Only useful for > 1 arguments");
+    };
+
+  template<typename _Tp, typename... _Args>
+    struct __is_constructible_impl
+    : public __is_nary_constructible<_Tp, _Args...>
+    { };
+
+  template<typename _Tp, typename _Arg>
+    struct __is_constructible_impl<_Tp, _Arg>
+    : public __is_direct_constructible<_Tp, _Arg>
+    { };
+
+  template<typename _Tp>
+    struct __is_constructible_impl<_Tp>
+    : public is_default_constructible<_Tp>
+    { };
+
+
+  template<typename _Tp, typename... _Args>
+    struct is_constructible
+    : public __is_constructible_impl<_Tp, _Args...>::type
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_copy_constructible_impl;
+
+  template<typename _Tp>
+    struct __is_copy_constructible_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_copy_constructible_impl<_Tp, true>
+    : public is_constructible<_Tp, const _Tp&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_copy_constructible
+    : public __is_copy_constructible_impl<_Tp>
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_move_constructible_impl;
+
+  template<typename _Tp>
+    struct __is_move_constructible_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_move_constructible_impl<_Tp, true>
+    : public is_constructible<_Tp, _Tp&&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_move_constructible
+    : public __is_move_constructible_impl<_Tp>
+    { };
+
+  template<typename _Tp>
+    struct __is_nt_default_constructible_atom
+    : public integral_constant<bool, noexcept(_Tp())>
+    { };
+
+  template<typename _Tp, bool = is_array<_Tp>::value>
+    struct __is_nt_default_constructible_impl;
+
+  template<typename _Tp>
+    struct __is_nt_default_constructible_impl<_Tp, true>
+    : public __and_<__is_array_known_bounds<_Tp>,
+      __is_nt_default_constructible_atom<typename
+                      remove_all_extents<_Tp>::type>>::type
+    { };
+
+  template<typename _Tp>
+    struct __is_nt_default_constructible_impl<_Tp, false>
+    : public __is_nt_default_constructible_atom<_Tp>
+    { };
+
+
+  template<typename _Tp>
+    struct is_nothrow_default_constructible
+    : public __and_<is_default_constructible<_Tp>,
+                    __is_nt_default_constructible_impl<_Tp>>::type
+    { };
+
+  template<typename _Tp, typename... _Args>
+    struct __is_nt_constructible_impl
+    : public integral_constant<bool, noexcept(_Tp(declval<_Args>()...))>
+    { };
+
+  template<typename _Tp, typename _Arg>
+    struct __is_nt_constructible_impl<_Tp, _Arg>
+    : public integral_constant<bool,
+                               noexcept(static_cast<_Tp>(declval<_Arg>()))>
+    { };
+
+  template<typename _Tp>
+    struct __is_nt_constructible_impl<_Tp>
+    : public is_nothrow_default_constructible<_Tp>
+    { };
+
+
+  template<typename _Tp, typename... _Args>
+    struct is_nothrow_constructible
+    : public __and_<is_constructible<_Tp, _Args...>,
+      __is_nt_constructible_impl<_Tp, _Args...>>::type
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_nothrow_copy_constructible_impl;
+
+  template<typename _Tp>
+    struct __is_nothrow_copy_constructible_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_nothrow_copy_constructible_impl<_Tp, true>
+    : public is_nothrow_constructible<_Tp, const _Tp&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_nothrow_copy_constructible
+    : public __is_nothrow_copy_constructible_impl<_Tp>
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_nothrow_move_constructible_impl;
+
+  template<typename _Tp>
+    struct __is_nothrow_move_constructible_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_nothrow_move_constructible_impl<_Tp, true>
+    : public is_nothrow_constructible<_Tp, _Tp&&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_nothrow_move_constructible
+    : public __is_nothrow_move_constructible_impl<_Tp>
+    { };
+
+  template<typename _Tp, typename _Up>
+    class __is_assignable_helper
+    {
+      template<typename _Tp1, typename _Up1,
+        typename = decltype(declval<_Tp1>() = declval<_Up1>())>
+ static true_type
+ __test(int);
+
+      template<typename, typename>
+ static false_type
+ __test(...);
+
+    public:
+      typedef decltype(__test<_Tp, _Up>(0)) type;
+    };
+
+
+  template<typename _Tp, typename _Up>
+    struct is_assignable
+      : public __is_assignable_helper<_Tp, _Up>::type
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_copy_assignable_impl;
+
+  template<typename _Tp>
+    struct __is_copy_assignable_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_copy_assignable_impl<_Tp, true>
+    : public is_assignable<_Tp&, const _Tp&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_copy_assignable
+    : public __is_copy_assignable_impl<_Tp>
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_move_assignable_impl;
+
+  template<typename _Tp>
+    struct __is_move_assignable_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_move_assignable_impl<_Tp, true>
+    : public is_assignable<_Tp&, _Tp&&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_move_assignable
+    : public __is_move_assignable_impl<_Tp>
+    { };
+
+  template<typename _Tp, typename _Up>
+    struct __is_nt_assignable_impl
+    : public integral_constant<bool, noexcept(declval<_Tp>() = declval<_Up>())>
+    { };
+
+
+  template<typename _Tp, typename _Up>
+    struct is_nothrow_assignable
+    : public __and_<is_assignable<_Tp, _Up>,
+      __is_nt_assignable_impl<_Tp, _Up>>::type
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_nt_copy_assignable_impl;
+
+  template<typename _Tp>
+    struct __is_nt_copy_assignable_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_nt_copy_assignable_impl<_Tp, true>
+    : public is_nothrow_assignable<_Tp&, const _Tp&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_nothrow_copy_assignable
+    : public __is_nt_copy_assignable_impl<_Tp>
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __is_nt_move_assignable_impl;
+
+  template<typename _Tp>
+    struct __is_nt_move_assignable_impl<_Tp, false>
+    : public false_type { };
+
+  template<typename _Tp>
+    struct __is_nt_move_assignable_impl<_Tp, true>
+    : public is_nothrow_assignable<_Tp&, _Tp&&>
+    { };
+
+
+  template<typename _Tp>
+    struct is_nothrow_move_assignable
+    : public __is_nt_move_assignable_impl<_Tp>
+    { };
+# 1286 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp>
+    struct is_trivially_destructible
+    : public __and_<is_destructible<_Tp>, integral_constant<bool,
+         __has_trivial_destructor(_Tp)>>::type
+    { };
+
+
+  template<typename _Tp>
+    struct has_trivial_default_constructor
+    : public integral_constant<bool, __has_trivial_constructor(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct has_trivial_copy_constructor
+    : public integral_constant<bool, __has_trivial_copy(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct has_trivial_copy_assign
+    : public integral_constant<bool, __has_trivial_assign(_Tp)>
+    { };
+
+
+  template<typename _Tp>
+    struct has_virtual_destructor
+    : public integral_constant<bool, __has_virtual_destructor(_Tp)>
+    { };
+
+
+
+
+
+  template<typename _Tp>
+    struct alignment_of
+    : public integral_constant<std::size_t, __alignof__(_Tp)> { };
+
+
+  template<typename>
+    struct rank
+    : public integral_constant<std::size_t, 0> { };
+
+  template<typename _Tp, std::size_t _Size>
+    struct rank<_Tp[_Size]>
+    : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
+
+  template<typename _Tp>
+    struct rank<_Tp[]>
+    : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
+
+
+  template<typename, unsigned _Uint>
+    struct extent
+    : public integral_constant<std::size_t, 0> { };
+
+  template<typename _Tp, unsigned _Uint, std::size_t _Size>
+    struct extent<_Tp[_Size], _Uint>
+    : public integral_constant<std::size_t,
+          _Uint == 0 ? _Size : extent<_Tp,
+          _Uint - 1>::value>
+    { };
+
+  template<typename _Tp, unsigned _Uint>
+    struct extent<_Tp[], _Uint>
+    : public integral_constant<std::size_t,
+          _Uint == 0 ? 0 : extent<_Tp,
+             _Uint - 1>::value>
+    { };
+
+
+
+
+
+  template<typename, typename>
+    struct is_same
+    : public false_type { };
+
+  template<typename _Tp>
+    struct is_same<_Tp, _Tp>
+    : public true_type { };
+
+
+  template<typename _Base, typename _Derived>
+    struct is_base_of
+    : public integral_constant<bool, __is_base_of(_Base, _Derived)>
+    { };
+
+  template<typename _From, typename _To,
+           bool = __or_<is_void<_From>, is_function<_To>,
+                        is_array<_To>>::value>
+    struct __is_convertible_helper
+    { typedef typename is_void<_To>::type type; };
+
+  template<typename _From, typename _To>
+    class __is_convertible_helper<_From, _To, false>
+    {
+       template<typename _To1>
+ static void __test_aux(_To1);
+
+      template<typename _From1, typename _To1,
+        typename = decltype(__test_aux<_To1>(std::declval<_From1>()))>
+ static true_type
+ __test(int);
+
+      template<typename, typename>
+ static false_type
+ __test(...);
+
+    public:
+      typedef decltype(__test<_From, _To>(0)) type;
+    };
+
+
+
+  template<typename _From, typename _To>
+    struct is_convertible
+    : public __is_convertible_helper<_From, _To>::type
+    { };
+
+
+
+
+
+  template<typename _Tp>
+    struct remove_const
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct remove_const<_Tp const>
+    { typedef _Tp type; };
+
+
+  template<typename _Tp>
+    struct remove_volatile
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct remove_volatile<_Tp volatile>
+    { typedef _Tp type; };
+
+
+  template<typename _Tp>
+    struct remove_cv
+    {
+      typedef typename
+      remove_const<typename remove_volatile<_Tp>::type>::type type;
+    };
+
+
+  template<typename _Tp>
+    struct add_const
+    { typedef _Tp const type; };
+
+
+  template<typename _Tp>
+    struct add_volatile
+    { typedef _Tp volatile type; };
+
+
+  template<typename _Tp>
+    struct add_cv
+    {
+      typedef typename
+      add_const<typename add_volatile<_Tp>::type>::type type;
+    };
+# 1482 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp>
+    struct remove_reference
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct remove_reference<_Tp&>
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct remove_reference<_Tp&&>
+    { typedef _Tp type; };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __add_lvalue_reference_helper
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct __add_lvalue_reference_helper<_Tp, true>
+    { typedef _Tp& type; };
+
+
+  template<typename _Tp>
+    struct add_lvalue_reference
+    : public __add_lvalue_reference_helper<_Tp>
+    { };
+
+  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
+    struct __add_rvalue_reference_helper
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct __add_rvalue_reference_helper<_Tp, true>
+    { typedef _Tp&& type; };
+
+
+  template<typename _Tp>
+    struct add_rvalue_reference
+    : public __add_rvalue_reference_helper<_Tp>
+    { };
+# 1539 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Unqualified, bool _IsConst, bool _IsVol>
+    struct __cv_selector;
+
+  template<typename _Unqualified>
+    struct __cv_selector<_Unqualified, false, false>
+    { typedef _Unqualified __type; };
+
+  template<typename _Unqualified>
+    struct __cv_selector<_Unqualified, false, true>
+    { typedef volatile _Unqualified __type; };
+
+  template<typename _Unqualified>
+    struct __cv_selector<_Unqualified, true, false>
+    { typedef const _Unqualified __type; };
+
+  template<typename _Unqualified>
+    struct __cv_selector<_Unqualified, true, true>
+    { typedef const volatile _Unqualified __type; };
+
+  template<typename _Qualified, typename _Unqualified,
+    bool _IsConst = is_const<_Qualified>::value,
+    bool _IsVol = is_volatile<_Qualified>::value>
+    class __match_cv_qualifiers
+    {
+      typedef __cv_selector<_Unqualified, _IsConst, _IsVol> __match;
+
+    public:
+      typedef typename __match::__type __type;
+    };
+
+
+  template<typename _Tp>
+    struct __make_unsigned
+    { typedef _Tp __type; };
+
+  template<>
+    struct __make_unsigned<char>
+    { typedef unsigned char __type; };
+
+  template<>
+    struct __make_unsigned<signed char>
+    { typedef unsigned char __type; };
+
+  template<>
+    struct __make_unsigned<short>
+    { typedef unsigned short __type; };
+
+  template<>
+    struct __make_unsigned<int>
+    { typedef unsigned int __type; };
+
+  template<>
+    struct __make_unsigned<long>
+    { typedef unsigned long __type; };
+
+  template<>
+    struct __make_unsigned<long long>
+    { typedef unsigned long long __type; };
+# 1611 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp,
+    bool _IsInt = is_integral<_Tp>::value,
+    bool _IsEnum = is_enum<_Tp>::value>
+    class __make_unsigned_selector;
+
+  template<typename _Tp>
+    class __make_unsigned_selector<_Tp, true, false>
+    {
+      typedef __make_unsigned<typename remove_cv<_Tp>::type> __unsignedt;
+      typedef typename __unsignedt::__type __unsigned_type;
+      typedef __match_cv_qualifiers<_Tp, __unsigned_type> __cv_unsigned;
+
+    public:
+      typedef typename __cv_unsigned::__type __type;
+    };
+
+  template<typename _Tp>
+    class __make_unsigned_selector<_Tp, false, true>
+    {
+
+      typedef unsigned char __smallest;
+      static const bool __b0 = sizeof(_Tp) <= sizeof(__smallest);
+      static const bool __b1 = sizeof(_Tp) <= sizeof(unsigned short);
+      static const bool __b2 = sizeof(_Tp) <= sizeof(unsigned int);
+      typedef conditional<__b2, unsigned int, unsigned long> __cond2;
+      typedef typename __cond2::type __cond2_type;
+      typedef conditional<__b1, unsigned short, __cond2_type> __cond1;
+      typedef typename __cond1::type __cond1_type;
+
+    public:
+      typedef typename conditional<__b0, __smallest, __cond1_type>::type __type;
+    };
+
+
+
+
+
+  template<typename _Tp>
+    struct make_unsigned
+    { typedef typename __make_unsigned_selector<_Tp>::__type type; };
+
+
+  template<>
+    struct make_unsigned<bool>;
+
+
+
+  template<typename _Tp>
+    struct __make_signed
+    { typedef _Tp __type; };
+
+  template<>
+    struct __make_signed<char>
+    { typedef signed char __type; };
+
+  template<>
+    struct __make_signed<unsigned char>
+    { typedef signed char __type; };
+
+  template<>
+    struct __make_signed<unsigned short>
+    { typedef signed short __type; };
+
+  template<>
+    struct __make_signed<unsigned int>
+    { typedef signed int __type; };
+
+  template<>
+    struct __make_signed<unsigned long>
+    { typedef signed long __type; };
+
+  template<>
+    struct __make_signed<unsigned long long>
+    { typedef signed long long __type; };
+
+
+  template<>
+    struct __make_signed<wchar_t> : __make_signed<unsigned int>
+    { };
+
+
+
+  template<>
+    struct __make_signed<char16_t> : __make_signed<uint_least16_t>
+    { };
+  template<>
+    struct __make_signed<char32_t> : __make_signed<uint_least32_t>
+    { };
+# 1708 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp,
+    bool _IsInt = is_integral<_Tp>::value,
+    bool _IsEnum = is_enum<_Tp>::value>
+    class __make_signed_selector;
+
+  template<typename _Tp>
+    class __make_signed_selector<_Tp, true, false>
+    {
+      typedef __make_signed<typename remove_cv<_Tp>::type> __signedt;
+      typedef typename __signedt::__type __signed_type;
+      typedef __match_cv_qualifiers<_Tp, __signed_type> __cv_signed;
+
+    public:
+      typedef typename __cv_signed::__type __type;
+    };
+
+  template<typename _Tp>
+    class __make_signed_selector<_Tp, false, true>
+    {
+
+      typedef signed char __smallest;
+      static const bool __b0 = sizeof(_Tp) <= sizeof(__smallest);
+      static const bool __b1 = sizeof(_Tp) <= sizeof(signed short);
+      static const bool __b2 = sizeof(_Tp) <= sizeof(signed int);
+      typedef conditional<__b2, signed int, signed long> __cond2;
+      typedef typename __cond2::type __cond2_type;
+      typedef conditional<__b1, signed short, __cond2_type> __cond1;
+      typedef typename __cond1::type __cond1_type;
+
+    public:
+      typedef typename conditional<__b0, __smallest, __cond1_type>::type __type;
+    };
+
+
+
+
+
+  template<typename _Tp>
+    struct make_signed
+    { typedef typename __make_signed_selector<_Tp>::__type type; };
+
+
+  template<>
+    struct make_signed<bool>;
+# 1766 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp>
+    struct remove_extent
+    { typedef _Tp type; };
+
+  template<typename _Tp, std::size_t _Size>
+    struct remove_extent<_Tp[_Size]>
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct remove_extent<_Tp[]>
+    { typedef _Tp type; };
+
+
+  template<typename _Tp>
+    struct remove_all_extents
+    { typedef _Tp type; };
+
+  template<typename _Tp, std::size_t _Size>
+    struct remove_all_extents<_Tp[_Size]>
+    { typedef typename remove_all_extents<_Tp>::type type; };
+
+  template<typename _Tp>
+    struct remove_all_extents<_Tp[]>
+    { typedef typename remove_all_extents<_Tp>::type type; };
+# 1803 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<typename _Tp, typename>
+    struct __remove_pointer_helper
+    { typedef _Tp type; };
+
+  template<typename _Tp, typename _Up>
+    struct __remove_pointer_helper<_Tp, _Up*>
+    { typedef _Up type; };
+
+
+  template<typename _Tp>
+    struct remove_pointer
+    : public __remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>
+    { };
+
+
+  template<typename _Tp, bool = __or_<__is_referenceable<_Tp>,
+          is_void<_Tp>>::value>
+    struct __add_pointer_helper
+    { typedef _Tp type; };
+
+  template<typename _Tp>
+    struct __add_pointer_helper<_Tp, true>
+    { typedef typename remove_reference<_Tp>::type* type; };
+
+  template<typename _Tp>
+    struct add_pointer
+    : public __add_pointer_helper<_Tp>
+    { };
+# 1842 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<std::size_t _Len>
+    struct __aligned_storage_msa
+    {
+      union __type
+      {
+ unsigned char __data[_Len];
+ struct __attribute__((__aligned__)) { } __align;
+      };
+    };
+# 1862 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+  template<std::size_t _Len, std::size_t _Align =
+    __alignof__(typename __aligned_storage_msa<_Len>::__type)>
+    struct aligned_storage
+    {
+      union type
+      {
+ unsigned char __data[_Len];
+ struct __attribute__((__aligned__((_Align)))) { } __align;
+      };
+    };
+
+
+
+
+  template<typename _Up,
+    bool _IsArray = is_array<_Up>::value,
+    bool _IsFunction = is_function<_Up>::value>
+    struct __decay_selector;
+
+
+  template<typename _Up>
+    struct __decay_selector<_Up, false, false>
+    { typedef typename remove_cv<_Up>::type __type; };
+
+  template<typename _Up>
+    struct __decay_selector<_Up, true, false>
+    { typedef typename remove_extent<_Up>::type* __type; };
+
+  template<typename _Up>
+    struct __decay_selector<_Up, false, true>
+    { typedef typename add_pointer<_Up>::type __type; };
+
+
+  template<typename _Tp>
+    class decay
+    {
+      typedef typename remove_reference<_Tp>::type __remove_type;
+
+    public:
+      typedef typename __decay_selector<__remove_type>::__type type;
+    };
+
+  template<typename _Tp>
+    class reference_wrapper;
+
+
+  template<typename _Tp>
+    struct __strip_reference_wrapper
+    {
+      typedef _Tp __type;
+    };
+
+  template<typename _Tp>
+    struct __strip_reference_wrapper<reference_wrapper<_Tp> >
+    {
+      typedef _Tp& __type;
+    };
+
+  template<typename _Tp>
+    struct __decay_and_strip
+    {
+      typedef typename __strip_reference_wrapper<
+ typename decay<_Tp>::type>::__type __type;
+    };
+
+
+
+
+  template<bool, typename _Tp = void>
+    struct enable_if
+    { };
+
+
+  template<typename _Tp>
+    struct enable_if<true, _Tp>
+    { typedef _Tp type; };
+
+  template<typename... _Cond>
+    using _Require = typename enable_if<__and_<_Cond...>::value>::type;
+
+
+
+  template<bool _Cond, typename _Iftrue, typename _Iffalse>
+    struct conditional
+    { typedef _Iftrue type; };
+
+
+  template<typename _Iftrue, typename _Iffalse>
+    struct conditional<false, _Iftrue, _Iffalse>
+    { typedef _Iffalse type; };
+
+
+  template<typename... _Tp>
+    struct common_type;
+
+
+
+  struct __do_common_type_impl
+  {
+    template<typename _Tp, typename _Up>
+      static __success_type<typename decay<decltype
+       (true ? std::declval<_Tp>()
+        : std::declval<_Up>())>::type> _S_test(int);
+
+    template<typename, typename>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _Tp, typename _Up>
+    struct __common_type_impl
+    : private __do_common_type_impl
+    {
+      typedef decltype(_S_test<_Tp, _Up>(0)) type;
+    };
+
+  struct __do_member_type_wrapper
+  {
+    template<typename _Tp>
+      static __success_type<typename _Tp::type> _S_test(int);
+
+    template<typename>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _Tp>
+    struct __member_type_wrapper
+    : private __do_member_type_wrapper
+    {
+      typedef decltype(_S_test<_Tp>(0)) type;
+    };
+
+  template<typename _CTp, typename... _Args>
+    struct __expanded_common_type_wrapper
+    {
+      typedef common_type<typename _CTp::type, _Args...> type;
+    };
+
+  template<typename... _Args>
+    struct __expanded_common_type_wrapper<__failure_type, _Args...>
+    { typedef __failure_type type; };
+
+  template<typename _Tp>
+    struct common_type<_Tp>
+    { typedef typename decay<_Tp>::type type; };
+
+  template<typename _Tp, typename _Up>
+    struct common_type<_Tp, _Up>
+    : public __common_type_impl<_Tp, _Up>::type
+    { };
+
+  template<typename _Tp, typename _Up, typename... _Vp>
+    struct common_type<_Tp, _Up, _Vp...>
+    : public __expanded_common_type_wrapper<typename __member_type_wrapper<
+               common_type<_Tp, _Up>>::type, _Vp...>::type
+    { };
+
+
+  template<typename _Tp>
+    struct underlying_type
+    {
+      typedef __underlying_type(_Tp) type;
+    };
+
+  template<typename _Tp>
+    struct __declval_protector
+    {
+      static const bool __stop = false;
+      static typename add_rvalue_reference<_Tp>::type __delegate();
+    };
+
+  template<typename _Tp>
+    inline typename add_rvalue_reference<_Tp>::type
+    declval() noexcept
+    {
+      static_assert(__declval_protector<_Tp>::__stop,
+      "declval() must not be used!");
+      return __declval_protector<_Tp>::__delegate();
+    }
+
+
+  template<typename _Signature>
+    class result_of;
+
+
+
+
+  struct __result_of_memfun_ref_impl
+  {
+    template<typename _Fp, typename _Tp1, typename... _Args>
+      static __success_type<decltype(
+      (std::declval<_Tp1>().*std::declval<_Fp>())(std::declval<_Args>()...)
+      )> _S_test(int);
+
+    template<typename...>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _MemPtr, typename _Arg, typename... _Args>
+    struct __result_of_memfun_ref
+    : private __result_of_memfun_ref_impl
+    {
+      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;
+    };
+
+
+  struct __result_of_memfun_deref_impl
+  {
+    template<typename _Fp, typename _Tp1, typename... _Args>
+      static __success_type<decltype(
+      ((*std::declval<_Tp1>()).*std::declval<_Fp>())(std::declval<_Args>()...)
+      )> _S_test(int);
+
+    template<typename...>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _MemPtr, typename _Arg, typename... _Args>
+    struct __result_of_memfun_deref
+    : private __result_of_memfun_deref_impl
+    {
+      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;
+    };
+
+
+  struct __result_of_memobj_ref_impl
+  {
+    template<typename _Fp, typename _Tp1>
+      static __success_type<decltype(
+      std::declval<_Tp1>().*std::declval<_Fp>()
+      )> _S_test(int);
+
+    template<typename, typename>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _MemPtr, typename _Arg>
+    struct __result_of_memobj_ref
+    : private __result_of_memobj_ref_impl
+    {
+      typedef decltype(_S_test<_MemPtr, _Arg>(0)) type;
+    };
+
+
+  struct __result_of_memobj_deref_impl
+  {
+    template<typename _Fp, typename _Tp1>
+      static __success_type<decltype(
+      (*std::declval<_Tp1>()).*std::declval<_Fp>()
+      )> _S_test(int);
+
+    template<typename, typename>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _MemPtr, typename _Arg>
+    struct __result_of_memobj_deref
+    : private __result_of_memobj_deref_impl
+    {
+      typedef decltype(_S_test<_MemPtr, _Arg>(0)) type;
+    };
+
+  template<typename _MemPtr, typename _Arg>
+    struct __result_of_memobj;
+
+  template<typename _Res, typename _Class, typename _Arg>
+    struct __result_of_memobj<_Res _Class::*, _Arg>
+    {
+      typedef typename remove_cv<typename remove_reference<
+        _Arg>::type>::type _Argval;
+      typedef _Res _Class::* _MemPtr;
+      typedef typename conditional<__or_<is_same<_Argval, _Class>,
+        is_base_of<_Class, _Argval>>::value,
+        __result_of_memobj_ref<_MemPtr, _Arg>,
+        __result_of_memobj_deref<_MemPtr, _Arg>
+      >::type::type type;
+    };
+
+  template<typename _MemPtr, typename _Arg, typename... _Args>
+    struct __result_of_memfun;
+
+  template<typename _Res, typename _Class, typename _Arg, typename... _Args>
+    struct __result_of_memfun<_Res _Class::*, _Arg, _Args...>
+    {
+      typedef typename remove_cv<typename remove_reference<
+        _Arg>::type>::type _Argval;
+      typedef _Res _Class::* _MemPtr;
+      typedef typename conditional<__or_<is_same<_Argval, _Class>,
+        is_base_of<_Class, _Argval>>::value,
+        __result_of_memfun_ref<_MemPtr, _Arg, _Args...>,
+        __result_of_memfun_deref<_MemPtr, _Arg, _Args...>
+      >::type::type type;
+    };
+
+  template<bool, bool, typename _Functor, typename... _ArgTypes>
+    struct __result_of_impl
+    {
+      typedef __failure_type type;
+    };
+
+  template<typename _MemPtr, typename _Arg>
+    struct __result_of_impl<true, false, _MemPtr, _Arg>
+    : public __result_of_memobj<typename decay<_MemPtr>::type, _Arg>
+    { };
+
+  template<typename _MemPtr, typename _Arg, typename... _Args>
+    struct __result_of_impl<false, true, _MemPtr, _Arg, _Args...>
+    : public __result_of_memfun<typename decay<_MemPtr>::type, _Arg, _Args...>
+    { };
+
+
+  struct __result_of_other_impl
+  {
+    template<typename _Fn, typename... _Args>
+      static __success_type<decltype(
+      std::declval<_Fn>()(std::declval<_Args>()...)
+      )> _S_test(int);
+
+    template<typename...>
+      static __failure_type _S_test(...);
+  };
+
+  template<typename _Functor, typename... _ArgTypes>
+    struct __result_of_impl<false, false, _Functor, _ArgTypes...>
+    : private __result_of_other_impl
+    {
+      typedef decltype(_S_test<_Functor, _ArgTypes...>(0)) type;
+    };
+
+  template<typename _Functor, typename... _ArgTypes>
+    struct result_of<_Functor(_ArgTypes...)>
+    : public __result_of_impl<
+        is_member_object_pointer<
+          typename remove_reference<_Functor>::type
+        >::value,
+        is_member_function_pointer<
+          typename remove_reference<_Functor>::type
+        >::value,
+     _Functor, _ArgTypes...
+      >::type
+    { };
+# 2240 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+#define _GLIBCXX_HAS_NESTED_TYPE(_NTYPE) template<typename _Tp> class __has_ ##_NTYPE ##_helper { template<typename _Up> struct _Wrap_type { }; template<typename _Up> static true_type __test(_Wrap_type<typename _Up::_NTYPE>*); template<typename _Up> static false_type __test(...); public: typedef decltype(__test<_Tp>(0)) type; }; template<typename _Tp> struct __has_ ##_NTYPE : public __has_ ##_NTYPE ##_helper <typename remove_cv<_Tp>::type>::type { };
+# 2264 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
+
+}
+# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/type_traits" 2
+# 7 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h" 1
+# 21 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h"
+       
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Boards.h" 1
+
+
+
+
+
+
+       
+
+#define HAL_BOARD_SITL 3
+#define HAL_BOARD_SMACCM 4
+#define HAL_BOARD_PX4 5
+#define HAL_BOARD_LINUX 7
+#define HAL_BOARD_VRBRAIN 8
+#define HAL_BOARD_QURT 9
+#define HAL_BOARD_REVOMINI 10
+#define HAL_BOARD_EMPTY 99
+
+
+#define HAL_BOARD_SUBTYPE_NONE -1
+
+
+#define HAL_BOARD_SUBTYPE_LINUX_NONE 1000
+#define HAL_BOARD_SUBTYPE_LINUX_ERLEBOARD 1001
+#define HAL_BOARD_SUBTYPE_LINUX_PXF 1002
+#define HAL_BOARD_SUBTYPE_LINUX_NAVIO 1003
+#define HAL_BOARD_SUBTYPE_LINUX_ZYNQ 1004
+#define HAL_BOARD_SUBTYPE_LINUX_BBBMINI 1005
+#define HAL_BOARD_SUBTYPE_LINUX_BEBOP 1006
+#define HAL_BOARD_SUBTYPE_LINUX_RASPILOT 1007
+#define HAL_BOARD_SUBTYPE_LINUX_MINLURE 1008
+#define HAL_BOARD_SUBTYPE_LINUX_ERLEBRAIN2 1009
+#define HAL_BOARD_SUBTYPE_LINUX_BH 1010
+#define HAL_BOARD_SUBTYPE_LINUX_QFLIGHT 1011
+#define HAL_BOARD_SUBTYPE_LINUX_PXFMINI 1012
+#define HAL_BOARD_SUBTYPE_LINUX_NAVIO2 1013
+#define HAL_BOARD_SUBTYPE_LINUX_DISCO 1014
+#define HAL_BOARD_SUBTYPE_LINUX_AERO 1015
+#define HAL_BOARD_SUBTYPE_LINUX_DARK 1016
+#define HAL_BOARD_SUBTYPE_LINUX_URUS 1017
+
+
+#define HAL_BOARD_SUBTYPE_PX4_V1 2000
+#define HAL_BOARD_SUBTYPE_PX4_V2 2001
+#define HAL_BOARD_SUBTYPE_PX4_V4 2002
+#define HAL_BOARD_SUBTYPE_PX4_V3 2003
+
+
+#define HAL_BOARD_SUBTYPE_VRBRAIN_V45 4000
+#define HAL_BOARD_SUBTYPE_VRBRAIN_V51 4001
+#define HAL_BOARD_SUBTYPE_VRBRAIN_V52 4002
+#define HAL_BOARD_SUBTYPE_VRUBRAIN_V51 4003
+#define HAL_BOARD_SUBTYPE_VRUBRAIN_V52 4004
+#define HAL_BOARD_SUBTYPE_VRCORE_V10 4005
+#define HAL_BOARD_SUBTYPE_VRBRAIN_V54 4006
+
+
+#define HAL_INS_MPU60XX_SPI 2
+#define HAL_INS_MPU60XX_I2C 3
+#define HAL_INS_HIL 4
+#define HAL_INS_PX4 5
+#define HAL_INS_L3G4200D 7
+#define HAL_INS_VRBRAIN 8
+#define HAL_INS_MPU9250_SPI 9
+#define HAL_INS_L3GD20 10
+#define HAL_INS_LSM9DS0 11
+#define HAL_INS_RASPILOT 12
+#define HAL_INS_MPU9250_I2C 13
+#define HAL_INS_BH 14
+#define HAL_INS_QFLIGHT 15
+#define HAL_INS_QURT 16
+#define HAL_INS_BBBMINI 17
+#define HAL_INS_AERO 18
+
+
+#define HAL_BARO_BMP085 1
+#define HAL_BARO_MS5611_I2C 2
+#define HAL_BARO_MS5611_SPI 3
+#define HAL_BARO_MS5607_I2C 4
+#define HAL_BARO_PX4 5
+#define HAL_BARO_HIL 6
+#define HAL_BARO_VRBRAIN 7
+#define HAL_BARO_MS5637_I2C 8
+#define HAL_BARO_QFLIGHT 9
+#define HAL_BARO_QURT 10
+
+
+#define HAL_COMPASS_HMC5843 1
+#define HAL_COMPASS_PX4 2
+#define HAL_COMPASS_HIL 3
+#define HAL_COMPASS_VRBRAIN 4
+#define HAL_COMPASS_AK8963_MPU9250 5
+#define HAL_COMPASS_AK8963_I2C 6
+#define HAL_COMPASS_HMC5843_MPU6000 7
+#define HAL_COMPASS_RASPILOT 8
+#define HAL_COMPASS_AK8963_MPU9250_I2C 9
+#define HAL_COMPASS_BH 10
+#define HAL_COMPASS_QFLIGHT 11
+#define HAL_COMPASS_QURT 12
+#define HAL_COMPASS_BBBMINI 13
+#define HAL_COMPASS_NAVIO2 14
+#define HAL_COMPASS_NAVIO 15
+#define HAL_COMPASS_AERO 16
+
+
+#define HAL_LINUX_HEAT_PWM 1
+
+
+
+
+
+#define HAL_CPU_CLASS_16 1
+
+
+
+#define HAL_CPU_CLASS_150 3
+
+#define HAL_CPU_CLASS_1000 4
+# 142 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Boards.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/board/revomini.h" 1
+#define AP_HAL_BOARD_DRIVER AP_HAL_REVOMINI
+#define HAL_BOARD_NAME "REVOMINI"
+
+#define HAL_CPU_CLASS HAL_CPU_CLASS_150
+#define HAL_OS_POSIX_IO 0
+#define HAL_STORAGE_SIZE 4096
+
+#define HAL_BARO_DEFAULT HAL_BARO_MS5611_I2C
+#define HAL_BARO_MS5611_I2C_BUS 0
+#define HAL_BARO_MS5611_I2C_ADDR 0x77
+#define HAL_BARO_MS5611_I2C_BUS_EXT 2
+
+
+
+#define HAL_COMPASS_DEFAULT HAL_COMPASS_HMC5843
+#define HAL_COMPASS_HMC5843_I2C_BUS 0
+#define HAL_COMPASS_HMC5843_I2C_EXT_BUS 2
+#define HAL_COMPASS_HMC5843_I2C_ADDR 0x1E
+
+#define HAL_SERIAL0_BAUD_DEFAULT 115200
+#define CONFIG_HAL_BOARD_SUBTYPE HAL_BOARD_SUBTYPE_NONE
+
+#define HAL_INS_DEFAULT HAL_INS_MPU60XX_SPI
+#define HAL_INS_DEFAULT_ROTATION ROTATION_YAW_180
+#define HAL_INS_MPU60x0_NAME "mpu6000"
+#define INVENSENSE_DRDY_PIN BOARD_MPU6000_DRDY_PIN
+
+#define HAL_DATAFLASH_NAME "dataflash"
+#define HMC5883_DRDY_PIN BOARD_HMC5883_DRDY_PIN
+
+
+#define HAL_GPIO_A_LED_PIN 36
+
+#define HAL_GPIO_B_LED_PIN 9
+#define HAL_GPIO_C_LED_PIN 105
+
+#define HAL_GPIO_LED_ON LOW
+#define HAL_GPIO_LED_OFF HIGH
+
+#define PUSHBUTTON_PIN 254
+#define USB_MUX_PIN -1
+#define BATTERY_VOLT_PIN 8
+#define BATTERY_CURR_PIN 7
+#define CONFIG_SONAR_SOURCE_ANALOG_PIN 254
+
+
+
+#undef TOSHIBA_LED_I2C_BUS
+#define TOSHIBA_LED_I2C_ADDR 0x55
+#define TOSHIBA_LED_I2C_BUS 2
+# 59 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/board/revomini.h"
+#define CONFIG_IMU_TYPE CONFIG_IMU_MPU6000
+#define CONFIG_SONAR_SOURCE SONAR_SOURCE_ANALOG_PIN
+#define MAGNETOMETER ENABLED
+#define CONFIG_BARO HAL_BARO_MS5611
+
+#define AC_TERRAIN DISABLED
+#define OPTFLOW DISABLED
+#define ADSB_ENABLED DISABLED
+#define PRECISION_LANDING DISABLED
+#define CONFIG_PUSHBUTTON DISABLED
+#define CONFIG_RELAY DISABLED
+#define RANGEFINDER_ENABLED DISABLED
+#define SPRAYER DISABLED
+#define EPM_ENABLED DISABLED
+#define MOUNT DISABLED
+#define CLI_ENABLED DISABLED
+
+
+#define FRSKY_TELEM_ENABLED DISABLED
+#define NAV_GUIDED DISABLED
+
+
+
+
+
+#define NAV_GUIDED DISABLED
+#define POSHOLD_ENABLED DISABLED
+
+#define LOGGING_ENABLED ENABLED
+# 143 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Boards.h" 2
+# 156 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Boards.h"
+#define HAL_OS_SOCKETS 0
+
+
+
+#define HAL_PARAM_DEFAULTS_PATH nullptr
+
+
+
+#define HAL_HAVE_IMU_HEATER 0
+
+
+
+#define HAL_RANGEFINDER_LIGHTWARE_I2C_BUS 1
+
+
+
+
+
+
+
+#define HAL_WITH_UAVCAN 0
+# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h" 2
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdlib.h" 1 3
+
+
+
+
+
+
+
+#define _STDLIB_H_ 
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/ieeefp.h" 1 3
+# 11 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdlib.h" 2 3
+
+
+#define __need_size_t 
+#define __need_wchar_t 
+#define __need_NULL 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 158 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_ptrdiff_t
+# 234 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_size_t
+# 343 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_wchar_t
+# 397 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef NULL
+
+#define NULL __null
+# 408 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_NULL
+
+
+
+
+#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
+# 17 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdlib.h" 2 3
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/machine/stdlib.h" 1 3
+
+#define _MACHSTDLIB_H_ 
+# 20 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdlib.h" 2 3
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/alloca.h" 1 3
+
+
+
+
+
+
+
+#define _NEWLIB_ALLOCA_H 
+
+
+
+
+#undef alloca
+
+
+#define alloca(size) __builtin_alloca(size)
+# 22 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdlib.h" 2 3
+
+
+
+
+
+
+extern "C" {
+
+typedef struct
+{
+  int quot;
+  int rem;
+} div_t;
+
+typedef struct
+{
+  long quot;
+  long rem;
+} ldiv_t;
+
+
+
+
+typedef struct
+{
+  long long int quot;
+  long long int rem;
+} lldiv_t;
+
+
+
+#define __compar_fn_t_defined 
+typedef int (*__compar_fn_t) (const void *, const void *);
+
+
+#define EXIT_FAILURE 1
+#define EXIT_SUCCESS 0
+
+#define RAND_MAX __RAND_MAX
+
+int __locale_mb_cur_max (void);
+
+#define MB_CUR_MAX __locale_mb_cur_max()
+
+void abort (void) __attribute__ ((__noreturn__));
+int abs (int);
+int atexit (void (*__func)(void));
+double atof (const char *__nptr);
+
+float atoff (const char *__nptr);
+
+int atoi (const char *__nptr);
+int _atoi_r (struct _reent *, const char *__nptr);
+long atol (const char *__nptr);
+long _atol_r (struct _reent *, const char *__nptr);
+void * bsearch (const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t _compar)
+
+
+
+                                ;
+void * calloc (size_t __nmemb, size_t __size) __attribute__ ((__nothrow__));
+div_t div (int __numer, int __denom);
+void exit (int __status) __attribute__ ((__noreturn__));
+void free (void *) __attribute__ ((__nothrow__));
+char * getenv (const char *__string);
+char * _getenv_r (struct _reent *, const char *__string);
+char * _findenv (const char *, int *);
+char * _findenv_r (struct _reent *, const char *, int *);
+
+extern char *suboptarg;
+int getsubopt (char **, char * const *, char **);
+
+long labs (long);
+ldiv_t ldiv (long __numer, long __denom);
+void * malloc (size_t __size) __attribute__ ((__nothrow__));
+int mblen (const char *, size_t);
+int _mblen_r (struct _reent *, const char *, size_t, _mbstate_t *);
+int mbtowc (wchar_t *__restrict, const char *__restrict, size_t);
+int _mbtowc_r (struct _reent *, wchar_t *__restrict, const char *__restrict, size_t, _mbstate_t *);
+int wctomb (char *, wchar_t);
+int _wctomb_r (struct _reent *, char *, wchar_t, _mbstate_t *);
+size_t mbstowcs (wchar_t *__restrict, const char *__restrict, size_t);
+size_t _mbstowcs_r (struct _reent *, wchar_t *__restrict, const char *__restrict, size_t, _mbstate_t *);
+size_t wcstombs (char *__restrict, const wchar_t *__restrict, size_t);
+size_t _wcstombs_r (struct _reent *, char *__restrict, const wchar_t *__restrict, size_t, _mbstate_t *);
+
+
+char * mkdtemp (char *);
+int mkostemp (char *, int);
+int mkostemps (char *, int, int);
+int mkstemp (char *);
+int mkstemps (char *, int);
+char * mktemp (char *) __attribute__ ((__warning__ ("the use of `mktemp' is dangerous; use `mkstemp' instead")));
+
+char * _mkdtemp_r (struct _reent *, char *);
+int _mkostemp_r (struct _reent *, char *, int);
+int _mkostemps_r (struct _reent *, char *, int, int);
+int _mkstemp_r (struct _reent *, char *);
+int _mkstemps_r (struct _reent *, char *, int);
+char * _mktemp_r (struct _reent *, char *) __attribute__ ((__warning__ ("the use of `mktemp' is dangerous; use `mkstemp' instead")));
+
+void qsort (void * __base, size_t __nmemb, size_t __size, __compar_fn_t _compar);
+int rand (void);
+void * realloc (void * __r, size_t __size) __attribute__ ((__nothrow__));
+
+void * reallocf (void * __r, size_t __size);
+char * realpath (const char *__restrict path, char *__restrict resolved_path);
+
+void srand (unsigned __seed);
+double strtod (const char *__restrict __n, char **__restrict __end_PTR);
+double _strtod_r (struct _reent *,const char *__restrict __n, char **__restrict __end_PTR);
+
+
+
+float strtof (const char *__restrict __n, char **__restrict __end_PTR);
+
+
+
+
+#define strtodf strtof
+
+
+long strtol (const char *__restrict __n, char **__restrict __end_PTR, int __base);
+long _strtol_r (struct _reent *,const char *__restrict __n, char **__restrict __end_PTR, int __base);
+unsigned long strtoul (const char *__restrict __n, char **__restrict __end_PTR, int __base);
+unsigned long _strtoul_r (struct _reent *,const char *__restrict __n, char **__restrict __end_PTR, int __base);
+
+int system (const char *__string);
+
+
+long a64l (const char *__input);
+char * l64a (long __input);
+char * _l64a_r (struct _reent *,long __input);
+int on_exit (void (*__func)(int, void *),void * __arg);
+
+
+
+
+void _Exit (int __status) __attribute__ ((__noreturn__));
+
+
+int putenv (char *__string);
+int _putenv_r (struct _reent *, char *__string);
+void * _reallocf_r (struct _reent *, void *, size_t);
+int setenv (const char *__string, const char *__value, int __overwrite);
+int _setenv_r (struct _reent *, const char *__string, const char *__value, int __overwrite);
+
+char * gcvt (double,int,char *);
+char * gcvtf (float,int,char *);
+char * fcvt (double,int,int *,int *);
+char * fcvtf (float,int,int *,int *);
+char * ecvt (double,int,int *,int *);
+char * ecvtbuf (double, int, int*, int*, char *);
+char * fcvtbuf (double, int, int*, int*, char *);
+char * ecvtf (float,int,int *,int *);
+char * dtoa (double, int, int, int *, int*, char**);
+int rand_r (unsigned *__seed);
+
+double drand48 (void);
+double _drand48_r (struct _reent *);
+double erand48 (unsigned short [3]);
+double _erand48_r (struct _reent *, unsigned short [3]);
+long jrand48 (unsigned short [3]);
+long _jrand48_r (struct _reent *, unsigned short [3]);
+void lcong48 (unsigned short [7]);
+void _lcong48_r (struct _reent *, unsigned short [7]);
+long lrand48 (void);
+long _lrand48_r (struct _reent *);
+long mrand48 (void);
+long _mrand48_r (struct _reent *);
+long nrand48 (unsigned short [3]);
+long _nrand48_r (struct _reent *, unsigned short [3]);
+unsigned short *
+       seed48 (unsigned short [3]);
+unsigned short *
+       _seed48_r (struct _reent *, unsigned short [3]);
+void srand48 (long);
+void _srand48_r (struct _reent *, long);
+
+
+
+
+long long atoll (const char *__nptr);
+
+
+long long _atoll_r (struct _reent *, const char *__nptr);
+
+
+
+
+long long llabs (long long);
+lldiv_t lldiv (long long __numer, long long __denom);
+long long strtoll (const char *__restrict __n, char **__restrict __end_PTR, int __base);
+
+
+long long _strtoll_r (struct _reent *, const char *__restrict __n, char **__restrict __end_PTR, int __base);
+
+
+
+
+unsigned long long strtoull (const char *__restrict __n, char **__restrict __end_PTR, int __base);
+
+
+unsigned long long _strtoull_r (struct _reent *, const char *__restrict __n, char **__restrict __end_PTR, int __base);
+
+
+void cfree (void *);
+int unsetenv (const char *__string);
+int _unsetenv_r (struct _reent *, const char *__string);
+# 239 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/stdlib.h" 3
+char * _dtoa_r (struct _reent *, double, int, int, int *, int*, char**);
+
+void * _malloc_r (struct _reent *, size_t) __attribute__ ((__nothrow__));
+void * _calloc_r (struct _reent *, size_t, size_t) __attribute__ ((__nothrow__));
+void _free_r (struct _reent *, void *) __attribute__ ((__nothrow__));
+void * _realloc_r (struct _reent *, void *, size_t) __attribute__ ((__nothrow__));
+void _mstats_r (struct _reent *, char *);
+
+int _system_r (struct _reent *, const char *);
+
+void __eprintf (const char *, const char *, unsigned int, const char *);
+
+
+
+
+
+
+extern long double strtold (const char *__restrict, char **__restrict);
+
+
+
+}
+# 26 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h" 2
+
+
+#define PACKED __attribute__((__packed__))
+
+
+#define UNUSED_FUNCTION __attribute__((unused))
+
+
+#define OPTIMIZE(level) __attribute__((optimize(level)))
+
+
+#define NOINLINE __attribute__((noinline))
+
+#define FMT_PRINTF(a,b) __attribute__((format(printf, a, b)))
+#define FMT_SCANF(a,b) __attribute__((format(scanf, a, b)))
+
+#define ToRad(x) radians(x)
+#define ToDeg(x) degrees(x)
+
+
+
+#define DEFINE_BYTE_ARRAY_METHODS inline uint8_t &operator[](size_t i) { return reinterpret_cast<uint8_t *>(this)[i]; } inline uint8_t operator[](size_t i) const { return reinterpret_cast<const uint8_t *>(this)[i]; }
+
+
+
+#define LOCATION_ALT_MAX_M 83000
+
+
+
+
+
+#define BIT_IS_SET(value,bitnumber) (((value) & (1U<<(bitnumber))) != 0)
+
+
+#define LOWBYTE(i) ((uint8_t)(i))
+#define HIGHBYTE(i) ((uint8_t)(((uint16_t)(i))>>8))
+
+template <typename T, size_t N>
+char (&_ARRAY_SIZE_HELPER(T (&_arr)[N]))[N];
+
+template <typename T>
+char (&_ARRAY_SIZE_HELPER(T (&_arr)[0]))[0];
+
+#define ARRAY_SIZE(_arr) sizeof(_ARRAY_SIZE_HELPER(_arr))
+# 78 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h"
+#define _UNUSED_RESULT(uniq_,expr_) do { decltype(expr_) uniq_ __attribute__((unused)); uniq_ = expr_; } while (0)
+# 90 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h"
+#define UNUSED_RESULT(expr_) _UNUSED_RESULT(__unique_name_ ##__COUNTER__, expr_)
+# 110 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h"
+struct __attribute__((__packed__)) Location_Option_Flags {
+    uint8_t relative_alt : 1;
+    uint8_t unused1 : 1;
+    uint8_t loiter_ccw : 1;
+    uint8_t terrain_alt : 1;
+    uint8_t origin_alt : 1;
+    uint8_t loiter_xtrack : 1;
+};
+
+struct __attribute__((__packed__)) Location {
+    union {
+        Location_Option_Flags flags;
+        uint8_t options;
+    };
+
+
+
+
+    int32_t alt:24;
+    int32_t lat;
+    int32_t lng;
+};
+
+
+
+
+enum HomeState {
+    HOME_UNSET,
+    HOME_SET_NOT_LOCKED,
+    HOME_SET_AND_LOCKED
+};
+# 155 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h"
+bool is_bounded_int32(int32_t value, int32_t lower_bound, int32_t upper_bound);
+# 167 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/AP_Common.h"
+#define SITL_printf(fmt,args...) 
+# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 1
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
+       
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 23 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 2
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/string.h" 1 3
+
+
+
+
+
+
+
+#define _STRING_H_ 
+
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 1 3
+# 41 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define _SYS_CDEFS_H_ 
+
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 46 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 2 3
+
+#define __PMT(args) args
+#define __DOTS , ...
+#define __THROW 
+
+
+#define __ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) cname
+
+
+#define __ptr_t void *
+#define __long_double_t long double
+
+#define __attribute_malloc__ 
+#define __attribute_pure__ 
+#define __attribute_format_strfmon__(a,b) 
+#define __flexarr [0]
+
+
+#define __bounded 
+#define __unbounded 
+#define __ptrvalue 
+
+
+
+
+
+
+
+#define __has_extension __has_feature
+
+
+#define __has_feature(x) 0
+
+
+
+
+
+#define __has_builtin(x) 0
+
+
+
+#define __BEGIN_DECLS extern "C" {
+#define __END_DECLS }
+# 103 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __GNUCLIKE_ASM 3
+#define __GNUCLIKE_MATH_BUILTIN_CONSTANTS 
+
+
+
+#define __GNUCLIKE___TYPEOF 1
+#define __GNUCLIKE___OFFSETOF 1
+#define __GNUCLIKE___SECTION 1
+
+
+#define __GNUCLIKE_CTOR_SECTION_HANDLING 1
+
+
+#define __GNUCLIKE_BUILTIN_CONSTANT_P 1
+
+
+
+
+
+
+#define __GNUCLIKE_BUILTIN_VARARGS 1
+#define __GNUCLIKE_BUILTIN_STDARG 1
+#define __GNUCLIKE_BUILTIN_VAALIST 1
+
+
+
+#define __GNUC_VA_LIST_COMPATIBILITY 1
+
+
+
+
+
+
+#define __compiler_membar() __asm __volatile(" " : : : "memory")
+
+
+
+#define __GNUCLIKE_BUILTIN_NEXT_ARG 1
+#define __GNUCLIKE_MATH_BUILTIN_RELOPS 
+
+
+#define __GNUCLIKE_BUILTIN_MEMCPY 1
+
+
+#define __CC_SUPPORTS_INLINE 1
+#define __CC_SUPPORTS___INLINE 1
+#define __CC_SUPPORTS___INLINE__ 1
+
+#define __CC_SUPPORTS___FUNC__ 1
+#define __CC_SUPPORTS_WARNING 1
+
+#define __CC_SUPPORTS_VARADIC_XXX 1
+
+#define __CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1
+# 173 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __P(protos) protos
+#define __CONCAT1(x,y) x ## y
+#define __CONCAT(x,y) __CONCAT1(x,y)
+#define __STRING(x) #x
+#define __XSTRING(x) __STRING(x)
+
+#define __const const
+#define __signed signed
+#define __volatile volatile
+
+#define __inline inline
+# 246 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __dead2 __attribute__((__noreturn__))
+#define __pure2 __attribute__((__const__))
+#define __unused __attribute__((__unused__))
+#define __used __attribute__((__used__))
+#define __packed __attribute__((__packed__))
+#define __aligned(x) __attribute__((__aligned__(x)))
+#define __section(x) __attribute__((__section__(x)))
+# 278 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define _Alignas(x) alignas(x)
+
+
+
+
+
+
+
+#define _Alignof(x) alignof(x)
+# 296 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define _Atomic(T) struct { T volatile __val; }
+
+
+
+#define _Noreturn [[noreturn]]
+# 310 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define _Static_assert(x,y) static_assert(x, y)
+# 326 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define _Thread_local __thread
+# 351 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __malloc_like __attribute__((__malloc__))
+#define __pure __attribute__((__pure__))
+
+
+
+
+
+
+#define __always_inline __attribute__((__always_inline__))
+
+
+
+
+
+#define __noinline __attribute__ ((__noinline__))
+
+
+
+
+
+#define __nonnull(x) __attribute__((__nonnull__(x)))
+
+
+
+
+
+#define __fastcall __attribute__((__fastcall__))
+
+
+
+
+
+#define __returns_twice __attribute__((__returns_twice__))
+# 401 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __restrict 
+# 436 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __predict_true(exp) __builtin_expect((exp), 1)
+#define __predict_false(exp) __builtin_expect((exp), 0)
+
+
+
+
+
+
+#define __hidden __attribute__((__visibility__("hidden")))
+#define __exported __attribute__((__visibility__("default")))
+
+
+
+
+
+#define __offsetof(type,field) offsetof(type, field)
+#define __rangeof(type,start,end) (__offsetof(type, end) - __offsetof(type, start))
+# 462 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __containerof(x,s,m) ({ const volatile __typeof__(((s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volatile char *)__x - __offsetof(s, m));})
+# 484 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __printflike(fmtarg,firstvararg) __attribute__((__format__ (__printf__, fmtarg, firstvararg)))
+
+#define __scanflike(fmtarg,firstvararg) __attribute__((__format__ (__scanf__, fmtarg, firstvararg)))
+
+#define __format_arg(fmtarg) __attribute__((__format_arg__ (fmtarg)))
+#define __strfmonlike(fmtarg,firstvararg) __attribute__((__format__ (__strfmon__, fmtarg, firstvararg)))
+
+#define __strftimelike(fmtarg,firstvararg) __attribute__((__format__ (__strftime__, fmtarg, firstvararg)))
+# 501 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __printf0like(fmtarg,firstvararg) 
+
+
+
+
+#define __strong_reference(sym,aliassym) extern __typeof (sym) aliassym __attribute__ ((__alias__ (#sym)))
+
+
+
+
+#define __weak_reference(sym,alias) __asm__(".weak " #alias); __asm__(".equ " #alias ", " #sym)
+
+
+#define __warn_references(sym,msg) __asm__(".section .gnu.warning." #sym); __asm__(".asciz \"" msg "\""); __asm__(".previous")
+
+
+
+#define __sym_compat(sym,impl,verid) __asm__(".symver " #impl ", " #sym "@" #verid)
+
+#define __sym_default(sym,impl,verid) __asm__(".symver " #impl ", " #sym "@@" #verid)
+# 555 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __FBSDID(s) struct __hack
+
+
+
+#define __RCSID(s) struct __hack
+
+
+
+#define __RCSID_SOURCE(s) struct __hack
+
+
+
+#define __SCCSID(s) struct __hack
+
+
+
+#define __COPYRIGHT(s) struct __hack
+
+
+
+#define __DECONST(type,var) ((type)(__uintptr_t)(const void *)(var))
+
+
+
+#define __DEVOLATILE(type,var) ((type)(__uintptr_t)(volatile void *)(var))
+
+
+
+#define __DEQUALIFY(type,var) ((type)(__uintptr_t)(const volatile void *)(var))
+# 703 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/cdefs.h" 3
+#define __POSIX_VISIBLE 200809
+#define __XSI_VISIBLE 700
+#define __BSD_VISIBLE 1
+#define __ISO_C_VISIBLE 2011
+# 13 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/string.h" 2 3
+
+
+#define __need_size_t 
+#define __need_NULL 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 158 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_ptrdiff_t
+# 234 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_size_t
+# 343 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_wchar_t
+# 397 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef NULL
+
+#define NULL __null
+# 408 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_NULL
+
+
+
+
+#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
+# 18 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/string.h" 2 3
+
+extern "C" {
+
+void * memchr (const void *, int, size_t);
+int memcmp (const void *, const void *, size_t);
+void * memcpy (void * , const void * , size_t);
+void * memmove (void *, const void *, size_t);
+void * memset (void *, int, size_t);
+char *strcat (char *, const char *);
+char *strchr (const char *, int);
+int strcmp (const char *, const char *);
+int strcoll (const char *, const char *);
+char *strcpy (char *, const char *);
+size_t strcspn (const char *, const char *);
+char *strerror (int);
+size_t strlen (const char *);
+char *strncat (char *, const char *, size_t);
+int strncmp (const char *, const char *, size_t);
+char *strncpy (char *, const char *, size_t);
+char *strpbrk (const char *, const char *);
+char *strrchr (const char *, int);
+size_t strspn (const char *, const char *);
+char *strstr (const char *, const char *);
+
+char *strtok (char *, const char *);
+
+size_t strxfrm (char *, const char *, size_t);
+
+
+char *strtok_r (char *, const char *, char **);
+
+
+int bcmp (const void *, const void *, size_t);
+void bcopy (const void *, void *, size_t);
+void bzero (void *, size_t);
+int ffs (int);
+char *index (const char *, int);
+
+
+void * memccpy (void * , const void * , int, size_t);
+
+
+
+
+
+void * memrchr (const void *, int, size_t);
+
+
+
+
+char *rindex (const char *, int);
+
+char *stpcpy (char *, const char *);
+char *stpncpy (char *, const char *, size_t);
+
+int strcasecmp (const char *, const char *);
+
+
+
+
+
+
+char *strdup (const char *);
+
+
+char *_strdup_r (struct _reent *, const char *);
+
+
+char *strndup (const char *, size_t);
+
+
+
+char *_strndup_r (struct _reent *, const char *, size_t);
+# 106 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/string.h" 3
+int strerror_r (int, char *, size_t)
+             __asm__ ("" "__xpg_strerror_r");
+
+
+
+
+
+
+
+char * _strerror_r (struct _reent *, int, int, int *);
+
+
+size_t strlcat (char *, const char *, size_t);
+size_t strlcpy (char *, const char *, size_t);
+
+
+int strncasecmp (const char *, const char *, size_t);
+
+
+
+size_t strnlen (const char *, size_t);
+
+
+char *strsep (char **, const char *);
+
+
+
+
+
+
+
+char *strlwr (char *);
+char *strupr (char *);
+
+
+
+char *strsignal (int __signo);
+# 163 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/string.h" 3
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/sys/string.h" 1 3
+# 164 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/string.h" 2 3
+
+}
+# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 2
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 1
+       
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Namespace.h" 1
+       
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/functor.h" 1
+# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/functor.h"
+       
+
+
+
+#define FUNCTOR_TYPEDEF(name,rettype,...) typedef Functor<rettype, ## __VA_ARGS__> name
+
+
+#define FUNCTOR_DECLARE(name,rettype,...) Functor<rettype, ## __VA_ARGS__> name
+
+
+#define FUNCTOR_BIND(obj,func,rettype,...) Functor<rettype, ## __VA_ARGS__>::bind<std::remove_reference<decltype(*obj)>::type, func>(obj)
+
+
+#define FUNCTOR_BIND_MEMBER(func,rettype,...) Functor<rettype, ## __VA_ARGS__>::bind<std::remove_reference<decltype(*this)>::type, func>(this)
+
+
+template <class RetType, class... Args>
+class Functor
+{
+public:
+    constexpr Functor(void *obj, RetType (*method)(void *obj, Args...))
+        : _obj(obj)
+        , _method(method)
+    {
+    }
+
+
+    constexpr Functor(decltype(nullptr))
+        : Functor(nullptr, nullptr) { }
+
+    constexpr Functor()
+        : Functor(nullptr, nullptr) { }
+
+
+    RetType operator()(Args... args) const
+    {
+        return _method(_obj, args...);
+    }
+
+
+
+    inline bool operator==(const Functor<RetType, Args...>& rhs)
+    {
+        return _obj == rhs._obj && _method == rhs._method;
+    }
+
+
+    explicit operator bool() const
+    {
+        return _method != nullptr;
+    }
+
+    template<class T, RetType (T::*method)(Args...)>
+    static constexpr Functor bind(T *obj)
+    {
+        return { obj, method_wrapper<T, method> };
+    }
+
+private:
+    void *_obj;
+    RetType (*_method)(void *obj, Args...);
+
+    template<class T, RetType (T::*method)(Args...)>
+    static RetType method_wrapper(void *obj, Args... args)
+    {
+        T *t = static_cast<T*>(obj);
+        return (t->*method)(args...);
+    }
+};
+# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Namespace.h" 2
+
+namespace AP_HAL {
+
+
+    class HAL;
+
+
+    class UARTDriver;
+    class I2CDevice;
+    class I2CDeviceManager;
+    class Device;
+
+    class SPIDevice;
+    class SPIDeviceDriver;
+    class SPIDeviceManager;
+
+    class AnalogSource;
+    class AnalogIn;
+    class Storage;
+    class DigitalSource;
+    class GPIO;
+    class RCInput;
+    class RCOutput;
+    class Scheduler;
+    class Semaphore;
+    class OpticalFlow;
+
+    class Util;
+
+
+    class Print;
+    class Stream;
+    class BetterStream;
+
+
+
+
+
+
+    typedef void(*Proc)(void);
+    typedef Functor<void> MemberProc;
+
+
+
+
+
+    enum SPIDeviceType {
+
+        SPIDevice_Type = -1,
+    };
+
+
+    const HAL& get_HAL();
+}
+# 6 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 2
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Macros.h" 1
+       
+
+
+
+
+
+
+#define WARN_IF_UNUSED __attribute__ ((warn_unused_result))
+# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Macros.h"
+#define NORETURN __attribute__ ((noreturn))
+# 8 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Main.h" 1
+# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Main.h"
+       
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 1
+       
+
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AnalogIn.h" 1
+       
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/inttypes.h" 1 3
+# 14 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/inttypes.h" 3
+#define _INTTYPES_H 
+
+
+
+#define __need_wchar_t 
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 158 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_ptrdiff_t
+# 234 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_size_t
+# 343 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_wchar_t
+# 397 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef NULL
+
+#define NULL __null
+# 408 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 3 4
+#undef __need_NULL
+
+
+
+
+#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
+# 20 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/inttypes.h" 2 3
+
+#define __STRINGIFY(a) #a
+
+
+#define __PRI8(x) __STRINGIFY(x)
+#define __SCN8(x) __STRINGIFY(hh ##x)
+
+
+#define PRId8 __PRI8(d)
+#define PRIi8 __PRI8(i)
+#define PRIo8 __PRI8(o)
+#define PRIu8 __PRI8(u)
+#define PRIx8 __PRI8(x)
+#define PRIX8 __PRI8(X)
+
+#define SCNd8 __SCN8(d)
+#define SCNi8 __SCN8(i)
+#define SCNo8 __SCN8(o)
+#define SCNu8 __SCN8(u)
+#define SCNx8 __SCN8(x)
+
+
+#define PRIdLEAST8 __PRI8(d)
+#define PRIiLEAST8 __PRI8(i)
+#define PRIoLEAST8 __PRI8(o)
+#define PRIuLEAST8 __PRI8(u)
+#define PRIxLEAST8 __PRI8(x)
+#define PRIXLEAST8 __PRI8(X)
+
+#define SCNdLEAST8 __SCN8(d)
+#define SCNiLEAST8 __SCN8(i)
+#define SCNoLEAST8 __SCN8(o)
+#define SCNuLEAST8 __SCN8(u)
+#define SCNxLEAST8 __SCN8(x)
+
+
+#define PRIdFAST8 __PRI8(d)
+#define PRIiFAST8 __PRI8(i)
+#define PRIoFAST8 __PRI8(o)
+#define PRIuFAST8 __PRI8(u)
+#define PRIxFAST8 __PRI8(x)
+#define PRIXFAST8 __PRI8(X)
+
+#define SCNdFAST8 __SCN8(d)
+#define SCNiFAST8 __SCN8(i)
+#define SCNoFAST8 __SCN8(o)
+#define SCNuFAST8 __SCN8(u)
+#define SCNxFAST8 __SCN8(x)
+
+
+#define __PRI16(x) __STRINGIFY(x)
+#define __SCN16(x) __STRINGIFY(h ##x)
+
+
+#define PRId16 __PRI16(d)
+#define PRIi16 __PRI16(i)
+#define PRIo16 __PRI16(o)
+#define PRIu16 __PRI16(u)
+#define PRIx16 __PRI16(x)
+#define PRIX16 __PRI16(X)
+
+#define SCNd16 __SCN16(d)
+#define SCNi16 __SCN16(i)
+#define SCNo16 __SCN16(o)
+#define SCNu16 __SCN16(u)
+#define SCNx16 __SCN16(x)
+
+
+#define PRIdLEAST16 __PRI16(d)
+#define PRIiLEAST16 __PRI16(i)
+#define PRIoLEAST16 __PRI16(o)
+#define PRIuLEAST16 __PRI16(u)
+#define PRIxLEAST16 __PRI16(x)
+#define PRIXLEAST16 __PRI16(X)
+
+#define SCNdLEAST16 __SCN16(d)
+#define SCNiLEAST16 __SCN16(i)
+#define SCNoLEAST16 __SCN16(o)
+#define SCNuLEAST16 __SCN16(u)
+#define SCNxLEAST16 __SCN16(x)
+
+
+#define PRIdFAST16 __PRI16(d)
+#define PRIiFAST16 __PRI16(i)
+#define PRIoFAST16 __PRI16(o)
+#define PRIuFAST16 __PRI16(u)
+#define PRIxFAST16 __PRI16(x)
+#define PRIXFAST16 __PRI16(X)
+
+#define SCNdFAST16 __SCN16(d)
+#define SCNiFAST16 __SCN16(i)
+#define SCNoFAST16 __SCN16(o)
+#define SCNuFAST16 __SCN16(u)
+#define SCNxFAST16 __SCN16(x)
+
+
+
+#define __PRI32(x) __STRINGIFY(l ##x)
+#define __SCN32(x) __STRINGIFY(l ##x)
+
+
+
+
+
+#define PRId32 __PRI32(d)
+#define PRIi32 __PRI32(i)
+#define PRIo32 __PRI32(o)
+#define PRIu32 __PRI32(u)
+#define PRIx32 __PRI32(x)
+#define PRIX32 __PRI32(X)
+
+#define SCNd32 __SCN32(d)
+#define SCNi32 __SCN32(i)
+#define SCNo32 __SCN32(o)
+#define SCNu32 __SCN32(u)
+#define SCNx32 __SCN32(x)
+
+
+#define PRIdLEAST32 __PRI32(d)
+#define PRIiLEAST32 __PRI32(i)
+#define PRIoLEAST32 __PRI32(o)
+#define PRIuLEAST32 __PRI32(u)
+#define PRIxLEAST32 __PRI32(x)
+#define PRIXLEAST32 __PRI32(X)
+
+#define SCNdLEAST32 __SCN32(d)
+#define SCNiLEAST32 __SCN32(i)
+#define SCNoLEAST32 __SCN32(o)
+#define SCNuLEAST32 __SCN32(u)
+#define SCNxLEAST32 __SCN32(x)
+
+
+#define PRIdFAST32 __PRI32(d)
+#define PRIiFAST32 __PRI32(i)
+#define PRIoFAST32 __PRI32(o)
+#define PRIuFAST32 __PRI32(u)
+#define PRIxFAST32 __PRI32(x)
+#define PRIXFAST32 __PRI32(X)
+
+#define SCNdFAST32 __SCN32(d)
+#define SCNiFAST32 __SCN32(i)
+#define SCNoFAST32 __SCN32(o)
+#define SCNuFAST32 __SCN32(u)
+#define SCNxFAST32 __SCN32(x)
+
+
+
+
+
+
+
+#define __PRI64(x) __STRINGIFY(ll ##x)
+#define __SCN64(x) __STRINGIFY(ll ##x)
+
+
+
+
+
+#define PRId64 __PRI64(d)
+#define PRIi64 __PRI64(i)
+#define PRIo64 __PRI64(o)
+#define PRIu64 __PRI64(u)
+#define PRIx64 __PRI64(x)
+#define PRIX64 __PRI64(X)
+
+#define SCNd64 __SCN64(d)
+#define SCNi64 __SCN64(i)
+#define SCNo64 __SCN64(o)
+#define SCNu64 __SCN64(u)
+#define SCNx64 __SCN64(x)
+
+
+#define PRIdLEAST64 __PRI64(d)
+#define PRIiLEAST64 __PRI64(i)
+#define PRIoLEAST64 __PRI64(o)
+#define PRIuLEAST64 __PRI64(u)
+#define PRIxLEAST64 __PRI64(x)
+#define PRIXLEAST64 __PRI64(X)
+
+#define SCNdLEAST64 __SCN64(d)
+#define SCNiLEAST64 __SCN64(i)
+#define SCNoLEAST64 __SCN64(o)
+#define SCNuLEAST64 __SCN64(u)
+#define SCNxLEAST64 __SCN64(x)
+
+
+#define PRIdFAST64 __PRI64(d)
+#define PRIiFAST64 __PRI64(i)
+#define PRIoFAST64 __PRI64(o)
+#define PRIuFAST64 __PRI64(u)
+#define PRIxFAST64 __PRI64(x)
+#define PRIXFAST64 __PRI64(X)
+
+#define SCNdFAST64 __SCN64(d)
+#define SCNiFAST64 __SCN64(i)
+#define SCNoFAST64 __SCN64(o)
+#define SCNuFAST64 __SCN64(u)
+#define SCNxFAST64 __SCN64(x)
+
+
+
+
+
+
+
+#define __PRIMAX(x) __STRINGIFY(ll ##x)
+#define __SCNMAX(x) __STRINGIFY(ll ##x)
+
+
+
+
+
+#define PRIdMAX __PRIMAX(d)
+#define PRIiMAX __PRIMAX(i)
+#define PRIoMAX __PRIMAX(o)
+#define PRIuMAX __PRIMAX(u)
+#define PRIxMAX __PRIMAX(x)
+#define PRIXMAX __PRIMAX(X)
+
+#define SCNdMAX __SCNMAX(d)
+#define SCNiMAX __SCNMAX(i)
+#define SCNoMAX __SCNMAX(o)
+#define SCNuMAX __SCNMAX(u)
+#define SCNxMAX __SCNMAX(x)
+# 253 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/inttypes.h" 3
+#define __PRIPTR(x) __STRINGIFY(x)
+#define __SCNPTR(x) __STRINGIFY(x)
+
+
+#define PRIdPTR __PRIPTR(d)
+#define PRIiPTR __PRIPTR(i)
+#define PRIoPTR __PRIPTR(o)
+#define PRIuPTR __PRIPTR(u)
+#define PRIxPTR __PRIPTR(x)
+#define PRIXPTR __PRIPTR(X)
+
+#define SCNdPTR __SCNPTR(d)
+#define SCNiPTR __SCNPTR(i)
+#define SCNoPTR __SCNPTR(o)
+#define SCNuPTR __SCNPTR(u)
+#define SCNxPTR __SCNPTR(x)
+
+
+typedef struct {
+  intmax_t quot;
+  intmax_t rem;
+} imaxdiv_t;
+
+
+extern "C" {
+
+
+extern intmax_t imaxabs(intmax_t j);
+extern imaxdiv_t imaxdiv(intmax_t numer, intmax_t denomer);
+extern intmax_t strtoimax(const char *, char **, int);
+extern uintmax_t strtoumax(const char *, char **, int);
+extern intmax_t wcstoimax(const wchar_t *, wchar_t **, int);
+extern uintmax_t wcstoumax(const wchar_t *, wchar_t **, int);
+
+
+}
+# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AnalogIn.h" 2
+
+
+
+class AP_HAL::AnalogSource {
+public:
+    virtual float read_average() = 0;
+    virtual float read_latest() = 0;
+    virtual void set_pin(uint8_t p) = 0;
+
+
+
+
+
+
+    virtual void set_stop_pin(uint8_t p) = 0;
+
+
+
+
+
+
+    virtual void set_settle_time(uint16_t settle_time_ms) = 0;
+
+
+
+    virtual float voltage_average() = 0;
+
+
+
+    virtual float voltage_latest() = 0;
+
+
+
+    virtual float voltage_average_ratiometric() = 0;
+};
+
+class AP_HAL::AnalogIn {
+public:
+    virtual void init() = 0;
+    virtual AP_HAL::AnalogSource* channel(int16_t n) = 0;
+
+
+    virtual float board_voltage(void) = 0;
+
+
+    virtual float servorail_voltage(void) { return 0; }
+
+
+    virtual uint16_t power_status_flags(void) { return 0; }
+};
+
+#define ANALOG_INPUT_BOARD_VCC 254
+#define ANALOG_INPUT_NONE 254
+# 7 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/GPIO.h" 1
+       
+
+
+
+
+
+#define HAL_GPIO_INPUT 0
+#define HAL_GPIO_OUTPUT 1
+#define HAL_GPIO_ALT 2
+#define HAL_GPIO_INTERRUPT_LOW 0
+#define HAL_GPIO_INTERRUPT_HIGH 1
+#define HAL_GPIO_INTERRUPT_FALLING 2
+#define HAL_GPIO_INTERRUPT_RISING 3
+
+class AP_HAL::DigitalSource {
+public:
+    virtual void mode(uint8_t output) = 0;
+    virtual uint8_t read() = 0;
+    virtual void write(uint8_t value) = 0;
+    virtual void toggle() = 0;
+};
+
+class AP_HAL::GPIO {
+public:
+    GPIO() {}
+    virtual void init() = 0;
+    virtual void pinMode(uint8_t pin, uint8_t output) = 0;
+
+
+    virtual void pinMode(uint8_t pin, uint8_t output, uint8_t alt) {};
+
+    virtual uint8_t read(uint8_t pin) = 0;
+    virtual void write(uint8_t pin, uint8_t value) = 0;
+    virtual void toggle(uint8_t pin) = 0;
+    virtual int8_t analogPinToDigitalPin(uint8_t pin) = 0;
+
+
+    virtual AP_HAL::DigitalSource* channel(uint16_t n) = 0;
+
+
+    virtual bool attach_interrupt(uint8_t interrupt_num, AP_HAL::Proc p,
+            uint8_t mode) = 0;
+
+
+    virtual bool usb_connected(void) = 0;
+};
+# 8 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/RCInput.h" 1
+       
+
+
+
+#define RC_INPUT_MIN_PULSEWIDTH 900
+#define RC_INPUT_MAX_PULSEWIDTH 2100
+
+class AP_HAL::RCInput {
+public:
+
+
+
+
+
+
+    virtual void init() = 0;
+    virtual void teardown() {};
+
+
+
+
+
+
+
+    virtual bool new_input() = 0;
+
+
+
+
+    virtual uint8_t num_channels() = 0;
+
+
+    virtual uint16_t read(uint8_t ch) = 0;
+
+
+    virtual uint8_t read(uint16_t* periods, uint8_t len) = 0;
+# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/RCInput.h"
+    virtual bool set_overrides(int16_t *overrides, uint8_t len) = 0;
+
+    virtual bool set_override(uint8_t channel, int16_t override) = 0;
+
+    virtual void clear_overrides() = 0;
+
+
+    virtual bool rc_bind(int dsmMode) { return false; }
+};
+# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/RCOutput.h" 1
+       
+
+
+
+#define RC_OUTPUT_MIN_PULSEWIDTH 400
+#define RC_OUTPUT_MAX_PULSEWIDTH 2100
+
+
+
+#define CH_1 0
+#define CH_2 1
+#define CH_3 2
+#define CH_4 3
+#define CH_5 4
+#define CH_6 5
+#define CH_7 6
+#define CH_8 7
+#define CH_9 8
+#define CH_10 9
+#define CH_11 10
+#define CH_12 11
+#define CH_13 12
+#define CH_14 13
+#define CH_15 14
+#define CH_16 15
+#define CH_17 16
+#define CH_18 17
+#define CH_NONE 255
+
+
+
+class AP_HAL::RCOutput {
+public:
+    virtual void init() = 0;
+
+
+    virtual void set_freq(uint32_t chmask, uint16_t freq_hz) = 0;
+    virtual uint16_t get_freq(uint8_t ch) = 0;
+
+
+
+    virtual void enable_ch(uint8_t ch) = 0;
+    virtual void disable_ch(uint8_t ch) = 0;
+
+
+
+
+
+    virtual void write(uint8_t ch, uint16_t period_us) = 0;
+
+
+
+
+
+
+    virtual void cork() = 0;
+
+
+
+
+
+    virtual void push() = 0;
+
+
+
+
+
+    virtual uint16_t read(uint8_t ch) = 0;
+    virtual void read(uint16_t* period_us, uint8_t len) = 0;
+
+
+    virtual uint16_t read_last_sent(uint8_t ch) { return read(ch); }
+    virtual void read_last_sent(uint16_t* period_us, uint8_t len) { read(period_us, len); };
+
+
+
+
+
+    virtual void set_safety_pwm(uint32_t chmask, uint16_t period_us) {}
+
+
+
+
+    virtual void set_failsafe_pwm(uint32_t chmask, uint16_t period_us) {}
+
+
+
+
+
+
+    virtual bool force_safety_on(void) { return false; }
+
+
+
+
+    virtual void force_safety_off(void) {}
+
+
+
+
+    virtual void force_safety_no_wait(void) {}
+
+
+
+
+
+
+
+    virtual void set_esc_scaling(uint16_t min_pwm, uint16_t max_pwm) {}
+
+
+
+
+    virtual bool enable_sbus_out(uint16_t rate_gz) { return false; }
+
+
+
+
+    enum output_mode {
+        MODE_PWM_NORMAL,
+        MODE_PWM_ONESHOT,
+        MODE_PWM_BRUSHED16KHZ
+    };
+    virtual void set_output_mode(enum output_mode mode) {}
+};
+# 10 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/SPIDevice.h" 1
+# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/SPIDevice.h"
+       
+
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h" 1
+# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h"
+       
+# 27 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h"
+class AP_HAL::Device {
+public:
+    enum BusType {
+        BUS_TYPE_UNKNOWN = 0,
+        BUS_TYPE_I2C = 1,
+        BUS_TYPE_SPI = 2,
+        BUS_TYPE_UAVCAN = 3
+    };
+
+    enum Speed {
+        SPEED_HIGH,
+        SPEED_LOW,
+    };
+
+    typedef Functor<bool> PeriodicCb;
+    typedef void* PeriodicHandle;
+
+    Device(enum BusType type)
+    {
+        _bus_id.devid_s.bus_type = type;
+    }
+
+
+    enum BusType bus_type(void) const {
+        return _bus_id.devid_s.bus_type;
+    }
+
+
+    uint8_t bus_num(void) const {
+        return _bus_id.devid_s.bus;
+    }
+
+
+    uint32_t get_bus_id(void) const {
+        return _bus_id.devid;
+    }
+
+
+    uint8_t get_bus_address(void) const {
+        return _bus_id.devid_s.address;
+    }
+
+
+    void set_device_type(uint8_t devtype) {
+        _bus_id.devid_s.devtype = devtype;
+    }
+
+
+    virtual ~Device() {
+        if (_checked.regs != nullptr) {
+            delete[] _checked.regs;
+        }
+    }
+# 88 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h"
+    virtual bool set_speed(Speed speed) = 0;
+
+
+
+
+
+
+
+    virtual bool transfer(const uint8_t *send, uint32_t send_len,
+                          uint8_t *recv, uint32_t recv_len) = 0;
+# 107 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h"
+    bool read_registers(uint8_t first_reg, uint8_t *recv, uint32_t recv_len)
+    {
+        first_reg |= _read_flag;
+        return transfer(&first_reg, 1, recv, recv_len);
+    }
+
+
+
+
+
+
+    bool read_uint16_le(uint8_t first_reg, uint16_t &value);
+
+
+
+
+
+
+    bool read_uint16_be(uint8_t first_reg, uint16_t &value);
+
+
+
+
+
+
+
+    bool write_register(uint8_t reg, uint8_t val, bool checked=false)
+    {
+        uint8_t buf[2] = { reg, val };
+        if (checked) {
+            set_checked_register(reg, val);
+        }
+        bool ret = transfer(buf, sizeof(buf), nullptr, 0);
+
+        if(ret) {
+            ret = read_registers(reg, buf, 1);
+        }
+
+        if(ret) ret = buf[0] == val;
+
+        return ret;
+    }
+
+
+
+
+    void set_checked_register(uint8_t reg, uint8_t val);
+
+
+
+
+
+    bool setup_checked_registers(uint8_t num_regs, uint8_t frequency=10);
+
+
+
+
+
+    bool check_next_register(void);
+
+
+
+
+
+
+    bool read(uint8_t *recv, uint32_t recv_len)
+    {
+        return transfer(nullptr, 0, recv, recv_len);
+    }
+
+
+
+
+
+    virtual AP_HAL::Semaphore *get_semaphore() = 0;
+# 197 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h"
+    virtual PeriodicHandle register_periodic_callback(uint32_t period_usec, PeriodicCb) = 0;
+# 206 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Device.h"
+    virtual bool adjust_periodic_callback(PeriodicHandle h, uint32_t period_usec) = 0;
+
+
+
+
+
+
+
+    virtual bool unregister_callback(PeriodicHandle h) { return false; }
+
+
+
+
+
+
+    virtual bool set_chip_select(bool set) { return false; }
+
+
+
+
+
+
+    void set_read_flag(uint8_t flag)
+    {
+        _read_flag = flag;
+    }
+
+
+
+
+
+
+
+    static uint32_t make_bus_id(enum BusType bus_type, uint8_t bus, uint8_t address, uint8_t devtype) {
+        union DeviceId d;
+        d.devid_s.bus_type = bus_type;
+        d.devid_s.bus = bus;
+        d.devid_s.address = address;
+        d.devid_s.devtype = devtype;
+        return d.devid;
+    }
+
+
+
+
+
+    static uint32_t change_bus_id(uint32_t old_id, uint8_t devtype) {
+        union DeviceId d;
+        d.devid = old_id;
+        d.devid_s.devtype = devtype;
+        return d.devid;
+    }
+
+
+
+
+    uint32_t get_bus_id_devtype(uint8_t devtype) {
+        return change_bus_id(get_bus_id(), devtype);
+    }
+
+
+    virtual void set_retries(uint8_t retries) {};
+
+protected:
+    uint8_t _read_flag = 0;
+
+
+
+
+
+
+
+    struct DeviceStructure {
+        enum BusType bus_type : 3;
+        uint8_t bus: 5;
+        uint8_t address;
+        uint8_t devtype;
+    };
+
+    union DeviceId {
+        struct DeviceStructure devid_s;
+        uint32_t devid;
+    };
+
+    union DeviceId _bus_id;
+
+
+    void set_device_address(uint8_t address) {
+        _bus_id.devid_s.address = address;
+    }
+
+
+    void set_device_bus(uint8_t bus) {
+        _bus_id.devid_s.bus = bus;
+    }
+
+private:
+
+    struct checkreg {
+        uint8_t regnum;
+        uint8_t value;
+    };
+    struct {
+        uint8_t n_allocated;
+        uint8_t n_set;
+        uint8_t next;
+        uint8_t frequency;
+        uint8_t counter;
+        struct checkreg *regs;
+    } _checked;
+};
+# 23 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/SPIDevice.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/OwnPtr.h" 1
+# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/OwnPtr.h"
+       
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/cstddef" 1
+       
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cstddef" 1 3
+# 40 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cstddef" 3
+#define _GLIBCXX_CSTDDEF 1
+
+       
+# 43 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cstddef" 3
+
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h" 1 3 4
+# 46 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/cstddef" 2 3
+
+
+namespace std
+{
+
+  using ::max_align_t;
+}
+# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Common/missing/cstddef" 2
+
+
+
+namespace std {
+    typedef decltype(nullptr) nullptr_t;
+}
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/OwnPtr.h" 2
+
+namespace AP_HAL {
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/OwnPtr.h"
+template<typename T>
+class OwnPtr {
+public:
+    OwnPtr() : _ptr(nullptr) { }
+    OwnPtr(std::nullptr_t) : _ptr(nullptr) { }
+
+
+    OwnPtr(const OwnPtr<T> &other) = delete;
+
+
+    template<typename U>
+    OwnPtr(OwnPtr<U>&& other) : _ptr(other.leak()) { }
+
+    OwnPtr(T *ptr) : _ptr(ptr) { }
+
+    OwnPtr<T>& operator=(std::nullptr_t) { clear(); return *this; }
+
+    template<typename U>
+    OwnPtr<T>& operator=(OwnPtr<U>&& other)
+    {
+        T *old = _ptr;
+        _ptr = other.leak();
+        delete old;
+        return *this;
+    }
+
+    template<typename U>
+    OwnPtr<T>& operator=(U *other)
+    {
+        T *old = _ptr;
+        _ptr = other;
+        delete old;
+        return *this;
+    }
+
+    ~OwnPtr() { delete _ptr; }
+
+    void clear()
+    {
+        delete leak();
+    }
+
+    T *leak()
+    {
+        T *old = _ptr;
+        _ptr = nullptr;
+        return old;
+    }
+
+    T *get() const
+    {
+        return _ptr;
+    }
+
+    T& operator*() const { return *_ptr; }
+    T *operator->() const { return _ptr; }
+    bool operator !() const { return !_ptr; }
+    explicit operator bool() const { return _ptr != nullptr; }
+
+private:
+    T *_ptr;
+};
+
+template<typename T>
+inline bool operator==(T* a, const OwnPtr<T>& b)
+{
+    return a == b.get();
+}
+
+template<typename T>
+inline bool operator==(const OwnPtr<T>& a, T* b)
+{
+    return a.get() == b;
+}
+
+template<typename T>
+inline bool operator!=(T* a, const OwnPtr<T>& b)
+{
+    return a != b.get();
+}
+
+template<typename T>
+inline bool operator!=(const OwnPtr<T>& a, T* b)
+{
+    return a.get() != b;
+}
+
+}
+# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/SPIDevice.h" 2
+
+namespace AP_HAL {
+
+class SPIDevice : public Device {
+public:
+    SPIDevice() : Device(BUS_TYPE_SPI) { }
+
+    virtual ~SPIDevice() { }
+
+
+
+    virtual bool set_speed(Device::Speed speed) override = 0;
+
+
+    virtual bool transfer(const uint8_t *send, uint32_t send_len,
+                          uint8_t *recv, uint32_t recv_len) override = 0;
+
+
+
+
+
+    virtual bool transfer_fullduplex(const uint8_t *send, uint8_t *recv,
+                                     uint32_t len) = 0;
+
+
+    virtual Semaphore *get_semaphore() override = 0;
+
+
+    virtual Device::PeriodicHandle register_periodic_callback(
+        uint32_t period_usec, Device::PeriodicCb) override = 0;
+
+
+    virtual bool adjust_periodic_callback(
+        PeriodicHandle h, uint32_t period_usec) override { return false; }
+};
+
+class SPIDeviceManager {
+public:
+    virtual OwnPtr<SPIDevice> get_device(const char *name)
+    {
+        return nullptr;
+    }
+};
+
+}
+# 11 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Storage.h" 1
+       
+
+
+
+
+class AP_HAL::Storage {
+public:
+    virtual void init() = 0;
+    virtual void read_block(void *dst, uint16_t src, size_t n) = 0;
+    virtual void write_block(uint16_t dst, const void* src, size_t n) = 0;
+};
+# 12 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/UARTDriver.h" 1
+       
+
+
+
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/BetterStream.h" 1
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/BetterStream.h"
+       
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h" 1 3 4
+# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h" 3 4
+#define _STDARG_H 
+#define _ANSI_STDARG_H_ 
+
+#undef __need___va_list
+
+
+
+
+#define __GNUC_VA_LIST 
+typedef __builtin_va_list __gnuc_va_list;
+
+
+
+
+
+
+#define va_start(v,l) __builtin_va_start(v,l)
+#define va_end(v) __builtin_va_end(v)
+#define va_arg(v,l) __builtin_va_arg(v,l)
+
+#define va_copy(d,s) __builtin_va_copy(d,s)
+
+#define __va_copy(d,s) __builtin_va_copy(d,s)
+# 98 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h" 3 4
+typedef __gnuc_va_list va_list;
+
+
+
+
+
+#define _VA_LIST_ 
+
+
+#define _VA_LIST 
+
+
+#define _VA_LIST_DEFINED 
+
+
+#define _VA_LIST_T_H 
+
+
+#define __va_list__ 
+# 23 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/BetterStream.h" 2
+
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/Stream.h" 1
+       
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/Print.h" 1
+# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/Print.h"
+       
+# 33 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/Print.h"
+enum {
+    BASE_DEFAULT = 0,
+    BASE_BIN = 2,
+    BASE_OCT = 8,
+    BASE_DEC = 10,
+    BASE_HEX = 16
+};
+
+
+class AP_HAL::Print {
+  private:
+    size_t printNumber(unsigned long, uint8_t);
+    size_t printFloat(float, uint8_t);
+  public:
+    Print() {}
+
+    virtual size_t write(uint8_t) = 0;
+    virtual size_t write(const uint8_t *buffer, size_t size) = 0;
+
+    size_t write(const char *str) { return write((const uint8_t *)str, strlen(str)); }
+  public:
+    size_t print(const char[]);
+    size_t print(char);
+    size_t print(unsigned char, int = BASE_DEC);
+    size_t print(int, int = BASE_DEC);
+    size_t print(unsigned int, int = BASE_DEC);
+    size_t print(long, int = BASE_DEC);
+    size_t print(unsigned long, int = BASE_DEC);
+    size_t print(float , int = 2);
+    size_t print(double , int = 2);
+
+    size_t println(const char[]);
+    size_t println(char);
+    size_t println(unsigned char, int = BASE_DEC);
+    size_t println(int, int = BASE_DEC);
+    size_t println(unsigned int, int = BASE_DEC);
+    size_t println(long, int = BASE_DEC);
+    size_t println(unsigned long, int = BASE_DEC);
+    size_t println(float , int = 2);
+    size_t println(double , int = 2);
+    size_t println(void);
+
+};
+# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/Stream.h" 2
+
+
+
+
+class AP_HAL::Stream : public AP_HAL::Print {
+public:
+    virtual uint32_t available() = 0;
+
+
+    virtual uint32_t txspace() = 0;
+
+
+
+    virtual int16_t read() = 0;
+
+};
+# 28 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/utility/BetterStream.h" 2
+
+class AP_HAL::BetterStream : public AP_HAL::Stream {
+public:
+    BetterStream(void) {}
+
+    virtual void printf(const char *, ...) __attribute__((format(printf, 2, 3))) = 0;
+    virtual void vprintf(const char *, va_list) = 0;
+};
+# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/UARTDriver.h" 2
+
+
+class AP_HAL::UARTDriver : public AP_HAL::BetterStream {
+public:
+    UARTDriver() {}
+    virtual void begin(uint32_t baud) = 0;
+# 35 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/UARTDriver.h"
+    virtual void begin(uint32_t baud, uint16_t rxSpace, uint16_t txSpace) = 0;
+    virtual void end() = 0;
+    virtual void flush() = 0;
+    virtual bool is_initialized() = 0;
+    virtual void set_blocking_writes(bool blocking) = 0;
+    virtual bool tx_pending() = 0;
+
+    enum flow_control {
+        FLOW_CONTROL_DISABLE=0, FLOW_CONTROL_ENABLE=1, FLOW_CONTROL_AUTO=2
+    };
+    virtual void set_flow_control(enum flow_control flow_control_setting) {};
+    virtual enum flow_control get_flow_control(void) { return FLOW_CONTROL_DISABLE; }
+
+
+
+
+
+    void printf(const char *s, ...) __attribute__((format(printf, 2, 3)));
+    void vprintf(const char *s, va_list ap);
+};
+# 13 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/system.h" 1
+       
+
+
+
+
+
+
+
+namespace AP_HAL {
+
+void init();
+
+void panic(const char *errormsg, ...) __attribute__((format(printf, 1, 2))) __attribute__ ((noreturn));
+
+uint32_t micros();
+uint32_t millis();
+uint64_t micros64();
+uint64_t millis64();
+
+}
+# 14 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/OpticalFlow.h" 1
+# 15 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/OpticalFlow.h"
+       
+
+class AP_HAL::OpticalFlow {
+public:
+    class Data_Frame {
+    public:
+        float pixel_flow_x_integral;
+        float pixel_flow_y_integral;
+        float gyro_x_integral;
+        float gyro_y_integral;
+        uint32_t delta_time;
+        uint8_t quality;
+    };
+
+    typedef Functor<void, float&, float&, float&> Gyro_Cb;
+
+    virtual void init(Gyro_Cb) = 0;
+    virtual bool read(Data_Frame& frame) = 0;
+};
+# 15 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/HAL.h" 2
+
+class AP_HAL::HAL {
+public:
+    HAL(AP_HAL::UARTDriver* _uartA,
+        AP_HAL::UARTDriver* _uartB,
+        AP_HAL::UARTDriver* _uartC,
+        AP_HAL::UARTDriver* _uartD,
+        AP_HAL::UARTDriver* _uartE,
+        AP_HAL::UARTDriver* _uartF,
+        AP_HAL::I2CDeviceManager* _i2c_mgr,
+        AP_HAL::SPIDeviceManager* _spi,
+        AP_HAL::AnalogIn* _analogin,
+        AP_HAL::Storage* _storage,
+        AP_HAL::UARTDriver* _console,
+        AP_HAL::GPIO* _gpio,
+        AP_HAL::RCInput* _rcin,
+        AP_HAL::RCOutput* _rcout,
+        AP_HAL::Scheduler* _scheduler,
+        AP_HAL::Util* _util,
+        AP_HAL::OpticalFlow *_opticalflow)
+        :
+        uartA(_uartA),
+        uartB(_uartB),
+        uartC(_uartC),
+        uartD(_uartD),
+        uartE(_uartE),
+        uartF(_uartF),
+        i2c_mgr(_i2c_mgr),
+        spi(_spi),
+        analogin(_analogin),
+        storage(_storage),
+        console(_console),
+        gpio(_gpio),
+        rcin(_rcin),
+        rcout(_rcout),
+        scheduler(_scheduler),
+        util(_util),
+        opticalflow(_opticalflow)
+    {
+        AP_HAL::init();
+    }
+
+    struct Callbacks {
+        virtual void setup() = 0;
+        virtual void loop() = 0;
+    };
+
+    struct FunCallbacks : public Callbacks {
+        FunCallbacks(void (*setup_fun)(void), void (*loop_fun)(void));
+
+        void setup() override { _setup(); }
+        void loop() override { _loop(); }
+
+
+
+private:
+        void (*_setup)(void);
+        void (*_loop)(void);
+    };
+
+    virtual void run(int argc, char * const argv[], Callbacks* callbacks) const = 0;
+
+    AP_HAL::UARTDriver* uartA;
+    AP_HAL::UARTDriver* uartB;
+    AP_HAL::UARTDriver* uartC;
+    AP_HAL::UARTDriver* uartD;
+    AP_HAL::UARTDriver* uartE;
+    AP_HAL::UARTDriver* uartF;
+    AP_HAL::I2CDeviceManager* i2c_mgr;
+    AP_HAL::SPIDeviceManager* spi;
+    AP_HAL::AnalogIn* analogin;
+    AP_HAL::Storage* storage;
+    AP_HAL::UARTDriver* console;
+    AP_HAL::GPIO* gpio;
+    AP_HAL::RCInput* rcin;
+    AP_HAL::RCOutput* rcout;
+    AP_HAL::Scheduler* scheduler;
+    AP_HAL::Util *util;
+    AP_HAL::OpticalFlow *opticalflow;
+};
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Main.h" 2
+
+
+
+
+
+
+#define AP_MAIN main
+
+
+#define AP_HAL_MAIN() AP_HAL::HAL::FunCallbacks callbacks(setup, loop); extern "C" { int AP_MAIN(int argc, char* const argv[]); int AP_MAIN(int argc, char* const argv[]) { hal.run(argc, argv, &callbacks); return 0; } }
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL_Main.h"
+#define AP_HAL_MAIN_CALLBACKS(CALLBACKS) extern "C" { int AP_MAIN(int argc, char* const argv[]); int AP_MAIN(int argc, char* const argv[]) { hal.run(argc, argv, CALLBACKS); return 0; } }
+# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 2
+# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Scheduler.h" 1
+       
+# 11 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Scheduler.h"
+class AP_HAL::Scheduler {
+public:
+    Scheduler() {}
+    virtual void init() = 0;
+    virtual void delay(uint16_t ms) = 0;
+
+
+
+
+
+    virtual void delay_microseconds(uint16_t us) = 0;
+# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Scheduler.h"
+    virtual void delay_microseconds_boost(uint16_t us) { delay_microseconds(us); }
+
+    virtual void register_delay_callback(AP_HAL::Proc,
+                                             uint16_t min_time_ms) = 0;
+
+
+    virtual void register_timer_process(AP_HAL::MemberProc) = 0;
+    virtual bool register_timer_process(AP_HAL::MemberProc proc, uint8_t freq_div)
+    {
+        register_timer_process(proc);
+        return false;
+    }
+
+
+    virtual void register_io_process(AP_HAL::MemberProc) = 0;
+
+
+    virtual void suspend_timer_procs() = 0;
+    virtual void resume_timer_procs() = 0;
+
+    virtual bool in_timerprocess() = 0;
+
+    virtual void register_timer_failsafe(AP_HAL::Proc,
+                                             uint32_t period_us) = 0;
+
+    virtual void system_initialized() = 0;
+
+    virtual void reboot(bool hold_in_bootloader) = 0;
+
+
+
+
+    virtual void stop_clock(uint64_t time_usec) {}
+};
+# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Semaphores.h" 1
+       
+
+
+
+#define HAL_SEMAPHORE_BLOCK_FOREVER 0
+
+class AP_HAL::Semaphore {
+public:
+    virtual bool take(uint32_t timeout_ms) __attribute__ ((warn_unused_result)) = 0 ;
+    virtual bool take_nonblocking() __attribute__ ((warn_unused_result)) = 0;
+    virtual bool give() = 0;
+    virtual ~Semaphore(void) {}
+};
+# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Util.h" 1
+       
+
+
+
+
+class AP_HAL::Util {
+public:
+    int snprintf(char* str, size_t size,
+                 const char *format, ...);
+
+    int vsnprintf(char* str, size_t size,
+                  const char *format, va_list ap);
+
+    void set_soft_armed(const bool b) { soft_armed = b; }
+    bool get_soft_armed() const { return soft_armed; }
+
+    void set_capabilities(uint64_t cap) { capabilities |= cap; }
+    void clear_capabilities(uint64_t cap) { capabilities &= ~(cap); }
+    uint64_t get_capabilities() const { return capabilities; }
+
+    virtual const char* get_custom_log_directory() { return nullptr; }
+    virtual const char* get_custom_terrain_directory() const { return nullptr; }
+
+
+    virtual const char* get_custom_defaults_file() const {
+        return nullptr;
+    }
+
+
+
+
+    virtual bool run_debug_shell(AP_HAL::BetterStream *stream) = 0;
+
+    enum safety_state {
+        SAFETY_NONE, SAFETY_DISARMED, SAFETY_ARMED
+    };
+
+
+
+
+    virtual enum safety_state safety_switch_state(void) { return SAFETY_NONE; }
+
+
+
+
+    virtual void set_system_clock(uint64_t time_utc_usec) {}
+
+
+
+
+    virtual uint64_t get_system_clock_ms() const;
+
+
+
+
+    void get_system_clock_utc(int32_t &hour, int32_t &min, int32_t &sec, int32_t &ms) const;
+
+    uint32_t get_time_utc(int32_t hour, int32_t min, int32_t sec, int32_t ms) const;
+# 67 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/Util.h"
+    virtual bool get_system_id(char buf[40]) { return false; }
+
+
+
+
+    virtual uint32_t available_memory(void) { return 4096; }
+
+
+
+
+    virtual void commandline_arguments(uint8_t &argc, char * const *&argv) { argc = 0; }
+
+
+
+
+    virtual bool toneAlarm_init() { return false;}
+    virtual void toneAlarm_set_tune(uint8_t tune) {}
+    virtual void _toneAlarm_timer_tick() {}
+
+
+
+
+    virtual AP_HAL::Stream *get_shell_stream() { return nullptr; }
+
+
+    virtual void set_imu_temp(float current) {}
+
+
+    virtual void set_imu_target_temp(int8_t *target) {}
+
+
+
+
+    enum perf_counter_type {
+        PC_COUNT,
+        PC_ELAPSED,
+        PC_INTERVAL
+    };
+    typedef void *perf_counter_t;
+    virtual perf_counter_t perf_alloc(perf_counter_type t, const char *name) { return nullptr; }
+    virtual void perf_begin(perf_counter_t h) {}
+    virtual void perf_end(perf_counter_t h) {}
+    virtual void perf_count(perf_counter_t h) {}
+
+
+    virtual Semaphore *new_semaphore(void) { return nullptr; }
+
+
+    virtual void *dma_allocate(size_t size) { return malloc(size); }
+    virtual void dma_free(void *ptr, size_t size) { return free(ptr); }
+
+protected:
+
+
+    bool soft_armed = false;
+    uint64_t capabilities = 0;
+};
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_HAL/AP_HAL.h" 2
+# 28 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/StorageManager/StorageManager.h" 1
+# 21 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/StorageManager/StorageManager.h"
+       
+# 34 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/StorageManager/StorageManager.h"
+#define STORAGE_NUM_AREAS 4
+
+
+
+
+
+
+
+class StorageManager {
+    friend class StorageAccess;
+public:
+    enum StorageType {
+        StorageParam = 0,
+        StorageFence = 1,
+        StorageRally = 2,
+        StorageMission = 3,
+        StorageKeys = 4
+    };
+
+
+    static void erase(void);
+
+
+    static void set_layout_copter(void) { layout = layout_copter; }
+
+private:
+    struct StorageArea {
+        StorageType type;
+        uint16_t offset;
+        uint16_t length;
+    };
+
+
+    static const StorageArea layout_copter[4];
+    static const StorageArea layout_default[4];
+    static const StorageArea *layout;
+};
+
+
+
+
+class StorageAccess {
+public:
+
+    StorageAccess(StorageManager::StorageType _type);
+
+
+    uint16_t size(void) const { return total_size; }
+
+
+    bool read_block(void *dst, uint16_t src, size_t n) const;
+    bool write_block(uint16_t dst, const void* src, size_t n) const;
+
+
+    uint8_t read_byte(uint16_t loc) const;
+    uint16_t read_uint16(uint16_t loc) const;
+    uint32_t read_uint32(uint16_t loc) const;
+
+    void write_byte(uint16_t loc, uint8_t value) const;
+    void write_uint16(uint16_t loc, uint16_t value) const;
+    void write_uint32(uint16_t loc, uint32_t value) const;
+
+private:
+    const StorageManager::StorageType type;
+    uint16_t total_size;
+};
+# 29 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 2
+
+# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/float.h" 1 3 4
+# 29 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/float.h" 3 4
+#define _FLOAT_H___ 
+
+
+#undef FLT_RADIX
+#define FLT_RADIX __FLT_RADIX__
+
+
+#undef FLT_MANT_DIG
+#undef DBL_MANT_DIG
+#undef LDBL_MANT_DIG
+#define FLT_MANT_DIG __FLT_MANT_DIG__
+#define DBL_MANT_DIG __DBL_MANT_DIG__
+#define LDBL_MANT_DIG __LDBL_MANT_DIG__
+# 50 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/float.h" 3 4
+#undef FLT_DIG
+#undef DBL_DIG
+#undef LDBL_DIG
+#define FLT_DIG __FLT_DIG__
+#define DBL_DIG __DBL_DIG__
+#define LDBL_DIG __LDBL_DIG__
+
+
+#undef FLT_MIN_EXP
+#undef DBL_MIN_EXP
+#undef LDBL_MIN_EXP
+#define FLT_MIN_EXP __FLT_MIN_EXP__
+#define DBL_MIN_EXP __DBL_MIN_EXP__
+#define LDBL_MIN_EXP __LDBL_MIN_EXP__
+
+
+
+
+
+
+#undef FLT_MIN_10_EXP
+#undef DBL_MIN_10_EXP
+#undef LDBL_MIN_10_EXP
+#define FLT_MIN_10_EXP __FLT_MIN_10_EXP__
+#define DBL_MIN_10_EXP __DBL_MIN_10_EXP__
+#define LDBL_MIN_10_EXP __LDBL_MIN_10_EXP__
+
+
+#undef FLT_MAX_EXP
+#undef DBL_MAX_EXP
+#undef LDBL_MAX_EXP
+#define FLT_MAX_EXP __FLT_MAX_EXP__
+#define DBL_MAX_EXP __DBL_MAX_EXP__
+#define LDBL_MAX_EXP __LDBL_MAX_EXP__
+
+
+
+
+
+
+#undef FLT_MAX_10_EXP
+#undef DBL_MAX_10_EXP
+#undef LDBL_MAX_10_EXP
+#define FLT_MAX_10_EXP __FLT_MAX_10_EXP__
+#define DBL_MAX_10_EXP __DBL_MAX_10_EXP__
+#define LDBL_MAX_10_EXP __LDBL_MAX_10_EXP__
+
+
+
+
+
+#undef FLT_MAX
+#undef DBL_MAX
+#undef LDBL_MAX
+#define FLT_MAX __FLT_MAX__
+#define DBL_MAX __DBL_MAX__
+#define LDBL_MAX __LDBL_MAX__
+
+
+
+#undef FLT_EPSILON
+#undef DBL_EPSILON
+#undef LDBL_EPSILON
+#define FLT_EPSILON __FLT_EPSILON__
+#define DBL_EPSILON __DBL_EPSILON__
+#define LDBL_EPSILON __LDBL_EPSILON__
+
+
+#undef FLT_MIN
+#undef DBL_MIN
+#undef LDBL_MIN
+#define FLT_MIN __FLT_MIN__
+#define DBL_MIN __DBL_MIN__
+#define LDBL_MIN __LDBL_MIN__
+
+
+
+#undef FLT_ROUNDS
+#define FLT_ROUNDS 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 2
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h" 1
+# 27 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h" 1
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define __STM32F4xx_H 
+
+
+ extern "C" {
+# 108 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define HSE_STARTUP_TIMEOUT ((uint16_t)0x0500)
+
+
+
+#define HSI_VALUE ((uint32_t)16000000)
+
+
+
+
+
+#define __STM32F4XX_STDPERIPH_VERSION_MAIN (0x01)
+#define __STM32F4XX_STDPERIPH_VERSION_SUB1 (0x01)
+#define __STM32F4XX_STDPERIPH_VERSION_SUB2 (0x00)
+#define __STM32F4XX_STDPERIPH_VERSION_RC (0x00)
+#define __STM32F4XX_STDPERIPH_VERSION ((__STM32F4XX_STDPERIPH_VERSION_MAIN << 24) |(__STM32F4XX_STDPERIPH_VERSION_SUB1 << 16) |(__STM32F4XX_STDPERIPH_VERSION_SUB2 << 8) |(__STM32F4XX_STDPERIPH_VERSION_RC))
+# 138 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define __CM4_REV 0x0001
+#define __MPU_PRESENT 1
+#define __NVIC_PRIO_BITS 4
+#define __Vendor_SysTickConfig 0
+#define __FPU_PRESENT 1
+
+
+
+
+
+typedef enum IRQn
+{
+
+  NonMaskableInt_IRQn = -14,
+  MemoryManagement_IRQn = -12,
+  BusFault_IRQn = -11,
+  UsageFault_IRQn = -10,
+  SVCall_IRQn = -5,
+  DebugMonitor_IRQn = -4,
+  PendSV_IRQn = -2,
+  SysTick_IRQn = -1,
+
+  WWDG_IRQn = 0,
+  PVD_IRQn = 1,
+  TAMP_STAMP_IRQn = 2,
+  RTC_WKUP_IRQn = 3,
+  FLASH_IRQn = 4,
+  RCC_IRQn = 5,
+  EXTI0_IRQn = 6,
+  EXTI1_IRQn = 7,
+  EXTI2_IRQn = 8,
+  EXTI3_IRQn = 9,
+  EXTI4_IRQn = 10,
+  DMA1_Stream0_IRQn = 11,
+  DMA1_Stream1_IRQn = 12,
+  DMA1_Stream2_IRQn = 13,
+  DMA1_Stream3_IRQn = 14,
+  DMA1_Stream4_IRQn = 15,
+  DMA1_Stream5_IRQn = 16,
+  DMA1_Stream6_IRQn = 17,
+  ADC_IRQn = 18,
+  CAN1_TX_IRQn = 19,
+  CAN1_RX0_IRQn = 20,
+  CAN1_RX1_IRQn = 21,
+  CAN1_SCE_IRQn = 22,
+  EXTI9_5_IRQn = 23,
+  TIM1_BRK_TIM9_IRQn = 24,
+  TIM1_UP_TIM10_IRQn = 25,
+  TIM1_TRG_COM_TIM11_IRQn = 26,
+  TIM1_CC_IRQn = 27,
+  TIM2_IRQn = 28,
+  TIM3_IRQn = 29,
+  TIM4_IRQn = 30,
+  I2C1_EV_IRQn = 31,
+  I2C1_ER_IRQn = 32,
+  I2C2_EV_IRQn = 33,
+  I2C2_ER_IRQn = 34,
+  SPI1_IRQn = 35,
+  SPI2_IRQn = 36,
+  USART1_IRQn = 37,
+  USART2_IRQn = 38,
+  USART3_IRQn = 39,
+  EXTI15_10_IRQn = 40,
+  RTC_Alarm_IRQn = 41,
+  OTG_FS_WKUP_IRQn = 42,
+  TIM8_BRK_TIM12_IRQn = 43,
+  TIM8_UP_TIM13_IRQn = 44,
+  TIM8_TRG_COM_TIM14_IRQn = 45,
+  TIM8_CC_IRQn = 46,
+  DMA1_Stream7_IRQn = 47,
+  FSMC_IRQn = 48,
+  SDIO_IRQn = 49,
+  TIM5_IRQn = 50,
+  SPI3_IRQn = 51,
+  UART4_IRQn = 52,
+  UART5_IRQn = 53,
+  TIM6_DAC_IRQn = 54,
+  TIM7_IRQn = 55,
+  DMA2_Stream0_IRQn = 56,
+  DMA2_Stream1_IRQn = 57,
+  DMA2_Stream2_IRQn = 58,
+  DMA2_Stream3_IRQn = 59,
+  DMA2_Stream4_IRQn = 60,
+  ETH_IRQn = 61,
+  ETH_WKUP_IRQn = 62,
+  CAN2_TX_IRQn = 63,
+  CAN2_RX0_IRQn = 64,
+  CAN2_RX1_IRQn = 65,
+  CAN2_SCE_IRQn = 66,
+  OTG_FS_IRQn = 67,
+  DMA2_Stream5_IRQn = 68,
+  DMA2_Stream6_IRQn = 69,
+  DMA2_Stream7_IRQn = 70,
+  USART6_IRQn = 71,
+  I2C3_EV_IRQn = 72,
+  I2C3_ER_IRQn = 73,
+  OTG_HS_EP1_OUT_IRQn = 74,
+  OTG_HS_EP1_IN_IRQn = 75,
+  OTG_HS_WKUP_IRQn = 76,
+  OTG_HS_IRQn = 77,
+  DCMI_IRQn = 78,
+  CRYP_IRQn = 79,
+  HASH_RNG_IRQn = 80,
+# 255 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+} IRQn_Type;
+
+
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h" 1
+# 43 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+ extern "C" {
+
+
+
+#define __CORE_CM4_H_GENERIC 
+# 71 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+#define __CM4_CMSIS_VERSION_MAIN (0x03)
+#define __CM4_CMSIS_VERSION_SUB (0x20)
+#define __CM4_CMSIS_VERSION ((__CM4_CMSIS_VERSION_MAIN << 16) | __CM4_CMSIS_VERSION_SUB )
+
+
+#define __CORTEX_M (0x04)
+# 94 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+#define __ASM __asm
+#define __INLINE inline
+#define __STATIC_INLINE static inline
+# 146 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+#define __FPU_USED 1
+# 169 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h" 1
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+#define __CORE_CMINSTR_H 
+# 317 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+#define __CMSIS_GCC_OUT_REG(r) "=r" (r)
+#define __CMSIS_GCC_USE_REG(r) "r" (r)
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __NOP(void)
+{
+  __asm volatile ("nop");
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __WFI(void)
+{
+  __asm volatile ("wfi");
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __WFE(void)
+{
+  __asm volatile ("wfe");
+}
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __SEV(void)
+{
+  __asm volatile ("sev");
+}
+# 369 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline void __ISB(void)
+{
+  __asm volatile ("isb");
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __DSB(void)
+{
+  __asm volatile ("dsb");
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __DMB(void)
+{
+  __asm volatile ("dmb");
+}
+# 404 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __REV(uint32_t value)
+{
+
+  return __builtin_bswap32(value);
+
+
+
+
+
+
+}
+# 424 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __REV16(uint32_t value)
+{
+  uint32_t result;
+
+  __asm volatile ("rev16 %0, %1" : "=r" (result) : "r" (value) );
+  return(result);
+}
+# 440 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline int32_t __REVSH(int32_t value)
+{
+
+  return (short)__builtin_bswap16(value);
+
+
+
+
+
+
+}
+# 461 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __ROR(uint32_t op1, uint32_t op2)
+{
+  return (op1 >> op2) | (op1 << (32 - op2));
+}
+# 475 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+#define __BKPT(value) __ASM volatile ("bkpt "#value)
+# 487 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __RBIT(uint32_t value)
+{
+  uint32_t result;
+
+   __asm volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
+   return(result);
+}
+# 503 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint8_t __LDREXB(volatile uint8_t *addr)
+{
+    uint32_t result;
+
+
+   __asm volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
+
+
+
+
+
+
+   return(result);
+}
+# 526 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint16_t __LDREXH(volatile uint16_t *addr)
+{
+    uint32_t result;
+
+
+   __asm volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
+
+
+
+
+
+
+   return(result);
+}
+# 549 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __LDREXW(volatile uint32_t *addr)
+{
+    uint32_t result;
+
+   __asm volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
+   return(result);
+}
+# 567 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
+{
+   uint32_t result;
+
+   __asm volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
+   return(result);
+}
+# 585 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
+{
+   uint32_t result;
+
+   __asm volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
+   return(result);
+}
+# 603 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
+{
+   uint32_t result;
+
+   __asm volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
+   return(result);
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __CLREX(void)
+{
+  __asm volatile ("clrex" ::: "memory");
+}
+# 631 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+#define __SSAT(ARG1,ARG2) ({ uint32_t __RES, __ARG1 = (ARG1); __ASM ("ssat %0, %1, %2" : "=r" (__RES) : "I" (ARG2), "r" (__ARG1) ); __RES; })
+# 647 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+#define __USAT(ARG1,ARG2) ({ uint32_t __RES, __ARG1 = (ARG1); __ASM ("usat %0, %1, %2" : "=r" (__RES) : "I" (ARG2), "r" (__ARG1) ); __RES; })
+# 662 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmInstr.h"
+__attribute__( ( always_inline ) ) static inline uint8_t __CLZ(uint32_t value)
+{
+   uint32_t result;
+
+  __asm volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
+  return(result);
+}
+# 170 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h" 1
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+#define __CORE_CMFUNC_H 
+# 329 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __enable_irq(void)
+{
+  __asm volatile ("cpsie i" : : : "memory");
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __disable_irq(void)
+{
+  __asm volatile ("cpsid i" : : : "memory");
+}
+# 352 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_CONTROL(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, control" : "=r" (result) );
+  return(result);
+}
+# 367 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_CONTROL(uint32_t control)
+{
+  __asm volatile ("MSR control, %0" : : "r" (control) : "memory");
+}
+# 379 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_IPSR(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, ipsr" : "=r" (result) );
+  return(result);
+}
+# 394 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_APSR(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, apsr" : "=r" (result) );
+  return(result);
+}
+# 409 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_xPSR(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, xpsr" : "=r" (result) );
+  return(result);
+}
+# 424 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_PSP(void)
+{
+  register uint32_t result;
+
+  __asm volatile ("MRS %0, psp\n" : "=r" (result) );
+  return(result);
+}
+# 439 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_PSP(uint32_t topOfProcStack)
+{
+  __asm volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
+}
+# 451 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_MSP(void)
+{
+  register uint32_t result;
+
+  __asm volatile ("MRS %0, msp\n" : "=r" (result) );
+  return(result);
+}
+# 466 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_MSP(uint32_t topOfMainStack)
+{
+  __asm volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
+}
+# 478 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_PRIMASK(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, primask" : "=r" (result) );
+  return(result);
+}
+# 493 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_PRIMASK(uint32_t priMask)
+{
+  __asm volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
+}
+# 506 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __enable_fault_irq(void)
+{
+  __asm volatile ("cpsie f" : : : "memory");
+}
+
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline void __disable_fault_irq(void)
+{
+  __asm volatile ("cpsid f" : : : "memory");
+}
+# 529 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_BASEPRI(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, basepri_max" : "=r" (result) );
+  return(result);
+}
+# 544 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_BASEPRI(uint32_t value)
+{
+  __asm volatile ("MSR basepri, %0" : : "r" (value) : "memory");
+}
+# 556 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_FAULTMASK(void)
+{
+  uint32_t result;
+
+  __asm volatile ("MRS %0, faultmask" : "=r" (result) );
+  return(result);
+}
+# 571 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_FAULTMASK(uint32_t faultMask)
+{
+  __asm volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
+}
+# 587 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __get_FPSCR(void)
+{
+
+  uint32_t result;
+
+
+  __asm volatile ("");
+  __asm volatile ("VMRS %0, fpscr" : "=r" (result) );
+  __asm volatile ("");
+  return(result);
+
+
+
+}
+# 609 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cmFunc.h"
+__attribute__( ( always_inline ) ) static inline void __set_FPSCR(uint32_t fpscr)
+{
+
+
+  __asm volatile ("");
+  __asm volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
+  __asm volatile ("");
+
+}
+# 171 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4_simd.h" 1
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4_simd.h"
+ extern "C" {
+
+
+
+#define __CORE_CM4_SIMD_H 
+# 158 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4_simd.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __SADD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QADD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SHADD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UADD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UQADD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UHADD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SSUB8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QSUB8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __USUB8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SADD16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QADD16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SHADD16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UADD16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UQADD16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UHADD16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SSUB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QSUB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __USUB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SASX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QASX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SHASX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UASX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UQASX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UHASX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SSAX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QSAX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SHSAX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __USAX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UQSAX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UHSAX(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __USAD8(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
+{
+  uint32_t result;
+
+  __asm volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
+  return(result);
+}
+
+#define __SSAT16(ARG1,ARG2) ({ uint32_t __RES, __ARG1 = (ARG1); __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) : "I" (ARG2), "r" (__ARG1) ); __RES; })
+
+
+
+
+
+
+#define __USAT16(ARG1,ARG2) ({ uint32_t __RES, __ARG1 = (ARG1); __ASM ("usat16 %0, %1, %2" : "=r" (__RES) : "I" (ARG2), "r" (__ARG1) ); __RES; })
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UXTB16(uint32_t op1)
+{
+  uint32_t result;
+
+  __asm volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SXTB16(uint32_t op1)
+{
+  uint32_t result;
+
+  __asm volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMUAD (uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMUADX (uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
+{
+  uint32_t result;
+
+  __asm volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
+{
+  uint32_t result;
+
+  __asm volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
+  return(result);
+}
+
+#define __SMLALD(ARG1,ARG2,ARG3) ({ uint32_t __ARG1 = (ARG1), __ARG2 = (ARG2), __ARG3_H = (uint32_t)((uint64_t)(ARG3) >> 32), __ARG3_L = (uint32_t)((uint64_t)(ARG3) & 0xFFFFFFFFUL); __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (__ARG3_L), "=r" (__ARG3_H) : "r" (__ARG1), "r" (__ARG2), "0" (__ARG3_L), "1" (__ARG3_H) ); (uint64_t)(((uint64_t)__ARG3_H << 32) | __ARG3_L); })
+
+
+
+
+
+
+#define __SMLALDX(ARG1,ARG2,ARG3) ({ uint32_t __ARG1 = (ARG1), __ARG2 = (ARG2), __ARG3_H = (uint32_t)((uint64_t)(ARG3) >> 32), __ARG3_L = (uint32_t)((uint64_t)(ARG3) & 0xFFFFFFFFUL); __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (__ARG3_L), "=r" (__ARG3_H) : "r" (__ARG1), "r" (__ARG2), "0" (__ARG3_L), "1" (__ARG3_H) ); (uint64_t)(((uint64_t)__ARG3_H << 32) | __ARG3_L); })
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMUSD (uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("smusd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMUSDX (uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("smusdx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMLSD (uint32_t op1, uint32_t op2, uint32_t op3)
+{
+  uint32_t result;
+
+  __asm volatile ("smlsd %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SMLSDX (uint32_t op1, uint32_t op2, uint32_t op3)
+{
+  uint32_t result;
+
+  __asm volatile ("smlsdx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
+  return(result);
+}
+
+#define __SMLSLD(ARG1,ARG2,ARG3) ({ uint32_t __ARG1 = (ARG1), __ARG2 = (ARG2), __ARG3_H = (uint32_t)((ARG3) >> 32), __ARG3_L = (uint32_t)((ARG3) & 0xFFFFFFFFUL); __ASM volatile ("smlsld %0, %1, %2, %3" : "=r" (__ARG3_L), "=r" (__ARG3_H) : "r" (__ARG1), "r" (__ARG2), "0" (__ARG3_L), "1" (__ARG3_H) ); (uint64_t)(((uint64_t)__ARG3_H << 32) | __ARG3_L); })
+
+
+
+
+
+
+#define __SMLSLDX(ARG1,ARG2,ARG3) ({ uint32_t __ARG1 = (ARG1), __ARG2 = (ARG2), __ARG3_H = (uint32_t)((ARG3) >> 32), __ARG3_L = (uint32_t)((ARG3) & 0xFFFFFFFFUL); __ASM volatile ("smlsldx %0, %1, %2, %3" : "=r" (__ARG3_L), "=r" (__ARG3_H) : "r" (__ARG1), "r" (__ARG2), "0" (__ARG3_L), "1" (__ARG3_H) ); (uint64_t)(((uint64_t)__ARG3_H << 32) | __ARG3_L); })
+
+
+
+
+
+
+__attribute__( ( always_inline ) ) static inline uint32_t __SEL (uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("sel %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QADD(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qadd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+__attribute__( ( always_inline ) ) static inline uint32_t __QSUB(uint32_t op1, uint32_t op2)
+{
+  uint32_t result;
+
+  __asm volatile ("qsub %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
+  return(result);
+}
+
+#define __PKHBT(ARG1,ARG2,ARG3) ({ uint32_t __RES, __ARG1 = (ARG1), __ARG2 = (ARG2); __ASM ("pkhbt %0, %1, %2, lsl %3" : "=r" (__RES) : "r" (__ARG1), "r" (__ARG2), "I" (ARG3) ); __RES; })
+
+
+
+
+
+
+#define __PKHTB(ARG1,ARG2,ARG3) ({ uint32_t __RES, __ARG1 = (ARG1), __ARG2 = (ARG2); if (ARG3 == 0) __ASM ("pkhtb %0, %1, %2" : "=r" (__RES) : "r" (__ARG1), "r" (__ARG2) ); else __ASM ("pkhtb %0, %1, %2, asr %3" : "=r" (__RES) : "r" (__ARG1), "r" (__ARG2), "I" (ARG3) ); __RES; })
+# 643 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4_simd.h"
+__attribute__( ( always_inline ) ) static inline uint32_t __SMMLA (int32_t op1, int32_t op2, int32_t op3)
+{
+ int32_t result;
+
+ __asm volatile ("smmla %0, %1, %2, %3" : "=r" (result): "r" (op1), "r" (op2), "r" (op3) );
+ return(result);
+}
+# 672 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4_simd.h"
+}
+# 172 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h" 2
+
+
+
+
+
+
+#define __CORE_CM4_H_DEPENDANT 
+# 217 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+#define __I volatile
+
+
+
+#define __O volatile
+#define __IO volatile
+# 251 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef union
+{
+  struct
+  {
+
+
+
+    uint32_t _reserved0:16;
+    uint32_t GE:4;
+    uint32_t _reserved1:7;
+
+    uint32_t Q:1;
+    uint32_t V:1;
+    uint32_t C:1;
+    uint32_t Z:1;
+    uint32_t N:1;
+  } b;
+  uint32_t w;
+} APSR_Type;
+
+
+
+
+typedef union
+{
+  struct
+  {
+    uint32_t ISR:9;
+    uint32_t _reserved0:23;
+  } b;
+  uint32_t w;
+} IPSR_Type;
+
+
+
+
+typedef union
+{
+  struct
+  {
+    uint32_t ISR:9;
+
+
+
+    uint32_t _reserved0:7;
+    uint32_t GE:4;
+    uint32_t _reserved1:4;
+
+    uint32_t T:1;
+    uint32_t IT:2;
+    uint32_t Q:1;
+    uint32_t V:1;
+    uint32_t C:1;
+    uint32_t Z:1;
+    uint32_t N:1;
+  } b;
+  uint32_t w;
+} xPSR_Type;
+
+
+
+
+typedef union
+{
+  struct
+  {
+    uint32_t nPRIV:1;
+    uint32_t SPSEL:1;
+    uint32_t FPCA:1;
+    uint32_t _reserved0:29;
+  } b;
+  uint32_t w;
+} CONTROL_Type;
+# 336 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t ISER[8];
+       uint32_t RESERVED0[24];
+  volatile uint32_t ICER[8];
+       uint32_t RSERVED1[24];
+  volatile uint32_t ISPR[8];
+       uint32_t RESERVED2[24];
+  volatile uint32_t ICPR[8];
+       uint32_t RESERVED3[24];
+  volatile uint32_t IABR[8];
+       uint32_t RESERVED4[56];
+  volatile uint8_t IP[240];
+       uint32_t RESERVED5[644];
+  volatile uint32_t STIR;
+} NVIC_Type;
+
+
+#define NVIC_STIR_INTID_Pos 0
+#define NVIC_STIR_INTID_Msk (0x1FFUL << NVIC_STIR_INTID_Pos)
+# 368 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t CPUID;
+  volatile uint32_t ICSR;
+  volatile uint32_t VTOR;
+  volatile uint32_t AIRCR;
+  volatile uint32_t SCR;
+  volatile uint32_t CCR;
+  volatile uint8_t SHP[12];
+  volatile uint32_t SHCSR;
+  volatile uint32_t CFSR;
+  volatile uint32_t HFSR;
+  volatile uint32_t DFSR;
+  volatile uint32_t MMFAR;
+  volatile uint32_t BFAR;
+  volatile uint32_t AFSR;
+  volatile uint32_t PFR[2];
+  volatile uint32_t DFR;
+  volatile uint32_t ADR;
+  volatile uint32_t MMFR[4];
+  volatile uint32_t ISAR[5];
+       uint32_t RESERVED0[5];
+  volatile uint32_t CPACR;
+} SCB_Type;
+
+
+#define SCB_CPUID_IMPLEMENTER_Pos 24
+#define SCB_CPUID_IMPLEMENTER_Msk (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)
+
+#define SCB_CPUID_VARIANT_Pos 20
+#define SCB_CPUID_VARIANT_Msk (0xFUL << SCB_CPUID_VARIANT_Pos)
+
+#define SCB_CPUID_ARCHITECTURE_Pos 16
+#define SCB_CPUID_ARCHITECTURE_Msk (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)
+
+#define SCB_CPUID_PARTNO_Pos 4
+#define SCB_CPUID_PARTNO_Msk (0xFFFUL << SCB_CPUID_PARTNO_Pos)
+
+#define SCB_CPUID_REVISION_Pos 0
+#define SCB_CPUID_REVISION_Msk (0xFUL << SCB_CPUID_REVISION_Pos)
+
+
+#define SCB_ICSR_NMIPENDSET_Pos 31
+#define SCB_ICSR_NMIPENDSET_Msk (1UL << SCB_ICSR_NMIPENDSET_Pos)
+
+#define SCB_ICSR_PENDSVSET_Pos 28
+#define SCB_ICSR_PENDSVSET_Msk (1UL << SCB_ICSR_PENDSVSET_Pos)
+
+#define SCB_ICSR_PENDSVCLR_Pos 27
+#define SCB_ICSR_PENDSVCLR_Msk (1UL << SCB_ICSR_PENDSVCLR_Pos)
 
+#define SCB_ICSR_PENDSTSET_Pos 26
+#define SCB_ICSR_PENDSTSET_Msk (1UL << SCB_ICSR_PENDSTSET_Pos)
 
-      static constexpr short
-      lowest() noexcept { return min(); }
+#define SCB_ICSR_PENDSTCLR_Pos 25
+#define SCB_ICSR_PENDSTCLR_Msk (1UL << SCB_ICSR_PENDSTCLR_Pos)
 
+#define SCB_ICSR_ISRPREEMPT_Pos 23
+#define SCB_ICSR_ISRPREEMPT_Msk (1UL << SCB_ICSR_ISRPREEMPT_Pos)
 
-      static constexpr int digits = (sizeof(short) * 8 - ((short)(-1) < 0));
-      static constexpr int digits10 = ((sizeof(short) * 8 - ((short)(-1) < 0)) * 643L / 2136);
+#define SCB_ICSR_ISRPENDING_Pos 22
+#define SCB_ICSR_ISRPENDING_Msk (1UL << SCB_ICSR_ISRPENDING_Pos)
 
-      static constexpr int max_digits10 = 0;
+#define SCB_ICSR_VECTPENDING_Pos 12
+#define SCB_ICSR_VECTPENDING_Msk (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define SCB_ICSR_RETTOBASE_Pos 11
+#define SCB_ICSR_RETTOBASE_Msk (1UL << SCB_ICSR_RETTOBASE_Pos)
 
-      static constexpr short
-      epsilon() noexcept { return 0; }
+#define SCB_ICSR_VECTACTIVE_Pos 0
+#define SCB_ICSR_VECTACTIVE_Msk (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)
 
-      static constexpr short
-      round_error() noexcept { return 0; }
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+#define SCB_VTOR_TBLOFF_Pos 7
+#define SCB_VTOR_TBLOFF_Msk (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr short
-      infinity() noexcept { return short(); }
+#define SCB_AIRCR_VECTKEY_Pos 16
+#define SCB_AIRCR_VECTKEY_Msk (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)
 
-      static constexpr short
-      quiet_NaN() noexcept { return short(); }
+#define SCB_AIRCR_VECTKEYSTAT_Pos 16
+#define SCB_AIRCR_VECTKEYSTAT_Msk (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)
 
-      static constexpr short
-      signaling_NaN() noexcept { return short(); }
+#define SCB_AIRCR_ENDIANESS_Pos 15
+#define SCB_AIRCR_ENDIANESS_Msk (1UL << SCB_AIRCR_ENDIANESS_Pos)
 
-      static constexpr short
-      denorm_min() noexcept { return short(); }
+#define SCB_AIRCR_PRIGROUP_Pos 8
+#define SCB_AIRCR_PRIGROUP_Msk (7UL << SCB_AIRCR_PRIGROUP_Pos)
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
+#define SCB_AIRCR_SYSRESETREQ_Pos 2
+#define SCB_AIRCR_SYSRESETREQ_Msk (1UL << SCB_AIRCR_SYSRESETREQ_Pos)
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+#define SCB_AIRCR_VECTCLRACTIVE_Pos 1
+#define SCB_AIRCR_VECTCLRACTIVE_Msk (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)
 
+#define SCB_AIRCR_VECTRESET_Pos 0
+#define SCB_AIRCR_VECTRESET_Msk (1UL << SCB_AIRCR_VECTRESET_Pos)
 
-  template<>
-    struct numeric_limits<unsigned short>
+
+#define SCB_SCR_SEVONPEND_Pos 4
+#define SCB_SCR_SEVONPEND_Msk (1UL << SCB_SCR_SEVONPEND_Pos)
+
+#define SCB_SCR_SLEEPDEEP_Pos 2
+#define SCB_SCR_SLEEPDEEP_Msk (1UL << SCB_SCR_SLEEPDEEP_Pos)
+
+#define SCB_SCR_SLEEPONEXIT_Pos 1
+#define SCB_SCR_SLEEPONEXIT_Msk (1UL << SCB_SCR_SLEEPONEXIT_Pos)
+
+
+#define SCB_CCR_STKALIGN_Pos 9
+#define SCB_CCR_STKALIGN_Msk (1UL << SCB_CCR_STKALIGN_Pos)
+
+#define SCB_CCR_BFHFNMIGN_Pos 8
+#define SCB_CCR_BFHFNMIGN_Msk (1UL << SCB_CCR_BFHFNMIGN_Pos)
+
+#define SCB_CCR_DIV_0_TRP_Pos 4
+#define SCB_CCR_DIV_0_TRP_Msk (1UL << SCB_CCR_DIV_0_TRP_Pos)
+
+#define SCB_CCR_UNALIGN_TRP_Pos 3
+#define SCB_CCR_UNALIGN_TRP_Msk (1UL << SCB_CCR_UNALIGN_TRP_Pos)
+
+#define SCB_CCR_USERSETMPEND_Pos 1
+#define SCB_CCR_USERSETMPEND_Msk (1UL << SCB_CCR_USERSETMPEND_Pos)
+
+#define SCB_CCR_NONBASETHRDENA_Pos 0
+#define SCB_CCR_NONBASETHRDENA_Msk (1UL << SCB_CCR_NONBASETHRDENA_Pos)
+
+
+#define SCB_SHCSR_USGFAULTENA_Pos 18
+#define SCB_SHCSR_USGFAULTENA_Msk (1UL << SCB_SHCSR_USGFAULTENA_Pos)
+
+#define SCB_SHCSR_BUSFAULTENA_Pos 17
+#define SCB_SHCSR_BUSFAULTENA_Msk (1UL << SCB_SHCSR_BUSFAULTENA_Pos)
+
+#define SCB_SHCSR_MEMFAULTENA_Pos 16
+#define SCB_SHCSR_MEMFAULTENA_Msk (1UL << SCB_SHCSR_MEMFAULTENA_Pos)
+
+#define SCB_SHCSR_SVCALLPENDED_Pos 15
+#define SCB_SHCSR_SVCALLPENDED_Msk (1UL << SCB_SHCSR_SVCALLPENDED_Pos)
+
+#define SCB_SHCSR_BUSFAULTPENDED_Pos 14
+#define SCB_SHCSR_BUSFAULTPENDED_Msk (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)
+
+#define SCB_SHCSR_MEMFAULTPENDED_Pos 13
+#define SCB_SHCSR_MEMFAULTPENDED_Msk (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)
+
+#define SCB_SHCSR_USGFAULTPENDED_Pos 12
+#define SCB_SHCSR_USGFAULTPENDED_Msk (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)
+
+#define SCB_SHCSR_SYSTICKACT_Pos 11
+#define SCB_SHCSR_SYSTICKACT_Msk (1UL << SCB_SHCSR_SYSTICKACT_Pos)
+
+#define SCB_SHCSR_PENDSVACT_Pos 10
+#define SCB_SHCSR_PENDSVACT_Msk (1UL << SCB_SHCSR_PENDSVACT_Pos)
+
+#define SCB_SHCSR_MONITORACT_Pos 8
+#define SCB_SHCSR_MONITORACT_Msk (1UL << SCB_SHCSR_MONITORACT_Pos)
+
+#define SCB_SHCSR_SVCALLACT_Pos 7
+#define SCB_SHCSR_SVCALLACT_Msk (1UL << SCB_SHCSR_SVCALLACT_Pos)
+
+#define SCB_SHCSR_USGFAULTACT_Pos 3
+#define SCB_SHCSR_USGFAULTACT_Msk (1UL << SCB_SHCSR_USGFAULTACT_Pos)
+
+#define SCB_SHCSR_BUSFAULTACT_Pos 1
+#define SCB_SHCSR_BUSFAULTACT_Msk (1UL << SCB_SHCSR_BUSFAULTACT_Pos)
+
+#define SCB_SHCSR_MEMFAULTACT_Pos 0
+#define SCB_SHCSR_MEMFAULTACT_Msk (1UL << SCB_SHCSR_MEMFAULTACT_Pos)
+
+
+#define SCB_CFSR_USGFAULTSR_Pos 16
+#define SCB_CFSR_USGFAULTSR_Msk (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)
+
+#define SCB_CFSR_BUSFAULTSR_Pos 8
+#define SCB_CFSR_BUSFAULTSR_Msk (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)
+
+#define SCB_CFSR_MEMFAULTSR_Pos 0
+#define SCB_CFSR_MEMFAULTSR_Msk (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)
+
+
+#define SCB_HFSR_DEBUGEVT_Pos 31
+#define SCB_HFSR_DEBUGEVT_Msk (1UL << SCB_HFSR_DEBUGEVT_Pos)
+
+#define SCB_HFSR_FORCED_Pos 30
+#define SCB_HFSR_FORCED_Msk (1UL << SCB_HFSR_FORCED_Pos)
+
+#define SCB_HFSR_VECTTBL_Pos 1
+#define SCB_HFSR_VECTTBL_Msk (1UL << SCB_HFSR_VECTTBL_Pos)
+
+
+#define SCB_DFSR_EXTERNAL_Pos 4
+#define SCB_DFSR_EXTERNAL_Msk (1UL << SCB_DFSR_EXTERNAL_Pos)
+
+#define SCB_DFSR_VCATCH_Pos 3
+#define SCB_DFSR_VCATCH_Msk (1UL << SCB_DFSR_VCATCH_Pos)
+
+#define SCB_DFSR_DWTTRAP_Pos 2
+#define SCB_DFSR_DWTTRAP_Msk (1UL << SCB_DFSR_DWTTRAP_Pos)
+
+#define SCB_DFSR_BKPT_Pos 1
+#define SCB_DFSR_BKPT_Msk (1UL << SCB_DFSR_BKPT_Pos)
+
+#define SCB_DFSR_HALTED_Pos 0
+#define SCB_DFSR_HALTED_Msk (1UL << SCB_DFSR_HALTED_Pos)
+# 585 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+       uint32_t RESERVED0[1];
+  volatile uint32_t ICTR;
+  volatile uint32_t ACTLR;
+} SCnSCB_Type;
+
+
+#define SCnSCB_ICTR_INTLINESNUM_Pos 0
+#define SCnSCB_ICTR_INTLINESNUM_Msk (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)
+
+
+#define SCnSCB_ACTLR_DISOOFP_Pos 9
+#define SCnSCB_ACTLR_DISOOFP_Msk (1UL << SCnSCB_ACTLR_DISOOFP_Pos)
+
+#define SCnSCB_ACTLR_DISFPCA_Pos 8
+#define SCnSCB_ACTLR_DISFPCA_Msk (1UL << SCnSCB_ACTLR_DISFPCA_Pos)
+
+#define SCnSCB_ACTLR_DISFOLD_Pos 2
+#define SCnSCB_ACTLR_DISFOLD_Msk (1UL << SCnSCB_ACTLR_DISFOLD_Pos)
+
+#define SCnSCB_ACTLR_DISDEFWBUF_Pos 1
+#define SCnSCB_ACTLR_DISDEFWBUF_Msk (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)
+
+#define SCnSCB_ACTLR_DISMCYCINT_Pos 0
+#define SCnSCB_ACTLR_DISMCYCINT_Msk (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)
+# 623 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t CTRL;
+  volatile uint32_t LOAD;
+  volatile uint32_t VAL;
+  volatile uint32_t CALIB;
+} SysTick_Type;
+
+
+#define SysTick_CTRL_COUNTFLAG_Pos 16
+#define SysTick_CTRL_COUNTFLAG_Msk (1UL << SysTick_CTRL_COUNTFLAG_Pos)
+
+#define SysTick_CTRL_CLKSOURCE_Pos 2
+#define SysTick_CTRL_CLKSOURCE_Msk (1UL << SysTick_CTRL_CLKSOURCE_Pos)
+
+#define SysTick_CTRL_TICKINT_Pos 1
+#define SysTick_CTRL_TICKINT_Msk (1UL << SysTick_CTRL_TICKINT_Pos)
+
+#define SysTick_CTRL_ENABLE_Pos 0
+#define SysTick_CTRL_ENABLE_Msk (1UL << SysTick_CTRL_ENABLE_Pos)
+
+
+#define SysTick_LOAD_RELOAD_Pos 0
+#define SysTick_LOAD_RELOAD_Msk (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)
+
+
+#define SysTick_VAL_CURRENT_Pos 0
+#define SysTick_VAL_CURRENT_Msk (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)
+
+
+#define SysTick_CALIB_NOREF_Pos 31
+#define SysTick_CALIB_NOREF_Msk (1UL << SysTick_CALIB_NOREF_Pos)
+
+#define SysTick_CALIB_SKEW_Pos 30
+#define SysTick_CALIB_SKEW_Msk (1UL << SysTick_CALIB_SKEW_Pos)
+
+#define SysTick_CALIB_TENMS_Pos 0
+#define SysTick_CALIB_TENMS_Msk (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)
+# 673 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile union
     {
-      static constexpr bool is_specialized = true;
+    volatile uint8_t u8;
+    volatile uint16_t u16;
+    volatile uint32_t u32;
+  } PORT [32];
+       uint32_t RESERVED0[864];
+  volatile uint32_t TER;
+       uint32_t RESERVED1[15];
+  volatile uint32_t TPR;
+       uint32_t RESERVED2[15];
+  volatile uint32_t TCR;
+       uint32_t RESERVED3[29];
+  volatile uint32_t IWR;
+  volatile uint32_t IRR;
+  volatile uint32_t IMCR;
+       uint32_t RESERVED4[43];
+  volatile uint32_t LAR;
+  volatile uint32_t LSR;
+       uint32_t RESERVED5[6];
+  volatile uint32_t PID4;
+  volatile uint32_t PID5;
+  volatile uint32_t PID6;
+  volatile uint32_t PID7;
+  volatile uint32_t PID0;
+  volatile uint32_t PID1;
+  volatile uint32_t PID2;
+  volatile uint32_t PID3;
+  volatile uint32_t CID0;
+  volatile uint32_t CID1;
+  volatile uint32_t CID2;
+  volatile uint32_t CID3;
+} ITM_Type;
 
-      static constexpr unsigned short
-      min() noexcept { return 0; }
 
-      static constexpr unsigned short
-      max() noexcept { return 32767 * 2U + 1; }
+#define ITM_TPR_PRIVMASK_Pos 0
+#define ITM_TPR_PRIVMASK_Msk (0xFUL << ITM_TPR_PRIVMASK_Pos)
 
 
-      static constexpr unsigned short
-      lowest() noexcept { return min(); }
+#define ITM_TCR_BUSY_Pos 23
+#define ITM_TCR_BUSY_Msk (1UL << ITM_TCR_BUSY_Pos)
 
+#define ITM_TCR_TraceBusID_Pos 16
+#define ITM_TCR_TraceBusID_Msk (0x7FUL << ITM_TCR_TraceBusID_Pos)
 
-      static constexpr int digits
-       = (sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0)) * 643L / 2136);
+#define ITM_TCR_GTSFREQ_Pos 10
+#define ITM_TCR_GTSFREQ_Msk (3UL << ITM_TCR_GTSFREQ_Pos)
 
-      static constexpr int max_digits10 = 0;
+#define ITM_TCR_TSPrescale_Pos 8
+#define ITM_TCR_TSPrescale_Msk (3UL << ITM_TCR_TSPrescale_Pos)
 
-      static constexpr bool is_signed = false;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define ITM_TCR_SWOENA_Pos 4
+#define ITM_TCR_SWOENA_Msk (1UL << ITM_TCR_SWOENA_Pos)
 
-      static constexpr unsigned short
-      epsilon() noexcept { return 0; }
+#define ITM_TCR_DWTENA_Pos 3
+#define ITM_TCR_DWTENA_Msk (1UL << ITM_TCR_DWTENA_Pos)
 
-      static constexpr unsigned short
-      round_error() noexcept { return 0; }
+#define ITM_TCR_SYNCENA_Pos 2
+#define ITM_TCR_SYNCENA_Msk (1UL << ITM_TCR_SYNCENA_Pos)
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+#define ITM_TCR_TSENA_Pos 1
+#define ITM_TCR_TSENA_Msk (1UL << ITM_TCR_TSENA_Pos)
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
+#define ITM_TCR_ITMENA_Pos 0
+#define ITM_TCR_ITMENA_Msk (1UL << ITM_TCR_ITMENA_Pos)
 
-      static constexpr unsigned short
-      infinity() noexcept
-      { return static_cast<unsigned short>(0); }
 
-      static constexpr unsigned short
-      quiet_NaN() noexcept
-      { return static_cast<unsigned short>(0); }
+#define ITM_IWR_ATVALIDM_Pos 0
+#define ITM_IWR_ATVALIDM_Msk (1UL << ITM_IWR_ATVALIDM_Pos)
 
-      static constexpr unsigned short
-      signaling_NaN() noexcept
-      { return static_cast<unsigned short>(0); }
 
-      static constexpr unsigned short
-      denorm_min() noexcept
-      { return static_cast<unsigned short>(0); }
+#define ITM_IRR_ATREADYM_Pos 0
+#define ITM_IRR_ATREADYM_Msk (1UL << ITM_IRR_ATREADYM_Pos)
+
+
+#define ITM_IMCR_INTEGRATION_Pos 0
+#define ITM_IMCR_INTEGRATION_Msk (1UL << ITM_IMCR_INTEGRATION_Pos)
+
+
+#define ITM_LSR_ByteAcc_Pos 2
+#define ITM_LSR_ByteAcc_Msk (1UL << ITM_LSR_ByteAcc_Pos)
+
+#define ITM_LSR_Access_Pos 1
+#define ITM_LSR_Access_Msk (1UL << ITM_LSR_Access_Pos)
+
+#define ITM_LSR_Present_Pos 0
+#define ITM_LSR_Present_Msk (1UL << ITM_LSR_Present_Pos)
+# 774 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t CTRL;
+  volatile uint32_t CYCCNT;
+  volatile uint32_t CPICNT;
+  volatile uint32_t EXCCNT;
+  volatile uint32_t SLEEPCNT;
+  volatile uint32_t LSUCNT;
+  volatile uint32_t FOLDCNT;
+  volatile uint32_t PCSR;
+  volatile uint32_t COMP0;
+  volatile uint32_t MASK0;
+  volatile uint32_t FUNCTION0;
+       uint32_t RESERVED0[1];
+  volatile uint32_t COMP1;
+  volatile uint32_t MASK1;
+  volatile uint32_t FUNCTION1;
+       uint32_t RESERVED1[1];
+  volatile uint32_t COMP2;
+  volatile uint32_t MASK2;
+  volatile uint32_t FUNCTION2;
+       uint32_t RESERVED2[1];
+  volatile uint32_t COMP3;
+  volatile uint32_t MASK3;
+  volatile uint32_t FUNCTION3;
+} DWT_Type;
+
+
+#define DWT_CTRL_NUMCOMP_Pos 28
+#define DWT_CTRL_NUMCOMP_Msk (0xFUL << DWT_CTRL_NUMCOMP_Pos)
+
+#define DWT_CTRL_NOTRCPKT_Pos 27
+#define DWT_CTRL_NOTRCPKT_Msk (0x1UL << DWT_CTRL_NOTRCPKT_Pos)
+
+#define DWT_CTRL_NOEXTTRIG_Pos 26
+#define DWT_CTRL_NOEXTTRIG_Msk (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)
+
+#define DWT_CTRL_NOCYCCNT_Pos 25
+#define DWT_CTRL_NOCYCCNT_Msk (0x1UL << DWT_CTRL_NOCYCCNT_Pos)
+
+#define DWT_CTRL_NOPRFCNT_Pos 24
+#define DWT_CTRL_NOPRFCNT_Msk (0x1UL << DWT_CTRL_NOPRFCNT_Pos)
+
+#define DWT_CTRL_CYCEVTENA_Pos 22
+#define DWT_CTRL_CYCEVTENA_Msk (0x1UL << DWT_CTRL_CYCEVTENA_Pos)
+
+#define DWT_CTRL_FOLDEVTENA_Pos 21
+#define DWT_CTRL_FOLDEVTENA_Msk (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)
+
+#define DWT_CTRL_LSUEVTENA_Pos 20
+#define DWT_CTRL_LSUEVTENA_Msk (0x1UL << DWT_CTRL_LSUEVTENA_Pos)
+
+#define DWT_CTRL_SLEEPEVTENA_Pos 19
+#define DWT_CTRL_SLEEPEVTENA_Msk (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)
+
+#define DWT_CTRL_EXCEVTENA_Pos 18
+#define DWT_CTRL_EXCEVTENA_Msk (0x1UL << DWT_CTRL_EXCEVTENA_Pos)
+
+#define DWT_CTRL_CPIEVTENA_Pos 17
+#define DWT_CTRL_CPIEVTENA_Msk (0x1UL << DWT_CTRL_CPIEVTENA_Pos)
+
+#define DWT_CTRL_EXCTRCENA_Pos 16
+#define DWT_CTRL_EXCTRCENA_Msk (0x1UL << DWT_CTRL_EXCTRCENA_Pos)
+
+#define DWT_CTRL_PCSAMPLENA_Pos 12
+#define DWT_CTRL_PCSAMPLENA_Msk (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)
+
+#define DWT_CTRL_SYNCTAP_Pos 10
+#define DWT_CTRL_SYNCTAP_Msk (0x3UL << DWT_CTRL_SYNCTAP_Pos)
+
+#define DWT_CTRL_CYCTAP_Pos 9
+#define DWT_CTRL_CYCTAP_Msk (0x1UL << DWT_CTRL_CYCTAP_Pos)
+
+#define DWT_CTRL_POSTINIT_Pos 5
+#define DWT_CTRL_POSTINIT_Msk (0xFUL << DWT_CTRL_POSTINIT_Pos)
+
+#define DWT_CTRL_POSTPRESET_Pos 1
+#define DWT_CTRL_POSTPRESET_Msk (0xFUL << DWT_CTRL_POSTPRESET_Pos)
+
+#define DWT_CTRL_CYCCNTENA_Pos 0
+#define DWT_CTRL_CYCCNTENA_Msk (0x1UL << DWT_CTRL_CYCCNTENA_Pos)
+
+
+#define DWT_CPICNT_CPICNT_Pos 0
+#define DWT_CPICNT_CPICNT_Msk (0xFFUL << DWT_CPICNT_CPICNT_Pos)
+
+
+#define DWT_EXCCNT_EXCCNT_Pos 0
+#define DWT_EXCCNT_EXCCNT_Msk (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)
+
+
+#define DWT_SLEEPCNT_SLEEPCNT_Pos 0
+#define DWT_SLEEPCNT_SLEEPCNT_Msk (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)
+
+
+#define DWT_LSUCNT_LSUCNT_Pos 0
+#define DWT_LSUCNT_LSUCNT_Msk (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)
+
+
+#define DWT_FOLDCNT_FOLDCNT_Pos 0
+#define DWT_FOLDCNT_FOLDCNT_Msk (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)
+
+
+#define DWT_MASK_MASK_Pos 0
+#define DWT_MASK_MASK_Msk (0x1FUL << DWT_MASK_MASK_Pos)
+
+
+#define DWT_FUNCTION_MATCHED_Pos 24
+#define DWT_FUNCTION_MATCHED_Msk (0x1UL << DWT_FUNCTION_MATCHED_Pos)
+
+#define DWT_FUNCTION_DATAVADDR1_Pos 16
+#define DWT_FUNCTION_DATAVADDR1_Msk (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)
+
+#define DWT_FUNCTION_DATAVADDR0_Pos 12
+#define DWT_FUNCTION_DATAVADDR0_Msk (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)
+
+#define DWT_FUNCTION_DATAVSIZE_Pos 10
+#define DWT_FUNCTION_DATAVSIZE_Msk (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)
+
+#define DWT_FUNCTION_LNK1ENA_Pos 9
+#define DWT_FUNCTION_LNK1ENA_Msk (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)
+
+#define DWT_FUNCTION_DATAVMATCH_Pos 8
+#define DWT_FUNCTION_DATAVMATCH_Msk (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)
+
+#define DWT_FUNCTION_CYCMATCH_Pos 7
+#define DWT_FUNCTION_CYCMATCH_Msk (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)
+
+#define DWT_FUNCTION_EMITRANGE_Pos 5
+#define DWT_FUNCTION_EMITRANGE_Msk (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)
+
+#define DWT_FUNCTION_FUNCTION_Pos 0
+#define DWT_FUNCTION_FUNCTION_Msk (0xFUL << DWT_FUNCTION_FUNCTION_Pos)
+# 919 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t SSPSR;
+  volatile uint32_t CSPSR;
+       uint32_t RESERVED0[2];
+  volatile uint32_t ACPR;
+       uint32_t RESERVED1[55];
+  volatile uint32_t SPPR;
+       uint32_t RESERVED2[131];
+  volatile uint32_t FFSR;
+  volatile uint32_t FFCR;
+  volatile uint32_t FSCR;
+       uint32_t RESERVED3[759];
+  volatile uint32_t TRIGGER;
+  volatile uint32_t FIFO0;
+  volatile uint32_t ITATBCTR2;
+       uint32_t RESERVED4[1];
+  volatile uint32_t ITATBCTR0;
+  volatile uint32_t FIFO1;
+  volatile uint32_t ITCTRL;
+       uint32_t RESERVED5[39];
+  volatile uint32_t CLAIMSET;
+  volatile uint32_t CLAIMCLR;
+       uint32_t RESERVED7[8];
+  volatile uint32_t DEVID;
+  volatile uint32_t DEVTYPE;
+} TPI_Type;
+
+
+#define TPI_ACPR_PRESCALER_Pos 0
+#define TPI_ACPR_PRESCALER_Msk (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)
+
+
+#define TPI_SPPR_TXMODE_Pos 0
+#define TPI_SPPR_TXMODE_Msk (0x3UL << TPI_SPPR_TXMODE_Pos)
+
+
+#define TPI_FFSR_FtNonStop_Pos 3
+#define TPI_FFSR_FtNonStop_Msk (0x1UL << TPI_FFSR_FtNonStop_Pos)
+
+#define TPI_FFSR_TCPresent_Pos 2
+#define TPI_FFSR_TCPresent_Msk (0x1UL << TPI_FFSR_TCPresent_Pos)
+
+#define TPI_FFSR_FtStopped_Pos 1
+#define TPI_FFSR_FtStopped_Msk (0x1UL << TPI_FFSR_FtStopped_Pos)
+
+#define TPI_FFSR_FlInProg_Pos 0
+#define TPI_FFSR_FlInProg_Msk (0x1UL << TPI_FFSR_FlInProg_Pos)
+
+
+#define TPI_FFCR_TrigIn_Pos 8
+#define TPI_FFCR_TrigIn_Msk (0x1UL << TPI_FFCR_TrigIn_Pos)
+
+#define TPI_FFCR_EnFCont_Pos 1
+#define TPI_FFCR_EnFCont_Msk (0x1UL << TPI_FFCR_EnFCont_Pos)
+
+
+#define TPI_TRIGGER_TRIGGER_Pos 0
+#define TPI_TRIGGER_TRIGGER_Msk (0x1UL << TPI_TRIGGER_TRIGGER_Pos)
+
+
+#define TPI_FIFO0_ITM_ATVALID_Pos 29
+#define TPI_FIFO0_ITM_ATVALID_Msk (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)
+
+#define TPI_FIFO0_ITM_bytecount_Pos 27
+#define TPI_FIFO0_ITM_bytecount_Msk (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)
+
+#define TPI_FIFO0_ETM_ATVALID_Pos 26
+#define TPI_FIFO0_ETM_ATVALID_Msk (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)
+
+#define TPI_FIFO0_ETM_bytecount_Pos 24
+#define TPI_FIFO0_ETM_bytecount_Msk (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)
+
+#define TPI_FIFO0_ETM2_Pos 16
+#define TPI_FIFO0_ETM2_Msk (0xFFUL << TPI_FIFO0_ETM2_Pos)
+
+#define TPI_FIFO0_ETM1_Pos 8
+#define TPI_FIFO0_ETM1_Msk (0xFFUL << TPI_FIFO0_ETM1_Pos)
+
+#define TPI_FIFO0_ETM0_Pos 0
+#define TPI_FIFO0_ETM0_Msk (0xFFUL << TPI_FIFO0_ETM0_Pos)
+
+
+#define TPI_ITATBCTR2_ATREADY_Pos 0
+#define TPI_ITATBCTR2_ATREADY_Msk (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)
+
+
+#define TPI_FIFO1_ITM_ATVALID_Pos 29
+#define TPI_FIFO1_ITM_ATVALID_Msk (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)
+
+#define TPI_FIFO1_ITM_bytecount_Pos 27
+#define TPI_FIFO1_ITM_bytecount_Msk (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)
+
+#define TPI_FIFO1_ETM_ATVALID_Pos 26
+#define TPI_FIFO1_ETM_ATVALID_Msk (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)
+
+#define TPI_FIFO1_ETM_bytecount_Pos 24
+#define TPI_FIFO1_ETM_bytecount_Msk (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)
+
+#define TPI_FIFO1_ITM2_Pos 16
+#define TPI_FIFO1_ITM2_Msk (0xFFUL << TPI_FIFO1_ITM2_Pos)
+
+#define TPI_FIFO1_ITM1_Pos 8
+#define TPI_FIFO1_ITM1_Msk (0xFFUL << TPI_FIFO1_ITM1_Pos)
+
+#define TPI_FIFO1_ITM0_Pos 0
+#define TPI_FIFO1_ITM0_Msk (0xFFUL << TPI_FIFO1_ITM0_Pos)
+
+
+#define TPI_ITATBCTR0_ATREADY_Pos 0
+#define TPI_ITATBCTR0_ATREADY_Msk (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)
+
+
+#define TPI_ITCTRL_Mode_Pos 0
+#define TPI_ITCTRL_Mode_Msk (0x1UL << TPI_ITCTRL_Mode_Pos)
+
+
+#define TPI_DEVID_NRZVALID_Pos 11
+#define TPI_DEVID_NRZVALID_Msk (0x1UL << TPI_DEVID_NRZVALID_Pos)
+
+#define TPI_DEVID_MANCVALID_Pos 10
+#define TPI_DEVID_MANCVALID_Msk (0x1UL << TPI_DEVID_MANCVALID_Pos)
+
+#define TPI_DEVID_PTINVALID_Pos 9
+#define TPI_DEVID_PTINVALID_Msk (0x1UL << TPI_DEVID_PTINVALID_Pos)
+
+#define TPI_DEVID_MinBufSz_Pos 6
+#define TPI_DEVID_MinBufSz_Msk (0x7UL << TPI_DEVID_MinBufSz_Pos)
+
+#define TPI_DEVID_AsynClkIn_Pos 5
+#define TPI_DEVID_AsynClkIn_Msk (0x1UL << TPI_DEVID_AsynClkIn_Pos)
+
+#define TPI_DEVID_NrTraceInput_Pos 0
+#define TPI_DEVID_NrTraceInput_Msk (0x1FUL << TPI_DEVID_NrTraceInput_Pos)
+
+
+#define TPI_DEVTYPE_SubType_Pos 0
+#define TPI_DEVTYPE_SubType_Msk (0xFUL << TPI_DEVTYPE_SubType_Pos)
+
+#define TPI_DEVTYPE_MajorType_Pos 4
+#define TPI_DEVTYPE_MajorType_Msk (0xFUL << TPI_DEVTYPE_MajorType_Pos)
+# 1073 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t TYPE;
+  volatile uint32_t CTRL;
+  volatile uint32_t RNR;
+  volatile uint32_t RBAR;
+  volatile uint32_t RASR;
+  volatile uint32_t RBAR_A1;
+  volatile uint32_t RASR_A1;
+  volatile uint32_t RBAR_A2;
+  volatile uint32_t RASR_A2;
+  volatile uint32_t RBAR_A3;
+  volatile uint32_t RASR_A3;
+} MPU_Type;
+
+
+#define MPU_TYPE_IREGION_Pos 16
+#define MPU_TYPE_IREGION_Msk (0xFFUL << MPU_TYPE_IREGION_Pos)
+
+#define MPU_TYPE_DREGION_Pos 8
+#define MPU_TYPE_DREGION_Msk (0xFFUL << MPU_TYPE_DREGION_Pos)
+
+#define MPU_TYPE_SEPARATE_Pos 0
+#define MPU_TYPE_SEPARATE_Msk (1UL << MPU_TYPE_SEPARATE_Pos)
+
+
+#define MPU_CTRL_PRIVDEFENA_Pos 2
+#define MPU_CTRL_PRIVDEFENA_Msk (1UL << MPU_CTRL_PRIVDEFENA_Pos)
+
+#define MPU_CTRL_HFNMIENA_Pos 1
+#define MPU_CTRL_HFNMIENA_Msk (1UL << MPU_CTRL_HFNMIENA_Pos)
+
+#define MPU_CTRL_ENABLE_Pos 0
+#define MPU_CTRL_ENABLE_Msk (1UL << MPU_CTRL_ENABLE_Pos)
+
+
+#define MPU_RNR_REGION_Pos 0
+#define MPU_RNR_REGION_Msk (0xFFUL << MPU_RNR_REGION_Pos)
+
+
+#define MPU_RBAR_ADDR_Pos 5
+#define MPU_RBAR_ADDR_Msk (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)
+
+#define MPU_RBAR_VALID_Pos 4
+#define MPU_RBAR_VALID_Msk (1UL << MPU_RBAR_VALID_Pos)
+
+#define MPU_RBAR_REGION_Pos 0
+#define MPU_RBAR_REGION_Msk (0xFUL << MPU_RBAR_REGION_Pos)
+
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = true;
+#define MPU_RASR_ATTRS_Pos 16
+#define MPU_RASR_ATTRS_Msk (0xFFFFUL << MPU_RASR_ATTRS_Pos)
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+#define MPU_RASR_XN_Pos 28
+#define MPU_RASR_XN_Msk (1UL << MPU_RASR_XN_Pos)
 
+#define MPU_RASR_AP_Pos 24
+#define MPU_RASR_AP_Msk (0x7UL << MPU_RASR_AP_Pos)
 
-  template<>
-    struct numeric_limits<int>
-    {
-      static constexpr bool is_specialized = true;
+#define MPU_RASR_TEX_Pos 19
+#define MPU_RASR_TEX_Msk (0x7UL << MPU_RASR_TEX_Pos)
 
-      static constexpr int
-      min() noexcept { return -2147483647 - 1; }
+#define MPU_RASR_S_Pos 18
+#define MPU_RASR_S_Msk (1UL << MPU_RASR_S_Pos)
 
-      static constexpr int
-      max() noexcept { return 2147483647; }
+#define MPU_RASR_C_Pos 17
+#define MPU_RASR_C_Msk (1UL << MPU_RASR_C_Pos)
 
+#define MPU_RASR_B_Pos 16
+#define MPU_RASR_B_Msk (1UL << MPU_RASR_B_Pos)
 
-      static constexpr int
-      lowest() noexcept { return min(); }
+#define MPU_RASR_SRD_Pos 8
+#define MPU_RASR_SRD_Msk (0xFFUL << MPU_RASR_SRD_Pos)
 
+#define MPU_RASR_SIZE_Pos 1
+#define MPU_RASR_SIZE_Msk (0x1FUL << MPU_RASR_SIZE_Pos)
 
-      static constexpr int digits = (sizeof(int) * 8 - ((int)(-1) < 0));
-      static constexpr int digits10 = ((sizeof(int) * 8 - ((int)(-1) < 0)) * 643L / 2136);
+#define MPU_RASR_ENABLE_Pos 0
+#define MPU_RASR_ENABLE_Msk (1UL << MPU_RASR_ENABLE_Pos)
+# 1166 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+       uint32_t RESERVED0[1];
+  volatile uint32_t FPCCR;
+  volatile uint32_t FPCAR;
+  volatile uint32_t FPDSCR;
+  volatile uint32_t MVFR0;
+  volatile uint32_t MVFR1;
+} FPU_Type;
 
-      static constexpr int max_digits10 = 0;
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define FPU_FPCCR_ASPEN_Pos 31
+#define FPU_FPCCR_ASPEN_Msk (1UL << FPU_FPCCR_ASPEN_Pos)
 
-      static constexpr int
-      epsilon() noexcept { return 0; }
+#define FPU_FPCCR_LSPEN_Pos 30
+#define FPU_FPCCR_LSPEN_Msk (1UL << FPU_FPCCR_LSPEN_Pos)
 
-      static constexpr int
-      round_error() noexcept { return 0; }
+#define FPU_FPCCR_MONRDY_Pos 8
+#define FPU_FPCCR_MONRDY_Msk (1UL << FPU_FPCCR_MONRDY_Pos)
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+#define FPU_FPCCR_BFRDY_Pos 6
+#define FPU_FPCCR_BFRDY_Msk (1UL << FPU_FPCCR_BFRDY_Pos)
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
+#define FPU_FPCCR_MMRDY_Pos 5
+#define FPU_FPCCR_MMRDY_Msk (1UL << FPU_FPCCR_MMRDY_Pos)
 
-      static constexpr int
-      infinity() noexcept { return static_cast<int>(0); }
+#define FPU_FPCCR_HFRDY_Pos 4
+#define FPU_FPCCR_HFRDY_Msk (1UL << FPU_FPCCR_HFRDY_Pos)
 
-      static constexpr int
-      quiet_NaN() noexcept { return static_cast<int>(0); }
+#define FPU_FPCCR_THREAD_Pos 3
+#define FPU_FPCCR_THREAD_Msk (1UL << FPU_FPCCR_THREAD_Pos)
 
-      static constexpr int
-      signaling_NaN() noexcept { return static_cast<int>(0); }
+#define FPU_FPCCR_USER_Pos 1
+#define FPU_FPCCR_USER_Msk (1UL << FPU_FPCCR_USER_Pos)
 
-      static constexpr int
-      denorm_min() noexcept { return static_cast<int>(0); }
+#define FPU_FPCCR_LSPACT_Pos 0
+#define FPU_FPCCR_LSPACT_Msk (1UL << FPU_FPCCR_LSPACT_Pos)
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+#define FPU_FPCAR_ADDRESS_Pos 3
+#define FPU_FPCAR_ADDRESS_Msk (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)
 
 
-  template<>
-    struct numeric_limits<unsigned int>
-    {
-      static constexpr bool is_specialized = true;
+#define FPU_FPDSCR_AHP_Pos 26
+#define FPU_FPDSCR_AHP_Msk (1UL << FPU_FPDSCR_AHP_Pos)
 
-      static constexpr unsigned int
-      min() noexcept { return 0; }
+#define FPU_FPDSCR_DN_Pos 25
+#define FPU_FPDSCR_DN_Msk (1UL << FPU_FPDSCR_DN_Pos)
 
-      static constexpr unsigned int
-      max() noexcept { return 2147483647 * 2U + 1; }
+#define FPU_FPDSCR_FZ_Pos 24
+#define FPU_FPDSCR_FZ_Msk (1UL << FPU_FPDSCR_FZ_Pos)
 
+#define FPU_FPDSCR_RMode_Pos 22
+#define FPU_FPDSCR_RMode_Msk (3UL << FPU_FPDSCR_RMode_Pos)
 
-      static constexpr unsigned int
-      lowest() noexcept { return min(); }
 
+#define FPU_MVFR0_FP_rounding_modes_Pos 28
+#define FPU_MVFR0_FP_rounding_modes_Msk (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)
 
-      static constexpr int digits
-       = (sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0)) * 643L / 2136);
+#define FPU_MVFR0_Short_vectors_Pos 24
+#define FPU_MVFR0_Short_vectors_Msk (0xFUL << FPU_MVFR0_Short_vectors_Pos)
 
-      static constexpr int max_digits10 = 0;
+#define FPU_MVFR0_Square_root_Pos 20
+#define FPU_MVFR0_Square_root_Msk (0xFUL << FPU_MVFR0_Square_root_Pos)
 
-      static constexpr bool is_signed = false;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define FPU_MVFR0_Divide_Pos 16
+#define FPU_MVFR0_Divide_Msk (0xFUL << FPU_MVFR0_Divide_Pos)
 
-      static constexpr unsigned int
-      epsilon() noexcept { return 0; }
+#define FPU_MVFR0_FP_excep_trapping_Pos 12
+#define FPU_MVFR0_FP_excep_trapping_Msk (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)
 
-      static constexpr unsigned int
-      round_error() noexcept { return 0; }
+#define FPU_MVFR0_Double_precision_Pos 8
+#define FPU_MVFR0_Double_precision_Msk (0xFUL << FPU_MVFR0_Double_precision_Pos)
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+#define FPU_MVFR0_Single_precision_Pos 4
+#define FPU_MVFR0_Single_precision_Msk (0xFUL << FPU_MVFR0_Single_precision_Pos)
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
+#define FPU_MVFR0_A_SIMD_registers_Pos 0
+#define FPU_MVFR0_A_SIMD_registers_Msk (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)
 
-      static constexpr unsigned int
-      infinity() noexcept { return static_cast<unsigned int>(0); }
 
-      static constexpr unsigned int
-      quiet_NaN() noexcept
-      { return static_cast<unsigned int>(0); }
+#define FPU_MVFR1_FP_fused_MAC_Pos 28
+#define FPU_MVFR1_FP_fused_MAC_Msk (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)
 
-      static constexpr unsigned int
-      signaling_NaN() noexcept
-      { return static_cast<unsigned int>(0); }
+#define FPU_MVFR1_FP_HPFP_Pos 24
+#define FPU_MVFR1_FP_HPFP_Msk (0xFUL << FPU_MVFR1_FP_HPFP_Pos)
 
-      static constexpr unsigned int
-      denorm_min() noexcept
-      { return static_cast<unsigned int>(0); }
+#define FPU_MVFR1_D_NaN_mode_Pos 4
+#define FPU_MVFR1_D_NaN_mode_Msk (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = true;
+#define FPU_MVFR1_FtZ_mode_Pos 0
+#define FPU_MVFR1_FtZ_mode_Msk (0xFUL << FPU_MVFR1_FtZ_mode_Pos)
+# 1271 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+typedef struct
+{
+  volatile uint32_t DHCSR;
+  volatile uint32_t DCRSR;
+  volatile uint32_t DCRDR;
+  volatile uint32_t DEMCR;
+} CoreDebug_Type;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
 
+#define CoreDebug_DHCSR_DBGKEY_Pos 16
+#define CoreDebug_DHCSR_DBGKEY_Msk (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)
 
-  template<>
-    struct numeric_limits<long>
-    {
-      static constexpr bool is_specialized = true;
+#define CoreDebug_DHCSR_S_RESET_ST_Pos 25
+#define CoreDebug_DHCSR_S_RESET_ST_Msk (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)
 
-      static constexpr long
-      min() noexcept { return -2147483647L - 1; }
+#define CoreDebug_DHCSR_S_RETIRE_ST_Pos 24
+#define CoreDebug_DHCSR_S_RETIRE_ST_Msk (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)
 
-      static constexpr long
-      max() noexcept { return 2147483647L; }
+#define CoreDebug_DHCSR_S_LOCKUP_Pos 19
+#define CoreDebug_DHCSR_S_LOCKUP_Msk (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)
 
+#define CoreDebug_DHCSR_S_SLEEP_Pos 18
+#define CoreDebug_DHCSR_S_SLEEP_Msk (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)
 
-      static constexpr long
-      lowest() noexcept { return min(); }
+#define CoreDebug_DHCSR_S_HALT_Pos 17
+#define CoreDebug_DHCSR_S_HALT_Msk (1UL << CoreDebug_DHCSR_S_HALT_Pos)
 
+#define CoreDebug_DHCSR_S_REGRDY_Pos 16
+#define CoreDebug_DHCSR_S_REGRDY_Msk (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)
 
-      static constexpr int digits = (sizeof(long) * 8 - ((long)(-1) < 0));
-      static constexpr int digits10 = ((sizeof(long) * 8 - ((long)(-1) < 0)) * 643L / 2136);
+#define CoreDebug_DHCSR_C_SNAPSTALL_Pos 5
+#define CoreDebug_DHCSR_C_SNAPSTALL_Msk (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)
 
-      static constexpr int max_digits10 = 0;
+#define CoreDebug_DHCSR_C_MASKINTS_Pos 3
+#define CoreDebug_DHCSR_C_MASKINTS_Msk (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define CoreDebug_DHCSR_C_STEP_Pos 2
+#define CoreDebug_DHCSR_C_STEP_Msk (1UL << CoreDebug_DHCSR_C_STEP_Pos)
 
-      static constexpr long
-      epsilon() noexcept { return 0; }
+#define CoreDebug_DHCSR_C_HALT_Pos 1
+#define CoreDebug_DHCSR_C_HALT_Msk (1UL << CoreDebug_DHCSR_C_HALT_Pos)
 
-      static constexpr long
-      round_error() noexcept { return 0; }
+#define CoreDebug_DHCSR_C_DEBUGEN_Pos 0
+#define CoreDebug_DHCSR_C_DEBUGEN_Msk (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
+#define CoreDebug_DCRSR_REGWnR_Pos 16
+#define CoreDebug_DCRSR_REGWnR_Msk (1UL << CoreDebug_DCRSR_REGWnR_Pos)
 
-      static constexpr long
-      infinity() noexcept { return static_cast<long>(0); }
+#define CoreDebug_DCRSR_REGSEL_Pos 0
+#define CoreDebug_DCRSR_REGSEL_Msk (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)
 
-      static constexpr long
-      quiet_NaN() noexcept { return static_cast<long>(0); }
 
-      static constexpr long
-      signaling_NaN() noexcept { return static_cast<long>(0); }
+#define CoreDebug_DEMCR_TRCENA_Pos 24
+#define CoreDebug_DEMCR_TRCENA_Msk (1UL << CoreDebug_DEMCR_TRCENA_Pos)
 
-      static constexpr long
-      denorm_min() noexcept { return static_cast<long>(0); }
+#define CoreDebug_DEMCR_MON_REQ_Pos 19
+#define CoreDebug_DEMCR_MON_REQ_Msk (1UL << CoreDebug_DEMCR_MON_REQ_Pos)
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
+#define CoreDebug_DEMCR_MON_STEP_Pos 18
+#define CoreDebug_DEMCR_MON_STEP_Msk (1UL << CoreDebug_DEMCR_MON_STEP_Pos)
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+#define CoreDebug_DEMCR_MON_PEND_Pos 17
+#define CoreDebug_DEMCR_MON_PEND_Msk (1UL << CoreDebug_DEMCR_MON_PEND_Pos)
 
+#define CoreDebug_DEMCR_MON_EN_Pos 16
+#define CoreDebug_DEMCR_MON_EN_Msk (1UL << CoreDebug_DEMCR_MON_EN_Pos)
 
-  template<>
-    struct numeric_limits<unsigned long>
-    {
-      static constexpr bool is_specialized = true;
+#define CoreDebug_DEMCR_VC_HARDERR_Pos 10
+#define CoreDebug_DEMCR_VC_HARDERR_Msk (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)
 
-      static constexpr unsigned long
-      min() noexcept { return 0; }
+#define CoreDebug_DEMCR_VC_INTERR_Pos 9
+#define CoreDebug_DEMCR_VC_INTERR_Msk (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)
 
-      static constexpr unsigned long
-      max() noexcept { return 2147483647L * 2UL + 1; }
+#define CoreDebug_DEMCR_VC_BUSERR_Pos 8
+#define CoreDebug_DEMCR_VC_BUSERR_Msk (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)
 
+#define CoreDebug_DEMCR_VC_STATERR_Pos 7
+#define CoreDebug_DEMCR_VC_STATERR_Msk (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)
 
-      static constexpr unsigned long
-      lowest() noexcept { return min(); }
+#define CoreDebug_DEMCR_VC_CHKERR_Pos 6
+#define CoreDebug_DEMCR_VC_CHKERR_Msk (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)
 
+#define CoreDebug_DEMCR_VC_NOCPERR_Pos 5
+#define CoreDebug_DEMCR_VC_NOCPERR_Msk (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)
 
-      static constexpr int digits
-       = (sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0)) * 643L / 2136);
+#define CoreDebug_DEMCR_VC_MMERR_Pos 4
+#define CoreDebug_DEMCR_VC_MMERR_Msk (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)
 
-      static constexpr int max_digits10 = 0;
+#define CoreDebug_DEMCR_VC_CORERESET_Pos 0
+#define CoreDebug_DEMCR_VC_CORERESET_Msk (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)
+# 1373 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+#define SCS_BASE (0xE000E000UL)
+#define ITM_BASE (0xE0000000UL)
+#define DWT_BASE (0xE0001000UL)
+#define TPI_BASE (0xE0040000UL)
+#define CoreDebug_BASE (0xE000EDF0UL)
+#define SysTick_BASE (SCS_BASE + 0x0010UL)
+#define NVIC_BASE (SCS_BASE + 0x0100UL)
+#define SCB_BASE (SCS_BASE + 0x0D00UL)
 
-      static constexpr bool is_signed = false;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+#define SCnSCB ((SCnSCB_Type *) SCS_BASE )
+#define SCB ((SCB_Type *) SCB_BASE )
+#define SysTick ((SysTick_Type *) SysTick_BASE )
+#define NVIC ((NVIC_Type *) NVIC_BASE )
+#define ITM ((ITM_Type *) ITM_BASE )
+#define DWT ((DWT_Type *) DWT_BASE )
+#define TPI ((TPI_Type *) TPI_BASE )
+#define CoreDebug ((CoreDebug_Type *) CoreDebug_BASE)
 
-      static constexpr unsigned long
-      epsilon() noexcept { return 0; }
 
-      static constexpr unsigned long
-      round_error() noexcept { return 0; }
+#define MPU_BASE (SCS_BASE + 0x0D90UL)
+#define MPU ((MPU_Type *) MPU_BASE )
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr unsigned long
-      infinity() noexcept
-      { return static_cast<unsigned long>(0); }
+#define FPU_BASE (SCS_BASE + 0x0F30UL)
+#define FPU ((FPU_Type *) FPU_BASE )
+# 1435 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
+{
+  uint32_t reg_value;
+  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);
 
-      static constexpr unsigned long
-      quiet_NaN() noexcept
-      { return static_cast<unsigned long>(0); }
+  reg_value = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR;
+  reg_value &= ~((0xFFFFUL << 16) | (7UL << 8));
+  reg_value = (reg_value |
+                ((uint32_t)0x5FA << 16) |
+                (PriorityGroupTmp << 8));
+  ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR = reg_value;
+}
+# 1455 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t NVIC_GetPriorityGrouping(void)
+{
+  return ((((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR & (7UL << 8)) >> 8);
+}
+# 1467 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_EnableIRQ(IRQn_Type IRQn)
+{
 
-      static constexpr unsigned long
-      signaling_NaN() noexcept
-      { return static_cast<unsigned long>(0); }
+  ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F));
+}
+# 1480 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_DisableIRQ(IRQn_Type IRQn)
+{
+  ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
+}
+# 1496 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
+{
+  return((uint32_t) ((((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));
+}
+# 1508 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_SetPendingIRQ(IRQn_Type IRQn)
+{
+  ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
+}
+# 1520 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
+{
+  ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
+}
+# 1535 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t NVIC_GetActive(IRQn_Type IRQn)
+{
+  return((uint32_t)((((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));
+}
+# 1550 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
+{
+  if(IRQn < 0) {
+    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - 4)) & 0xff); }
+  else {
+    ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->IP[(uint32_t)(IRQn)] = ((priority << (8 - 4)) & 0xff); }
+}
+# 1570 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t NVIC_GetPriority(IRQn_Type IRQn)
+{
 
-      static constexpr unsigned long
-      denorm_min() noexcept
-      { return static_cast<unsigned long>(0); }
+  if(IRQn < 0) {
+    return((uint32_t)(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - 4))); }
+  else {
+    return((uint32_t)(((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->IP[(uint32_t)(IRQn)] >> (8 - 4))); }
+}
+# 1592 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
+{
+  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);
+  uint32_t PreemptPriorityBits;
+  uint32_t SubPriorityBits;
+
+  PreemptPriorityBits = ((7 - PriorityGroupTmp) > 4) ? 4 : 7 - PriorityGroupTmp;
+  SubPriorityBits = ((PriorityGroupTmp + 4) < 7) ? 0 : PriorityGroupTmp - 7 + 4;
+
+  return (
+           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
+           ((SubPriority & ((1 << (SubPriorityBits )) - 1)))
+         );
+}
+# 1620 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPreemptPriority, uint32_t* pSubPriority)
+{
+  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);
+  uint32_t PreemptPriorityBits;
+  uint32_t SubPriorityBits;
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = true;
+  PreemptPriorityBits = ((7 - PriorityGroupTmp) > 4) ? 4 : 7 - PriorityGroupTmp;
+  SubPriorityBits = ((PriorityGroupTmp + 4) < 7) ? 0 : PriorityGroupTmp - 7 + 4;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
+  *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
+  *pSubPriority = (Priority ) & ((1 << (SubPriorityBits )) - 1);
+}
 
 
-  template<>
-    struct numeric_limits<long long>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr long long
-      min() noexcept { return -9223372036854775807LL - 1; }
 
-      static constexpr long long
-      max() noexcept { return 9223372036854775807LL; }
 
 
-      static constexpr long long
-      lowest() noexcept { return min(); }
+static inline void NVIC_SystemReset(void)
+{
+  __DSB();
+
+  ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR = ((0x5FA << 16) |
+                 (((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR & (7UL << 8)) |
+                 (1UL << 2));
+  __DSB();
+  while(1);
+}
+# 1677 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t SysTick_Config(uint32_t ticks)
+{
+  if ((ticks - 1) > (0xFFFFFFUL << 0)) return (1);
+
+  ((SysTick_Type *) ((0xE000E000UL) + 0x0010UL) )->LOAD = ticks - 1;
+  NVIC_SetPriority (SysTick_IRQn, (1<<4) - 1);
+  ((SysTick_Type *) ((0xE000E000UL) + 0x0010UL) )->VAL = 0;
+  ((SysTick_Type *) ((0xE000E000UL) + 0x0010UL) )->CTRL = (1UL << 2) |
+                   (1UL << 1) |
+                   (1UL << 0);
+  return (0);
+}
+# 1703 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+extern volatile int32_t ITM_RxBuffer;
+#define ITM_RXBUFFER_EMPTY 0x5AA55AA5
+# 1717 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline uint32_t ITM_SendChar (uint32_t ch)
+{
+  if ((((ITM_Type *) (0xE0000000UL) )->TCR & (1UL << 0)) &&
+      (((ITM_Type *) (0xE0000000UL) )->TER & (1UL << 0) ) )
+  {
+    while (((ITM_Type *) (0xE0000000UL) )->PORT[0].u32 == 0);
+    ((ITM_Type *) (0xE0000000UL) )->PORT[0].u8 = (uint8_t) ch;
+  }
+  return (ch);
+}
+# 1736 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline int32_t ITM_ReceiveChar (void) {
+  int32_t ch = -1;
 
+  if (ITM_RxBuffer != 0x5AA55AA5) {
+    ch = ITM_RxBuffer;
+    ITM_RxBuffer = 0x5AA55AA5;
+  }
 
-      static constexpr int digits
-       = (sizeof(long long) * 8 - ((long long)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(long long) * 8 - ((long long)(-1) < 0)) * 643L / 2136);
+  return (ch);
+}
+# 1755 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+static inline int32_t ITM_CheckChar (void) {
 
-      static constexpr int max_digits10 = 0;
+  if (ITM_RxBuffer == 0x5AA55AA5) {
+    return (0);
+  } else {
+    return (1);
+  }
+}
+# 1771 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Include/core_cm4.h"
+}
+# 262 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h" 1
+# 40 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
+#define __SYSTEM_STM32F4XX_H 
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
 
-      static constexpr long long
-      epsilon() noexcept { return 0; }
+ extern "C" {
+# 59 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
+extern uint32_t SystemCoreClock;
+# 86 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
+extern void SystemInit(void);
+extern void SystemCoreClockUpdate(void);
 
-      static constexpr long long
-      round_error() noexcept { return 0; }
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
 
-      static constexpr long long
-      infinity() noexcept { return static_cast<long long>(0); }
 
-      static constexpr long long
-      quiet_NaN() noexcept { return static_cast<long long>(0); }
+}
+# 263 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h" 2
 
-      static constexpr long long
-      signaling_NaN() noexcept
-      { return static_cast<long long>(0); }
 
-      static constexpr long long
-      denorm_min() noexcept { return static_cast<long long>(0); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
 
 
-  template<>
-    struct numeric_limits<unsigned long long>
-    {
-      static constexpr bool is_specialized = true;
+typedef int32_t s32;
+typedef int16_t s16;
+typedef int8_t s8;
 
-      static constexpr unsigned long long
-      min() noexcept { return 0; }
+typedef const int32_t sc32;
+typedef const int16_t sc16;
+typedef const int8_t sc8;
 
-      static constexpr unsigned long long
-      max() noexcept { return 9223372036854775807LL * 2ULL + 1; }
+typedef volatile int32_t vs32;
+typedef volatile int16_t vs16;
+typedef volatile int8_t vs8;
 
+typedef volatile int32_t vsc32;
+typedef volatile int16_t vsc16;
+typedef volatile int8_t vsc8;
 
-      static constexpr unsigned long long
-      lowest() noexcept { return min(); }
+typedef uint32_t u32;
+typedef uint16_t u16;
+typedef uint8_t u8;
 
+typedef const uint32_t uc32;
+typedef const uint16_t uc16;
+typedef const uint8_t uc8;
 
-      static constexpr int digits
-       = (sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0));
-      static constexpr int digits10
-       = ((sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0)) * 643L / 2136);
+typedef volatile uint32_t vu32;
+typedef volatile uint16_t vu16;
+typedef volatile uint8_t vu8;
 
-      static constexpr int max_digits10 = 0;
+typedef volatile uint32_t vuc32;
+typedef volatile uint16_t vuc16;
+typedef volatile uint8_t vuc8;
 
-      static constexpr bool is_signed = false;
-      static constexpr bool is_integer = true;
-      static constexpr bool is_exact = true;
-      static constexpr int radix = 2;
+typedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus;
 
-      static constexpr unsigned long long
-      epsilon() noexcept { return 0; }
+typedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;
+#define IS_FUNCTIONAL_STATE(STATE) (((STATE) == DISABLE) || ((STATE) == ENABLE))
 
-      static constexpr unsigned long long
-      round_error() noexcept { return 0; }
+typedef enum {ERROR = 0, SUCCESS = !ERROR} ErrorStatus;
+# 320 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+typedef struct
+{
+  volatile uint32_t SR;
+  volatile uint32_t CR1;
+  volatile uint32_t CR2;
+  volatile uint32_t SMPR1;
+  volatile uint32_t SMPR2;
+  volatile uint32_t JOFR1;
+  volatile uint32_t JOFR2;
+  volatile uint32_t JOFR3;
+  volatile uint32_t JOFR4;
+  volatile uint32_t HTR;
+  volatile uint32_t LTR;
+  volatile uint32_t SQR1;
+  volatile uint32_t SQR2;
+  volatile uint32_t SQR3;
+  volatile uint32_t JSQR;
+  volatile uint32_t JDR1;
+  volatile uint32_t JDR2;
+  volatile uint32_t JDR3;
+  volatile uint32_t JDR4;
+  volatile uint32_t DR;
+} ADC_TypeDef;
 
-      static constexpr int min_exponent = 0;
-      static constexpr int min_exponent10 = 0;
-      static constexpr int max_exponent = 0;
-      static constexpr int max_exponent10 = 0;
+typedef struct
+{
+  volatile uint32_t CSR;
+  volatile uint32_t CCR;
+  volatile uint32_t CDR;
 
-      static constexpr bool has_infinity = false;
-      static constexpr bool has_quiet_NaN = false;
-      static constexpr bool has_signaling_NaN = false;
-      static constexpr float_denorm_style has_denorm
-       = denorm_absent;
-      static constexpr bool has_denorm_loss = false;
+} ADC_Common_TypeDef;
 
-      static constexpr unsigned long long
-      infinity() noexcept
-      { return static_cast<unsigned long long>(0); }
 
-      static constexpr unsigned long long
-      quiet_NaN() noexcept
-      { return static_cast<unsigned long long>(0); }
 
-      static constexpr unsigned long long
-      signaling_NaN() noexcept
-      { return static_cast<unsigned long long>(0); }
 
-      static constexpr unsigned long long
-      denorm_min() noexcept
-      { return static_cast<unsigned long long>(0); }
 
-      static constexpr bool is_iec559 = false;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = true;
 
-      static constexpr bool traps = true;
-      static constexpr bool tinyness_before = false;
-      static constexpr float_round_style round_style
-       = round_toward_zero;
-    };
-# 1552 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/limits" 3
-  template<>
-    struct numeric_limits<float>
-    {
-      static constexpr bool is_specialized = true;
+typedef struct
+{
+  volatile uint32_t TIR;
+  volatile uint32_t TDTR;
+  volatile uint32_t TDLR;
+  volatile uint32_t TDHR;
+} CAN_TxMailBox_TypeDef;
 
-      static constexpr float
-      min() noexcept { return 1.1754943508222875e-38F; }
 
-      static constexpr float
-      max() noexcept { return 3.4028234663852886e+38F; }
 
 
-      static constexpr float
-      lowest() noexcept { return -3.4028234663852886e+38F; }
 
+typedef struct
+{
+  volatile uint32_t RIR;
+  volatile uint32_t RDTR;
+  volatile uint32_t RDLR;
+  volatile uint32_t RDHR;
+} CAN_FIFOMailBox_TypeDef;
 
-      static constexpr int digits = 24;
-      static constexpr int digits10 = 6;
 
-      static constexpr int max_digits10
-  = (2 + (24) * 643L / 2136);
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = false;
-      static constexpr bool is_exact = false;
-      static constexpr int radix = 2;
 
-      static constexpr float
-      epsilon() noexcept { return 1.1920928955078125e-7F; }
 
-      static constexpr float
-      round_error() noexcept { return 0.5F; }
+typedef struct
+{
+  volatile uint32_t FR1;
+  volatile uint32_t FR2;
+} CAN_FilterRegister_TypeDef;
 
-      static constexpr int min_exponent = (-125);
-      static constexpr int min_exponent10 = (-37);
-      static constexpr int max_exponent = 128;
-      static constexpr int max_exponent10 = 38;
 
-      static constexpr bool has_infinity = 1;
-      static constexpr bool has_quiet_NaN = 1;
-      static constexpr bool has_signaling_NaN = has_quiet_NaN;
-      static constexpr float_denorm_style has_denorm
- = bool(1) ? denorm_present : denorm_absent;
-      static constexpr bool has_denorm_loss
-       = false;
 
-      static constexpr float
-      infinity() noexcept { return __builtin_huge_valf(); }
 
-      static constexpr float
-      quiet_NaN() noexcept { return __builtin_nanf(""); }
 
-      static constexpr float
-      signaling_NaN() noexcept { return __builtin_nansf(""); }
+typedef struct
+{
+  volatile uint32_t MCR;
+  volatile uint32_t MSR;
+  volatile uint32_t TSR;
+  volatile uint32_t RF0R;
+  volatile uint32_t RF1R;
+  volatile uint32_t IER;
+  volatile uint32_t ESR;
+  volatile uint32_t BTR;
+  uint32_t RESERVED0[88];
+  CAN_TxMailBox_TypeDef sTxMailBox[3];
+  CAN_FIFOMailBox_TypeDef sFIFOMailBox[2];
+  uint32_t RESERVED1[12];
+  volatile uint32_t FMR;
+  volatile uint32_t FM1R;
+  uint32_t RESERVED2;
+  volatile uint32_t FS1R;
+  uint32_t RESERVED3;
+  volatile uint32_t FFA1R;
+  uint32_t RESERVED4;
+  volatile uint32_t FA1R;
+  uint32_t RESERVED5[8];
+  CAN_FilterRegister_TypeDef sFilterRegister[28];
+} CAN_TypeDef;
 
-      static constexpr float
-      denorm_min() noexcept { return 1.4012984643248171e-45F; }
 
-      static constexpr bool is_iec559
- = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
-      static constexpr bool traps = false;
-      static constexpr bool tinyness_before
-       = false;
-      static constexpr float_round_style round_style
-       = round_to_nearest;
-    };
 
-#undef __glibcxx_float_has_denorm_loss
-#undef __glibcxx_float_traps
-#undef __glibcxx_float_tinyness_before
 
+typedef struct
+{
+  volatile uint32_t DR;
+  volatile uint8_t IDR;
+  uint8_t RESERVED0;
+  uint16_t RESERVED1;
+  volatile uint32_t CR;
+} CRC_TypeDef;
 
-  template<>
-    struct numeric_limits<double>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr double
-      min() noexcept { return double(2.2250738585072014e-308L); }
 
-      static constexpr double
-      max() noexcept { return double(1.7976931348623157e+308L); }
 
 
-      static constexpr double
-      lowest() noexcept { return -double(1.7976931348623157e+308L); }
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t SWTRIGR;
+  volatile uint32_t DHR12R1;
+  volatile uint32_t DHR12L1;
+  volatile uint32_t DHR8R1;
+  volatile uint32_t DHR12R2;
+  volatile uint32_t DHR12L2;
+  volatile uint32_t DHR8R2;
+  volatile uint32_t DHR12RD;
+  volatile uint32_t DHR12LD;
+  volatile uint32_t DHR8RD;
+  volatile uint32_t DOR1;
+  volatile uint32_t DOR2;
+  volatile uint32_t SR;
+} DAC_TypeDef;
 
 
-      static constexpr int digits = 53;
-      static constexpr int digits10 = 15;
 
-      static constexpr int max_digits10
-  = (2 + (53) * 643L / 2136);
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = false;
-      static constexpr bool is_exact = false;
-      static constexpr int radix = 2;
 
-      static constexpr double
-      epsilon() noexcept { return double(2.2204460492503131e-16L); }
+typedef struct
+{
+  volatile uint32_t IDCODE;
+  volatile uint32_t CR;
+  volatile uint32_t APB1FZ;
+  volatile uint32_t APB2FZ;
+}DBGMCU_TypeDef;
 
-      static constexpr double
-      round_error() noexcept { return 0.5; }
 
-      static constexpr int min_exponent = (-1021);
-      static constexpr int min_exponent10 = (-307);
-      static constexpr int max_exponent = 1024;
-      static constexpr int max_exponent10 = 308;
 
-      static constexpr bool has_infinity = 1;
-      static constexpr bool has_quiet_NaN = 1;
-      static constexpr bool has_signaling_NaN = has_quiet_NaN;
-      static constexpr float_denorm_style has_denorm
- = bool(1) ? denorm_present : denorm_absent;
-      static constexpr bool has_denorm_loss
-        = false;
 
-      static constexpr double
-      infinity() noexcept { return __builtin_huge_val(); }
 
-      static constexpr double
-      quiet_NaN() noexcept { return __builtin_nan(""); }
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t SR;
+  volatile uint32_t RISR;
+  volatile uint32_t IER;
+  volatile uint32_t MISR;
+  volatile uint32_t ICR;
+  volatile uint32_t ESCR;
+  volatile uint32_t ESUR;
+  volatile uint32_t CWSTRTR;
+  volatile uint32_t CWSIZER;
+  volatile uint32_t DR;
+} DCMI_TypeDef;
 
-      static constexpr double
-      signaling_NaN() noexcept { return __builtin_nans(""); }
 
-      static constexpr double
-      denorm_min() noexcept { return double(4.9406564584124654e-324L); }
 
-      static constexpr bool is_iec559
- = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
-      static constexpr bool traps = false;
-      static constexpr bool tinyness_before
-       = false;
-      static constexpr float_round_style round_style
-       = round_to_nearest;
-    };
 
-#undef __glibcxx_double_has_denorm_loss
-#undef __glibcxx_double_traps
-#undef __glibcxx_double_tinyness_before
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t NDTR;
+  volatile uint32_t PAR;
+  volatile uint32_t M0AR;
+  volatile uint32_t M1AR;
+  volatile uint32_t FCR;
+} DMA_Stream_TypeDef;
 
+typedef struct
+{
+  volatile uint32_t LISR;
+  volatile uint32_t HISR;
+  volatile uint32_t LIFCR;
+  volatile uint32_t HIFCR;
+} DMA_TypeDef;
 
-  template<>
-    struct numeric_limits<long double>
-    {
-      static constexpr bool is_specialized = true;
 
-      static constexpr long double
-      min() noexcept { return 2.2250738585072014e-308L; }
 
-      static constexpr long double
-      max() noexcept { return 1.7976931348623157e+308L; }
 
 
-      static constexpr long double
-      lowest() noexcept { return -1.7976931348623157e+308L; }
+typedef struct
+{
+  volatile uint32_t MACCR;
+  volatile uint32_t MACFFR;
+  volatile uint32_t MACHTHR;
+  volatile uint32_t MACHTLR;
+  volatile uint32_t MACMIIAR;
+  volatile uint32_t MACMIIDR;
+  volatile uint32_t MACFCR;
+  volatile uint32_t MACVLANTR;
+  uint32_t RESERVED0[2];
+  volatile uint32_t MACRWUFFR;
+  volatile uint32_t MACPMTCSR;
+  uint32_t RESERVED1[2];
+  volatile uint32_t MACSR;
+  volatile uint32_t MACIMR;
+  volatile uint32_t MACA0HR;
+  volatile uint32_t MACA0LR;
+  volatile uint32_t MACA1HR;
+  volatile uint32_t MACA1LR;
+  volatile uint32_t MACA2HR;
+  volatile uint32_t MACA2LR;
+  volatile uint32_t MACA3HR;
+  volatile uint32_t MACA3LR;
+  uint32_t RESERVED2[40];
+  volatile uint32_t MMCCR;
+  volatile uint32_t MMCRIR;
+  volatile uint32_t MMCTIR;
+  volatile uint32_t MMCRIMR;
+  volatile uint32_t MMCTIMR;
+  uint32_t RESERVED3[14];
+  volatile uint32_t MMCTGFSCCR;
+  volatile uint32_t MMCTGFMSCCR;
+  uint32_t RESERVED4[5];
+  volatile uint32_t MMCTGFCR;
+  uint32_t RESERVED5[10];
+  volatile uint32_t MMCRFCECR;
+  volatile uint32_t MMCRFAECR;
+  uint32_t RESERVED6[10];
+  volatile uint32_t MMCRGUFCR;
+  uint32_t RESERVED7[334];
+  volatile uint32_t PTPTSCR;
+  volatile uint32_t PTPSSIR;
+  volatile uint32_t PTPTSHR;
+  volatile uint32_t PTPTSLR;
+  volatile uint32_t PTPTSHUR;
+  volatile uint32_t PTPTSLUR;
+  volatile uint32_t PTPTSAR;
+  volatile uint32_t PTPTTHR;
+  volatile uint32_t PTPTTLR;
+  volatile uint32_t RESERVED8;
+  volatile uint32_t PTPTSSR;
+  uint32_t RESERVED9[565];
+  volatile uint32_t DMABMR;
+  volatile uint32_t DMATPDR;
+  volatile uint32_t DMARPDR;
+  volatile uint32_t DMARDLAR;
+  volatile uint32_t DMATDLAR;
+  volatile uint32_t DMASR;
+  volatile uint32_t DMAOMR;
+  volatile uint32_t DMAIER;
+  volatile uint32_t DMAMFBOCR;
+  volatile uint32_t DMARSWTR;
+  uint32_t RESERVED10[8];
+  volatile uint32_t DMACHTDR;
+  volatile uint32_t DMACHRDR;
+  volatile uint32_t DMACHTBAR;
+  volatile uint32_t DMACHRBAR;
+} ETH_TypeDef;
 
 
-      static constexpr int digits = 53;
-      static constexpr int digits10 = 15;
 
-      static constexpr int max_digits10
-  = (2 + (53) * 643L / 2136);
 
-      static constexpr bool is_signed = true;
-      static constexpr bool is_integer = false;
-      static constexpr bool is_exact = false;
-      static constexpr int radix = 2;
 
-      static constexpr long double
-      epsilon() noexcept { return 2.2204460492503131e-16L; }
+typedef struct
+{
+  volatile uint32_t IMR;
+  volatile uint32_t EMR;
+  volatile uint32_t RTSR;
+  volatile uint32_t FTSR;
+  volatile uint32_t SWIER;
+  volatile uint32_t PR;
+} EXTI_TypeDef;
 
-      static constexpr long double
-      round_error() noexcept { return 0.5L; }
 
-      static constexpr int min_exponent = (-1021);
-      static constexpr int min_exponent10 = (-307);
-      static constexpr int max_exponent = 1024;
-      static constexpr int max_exponent10 = 308;
 
-      static constexpr bool has_infinity = 1;
-      static constexpr bool has_quiet_NaN = 1;
-      static constexpr bool has_signaling_NaN = has_quiet_NaN;
-      static constexpr float_denorm_style has_denorm
- = bool(1) ? denorm_present : denorm_absent;
-      static constexpr bool has_denorm_loss
- = false;
 
-      static constexpr long double
-      infinity() noexcept { return __builtin_huge_vall(); }
 
-      static constexpr long double
-      quiet_NaN() noexcept { return __builtin_nanl(""); }
+typedef struct
+{
+  volatile uint32_t ACR;
+  volatile uint32_t KEYR;
+  volatile uint32_t OPTKEYR;
+  volatile uint32_t SR;
+  volatile uint32_t CR;
+  volatile uint32_t OPTCR;
+  volatile uint32_t OPTCR1;
+} FLASH_TypeDef;
 
-      static constexpr long double
-      signaling_NaN() noexcept { return __builtin_nansl(""); }
 
-      static constexpr long double
-      denorm_min() noexcept { return 4.9406564584124654e-324L; }
 
-      static constexpr bool is_iec559
- = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
-      static constexpr bool is_bounded = true;
-      static constexpr bool is_modulo = false;
 
-      static constexpr bool traps = false;
-      static constexpr bool tinyness_before =
-      false;
-      static constexpr float_round_style round_style =
-            round_to_nearest;
-    };
 
-#undef __glibcxx_long_double_has_denorm_loss
-#undef __glibcxx_long_double_traps
-#undef __glibcxx_long_double_tinyness_before
+typedef struct
+{
+  volatile uint32_t BTCR[8];
+} FSMC_Bank1_TypeDef;
 
 
-}
 
-#undef __glibcxx_signed
-#undef __glibcxx_min
-#undef __glibcxx_max
-#undef __glibcxx_digits
-#undef __glibcxx_digits10
-#undef __glibcxx_max_digits10
-# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h"
-#define __INCLUDE_STDINT_H 
-# 49 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/types.h" 1
-# 41 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/types.h"
-#define __ARCH_ARM_INCLUDE_TYPES_H 
-# 68 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/types.h"
-typedef signed char _int8_t;
-typedef unsigned char _uint8_t;
 
-typedef signed short _int16_t;
-typedef unsigned short _uint16_t;
 
-typedef signed int _int32_t;
-typedef unsigned int _uint32_t;
+typedef struct
+{
+  volatile uint32_t BWTR[7];
+} FSMC_Bank1E_TypeDef;
 
-typedef signed long long _int64_t;
-typedef unsigned long long _uint64_t;
-#define __INT64_DEFINED 
 
 
 
-typedef signed int _intptr_t;
-typedef unsigned int _uintptr_t;
-# 93 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/types.h"
-typedef unsigned char irqstate_t;
-# 50 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h"
-#define __INCLUDE_LIMITS_H 
-# 47 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/limits.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/limits.h"
-#define __ARCH_ARM_INCLUDE_LIMITS_H 
-# 47 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/arch/limits.h"
-#define CHAR_BIT 8
-#define SCHAR_MIN (-SCHAR_MAX - 1)
-#define SCHAR_MAX 127
-#define UCHAR_MAX 255
 
+typedef struct
+{
+  volatile uint32_t PCR2;
+  volatile uint32_t SR2;
+  volatile uint32_t PMEM2;
+  volatile uint32_t PATT2;
+  uint32_t RESERVED0;
+  volatile uint32_t ECCR2;
+} FSMC_Bank2_TypeDef;
 
 
 
-#define CHAR_MIN 0
-#define CHAR_MAX UCHAR_MAX
 
 
+typedef struct
+{
+  volatile uint32_t PCR3;
+  volatile uint32_t SR3;
+  volatile uint32_t PMEM3;
+  volatile uint32_t PATT3;
+  uint32_t RESERVED0;
+  volatile uint32_t ECCR3;
+} FSMC_Bank3_TypeDef;
 
 
 
-#define SHRT_MIN (-SHRT_MAX - 1)
-#define SHRT_MAX 32767
-#define USHRT_MAX 65535U
 
-#define INT_MIN (-INT_MAX - 1)
-#define INT_MAX 2147483647
-#define UINT_MAX 4294967295U
 
+typedef struct
+{
+  volatile uint32_t PCR4;
+  volatile uint32_t SR4;
+  volatile uint32_t PMEM4;
+  volatile uint32_t PATT4;
+  volatile uint32_t PIO4;
+} FSMC_Bank4_TypeDef;
 
 
-#define LONG_MIN (-LONG_MAX - 1)
-#define LONG_MAX 2147483647L
-#define ULONG_MAX 4294967295UL
 
-#define LLONG_MIN (-LLONG_MAX - 1)
-#define LLONG_MAX 9223372036854775807LL
-#define ULLONG_MAX 18446744073709551615ULL
 
 
+typedef struct
+{
+  volatile uint32_t MODER;
+  volatile uint32_t OTYPER;
+  volatile uint32_t OSPEEDR;
+  volatile uint32_t PUPDR;
+  volatile uint32_t IDR;
+  volatile uint32_t ODR;
+  volatile uint16_t BSRRL;
+  volatile uint16_t BSRRH;
+  volatile uint32_t LCKR;
+  volatile uint32_t AFR[2];
+} GPIO_TypeDef;
 
-#define PTR_MIN (-PTR_MAX - 1)
-#define PTR_MAX 2147483647
-#define UPTR_MAX 4294967295U
-# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h" 2
-# 65 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h"
-#define CONFIG_PATH_MAX (4*CONFIG_NAME_MAX + 1)
-# 116 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h"
-#define _POSIX_ARG_MAX 4096
-#define _POSIX_CHILD_MAX 6
-#define _POSIX_LINK_MAX 8
-#define _POSIX_MAX_CANON 255
-#define _POSIX_MAX_INPUT 255
-#define _POSIX_NAME_MAX CONFIG_NAME_MAX
-#define _POSIX_NGROUPS_MAX 0
-#define _POSIX_OPEN_MAX CONFIG_NFILE_DESCRIPTORS
-#define _POSIX_PATH_MAX CONFIG_PATH_MAX
-#define _POSIX_PIPE_BUF 512
-#define _POSIX_SSIZE_MAX INT_MAX
-#define _POSIX_STREAM_MAX CONFIG_NFILE_STREAMS
-#define _POSIX_TZNAME_MAX 3
 
 
 
-#define _POSIX_RTSIG_MAX 31
-#define _POSIX_SIGQUEUE_MAX 32
-# 148 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/limits.h"
-#define _POSIX_DELAYTIMER_MAX 32
-#define _POSIX_TIMER_MAX 32
 
+typedef struct
+{
+  volatile uint32_t MEMRMP;
+  volatile uint32_t PMC;
+  volatile uint32_t EXTICR[4];
+  uint32_t RESERVED[2];
+  volatile uint32_t CMPCR;
+} SYSCFG_TypeDef;
 
-#define _POSIX_CLOCKRES_MIN ((CONFIG_MSEC_PER_TICK)*1000000)
 
 
 
 
+typedef struct
+{
+  volatile uint16_t CR1;
+  uint16_t RESERVED0;
+  volatile uint16_t CR2;
+  uint16_t RESERVED1;
+  volatile uint16_t OAR1;
+  uint16_t RESERVED2;
+  volatile uint16_t OAR2;
+  uint16_t RESERVED3;
+  volatile uint16_t DR;
+  uint16_t RESERVED4;
+  volatile uint16_t SR1;
+  uint16_t RESERVED5;
+  volatile uint16_t SR2;
+  uint16_t RESERVED6;
+  volatile uint16_t CCR;
+  uint16_t RESERVED7;
+  volatile uint16_t TRISE;
+  uint16_t RESERVED8;
+  volatile uint16_t FLTR;
+  uint16_t RESERVED9;
+} I2C_TypeDef;
 
 
-#define _POSIX_AIO_LISTIO_MAX 2
-#define _POSIX_AIO_MAX 1
 
 
 
-#define _POSIX_MQ_OPEN_MAX 8
-#define _POSIX_MQ_PRIO_MAX UCHAR_MAX
+typedef struct
+{
+  volatile uint32_t KR;
+  volatile uint32_t PR;
+  volatile uint32_t RLR;
+  volatile uint32_t SR;
+} IWDG_TypeDef;
 
 
 
-#define _POSIX_SEM_NSEMS_MAX INT_MAX
-#define _POSIX_SEM_VALUE_MAX 0x7fff
 
 
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t CSR;
+} PWR_TypeDef;
 
 
 
-#define ARG_MAX _POSIX_ARG_MAX
-#define CHILD_MAX _POSIX_CHILD_MAX
-#define LINK_MAX _POSIX_LINK_MAX
-#define MAX_CANON _POSIX_MAX_CANON
-#define MAX_INPUT _POSIX_MAX_INPUT
-#define NAME_MAX _POSIX_NAME_MAX
-#define NGROUPS_MAX _POSIX_NGROUPS_MAX
-#define OPEN_MAX _POSIX_OPEN_MAX
-#define PATH_MAX _POSIX_PATH_MAX
-#define PIPE_BUF _POSIX_PIPE_BUF
-#define SSIZE_MAX _POSIX_SSIZE_MAX
-#define STREAM_MAX _POSIX_STREAM_MAX
-#define TZNAME_MAX _POSIX_TZNAME_MAX
 
-#define RTSIG_MAX _POSIX_RTSIG_MAX
-#define SIGQUEUE_MAX _POSIX_SIGQUEUE_MAX
 
-#define DELAYTIMER_MAX _POSIX_DELAYTIMER_MAX
-#define TIMER_MAX _POSIX_TIMER_MAX
-#define CLOCKRES_MIN _POSIX_CLOCKRES_MIN
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t PLLCFGR;
+  volatile uint32_t CFGR;
+  volatile uint32_t CIR;
+  volatile uint32_t AHB1RSTR;
+  volatile uint32_t AHB2RSTR;
+  volatile uint32_t AHB3RSTR;
+  uint32_t RESERVED0;
+  volatile uint32_t APB1RSTR;
+  volatile uint32_t APB2RSTR;
+  uint32_t RESERVED1[2];
+  volatile uint32_t AHB1ENR;
+  volatile uint32_t AHB2ENR;
+  volatile uint32_t AHB3ENR;
+  uint32_t RESERVED2;
+  volatile uint32_t APB1ENR;
+  volatile uint32_t APB2ENR;
+  uint32_t RESERVED3[2];
+  volatile uint32_t AHB1LPENR;
+  volatile uint32_t AHB2LPENR;
+  volatile uint32_t AHB3LPENR;
+  uint32_t RESERVED4;
+  volatile uint32_t APB1LPENR;
+  volatile uint32_t APB2LPENR;
+  uint32_t RESERVED5[2];
+  volatile uint32_t BDCR;
+  volatile uint32_t CSR;
+  uint32_t RESERVED6[2];
+  volatile uint32_t SSCGR;
+  volatile uint32_t PLLI2SCFGR;
 
 
 
-#define AIO_LISTIO_MAX _POSIX_AIO_LISTIO_MAX
-#define AIO_MAX _POSIX_AIO_MAX
 
 
 
-#define MQ_OPEN_MAX _POSIX_MQ_OPEN_MAX
-#define MQ_PRIO_MAX _POSIX_MQ_PRIO_MAX
+} RCC_TypeDef;
 
 
 
-#define SEM_NSEMS_MAX _POSIX_SEM_NSEMS_MAX
-#define SEM_VALUE_MAX _POSIX_SEM_VALUE_MAX
-# 51 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h" 2
 
 
+typedef struct
+{
+  volatile uint32_t TR;
+  volatile uint32_t DR;
+  volatile uint32_t CR;
+  volatile uint32_t ISR;
+  volatile uint32_t PRER;
+  volatile uint32_t WUTR;
+  volatile uint32_t CALIBR;
+  volatile uint32_t ALRMAR;
+  volatile uint32_t ALRMBR;
+  volatile uint32_t WPR;
+  volatile uint32_t SSR;
+  volatile uint32_t SHIFTR;
+  volatile uint32_t TSTR;
+  volatile uint32_t TSDR;
+  volatile uint32_t TSSSR;
+  volatile uint32_t CALR;
+  volatile uint32_t TAFCR;
+  volatile uint32_t ALRMASSR;
+  volatile uint32_t ALRMBSSR;
+  uint32_t RESERVED7;
+  volatile uint32_t BKP0R;
+  volatile uint32_t BKP1R;
+  volatile uint32_t BKP2R;
+  volatile uint32_t BKP3R;
+  volatile uint32_t BKP4R;
+  volatile uint32_t BKP5R;
+  volatile uint32_t BKP6R;
+  volatile uint32_t BKP7R;
+  volatile uint32_t BKP8R;
+  volatile uint32_t BKP9R;
+  volatile uint32_t BKP10R;
+  volatile uint32_t BKP11R;
+  volatile uint32_t BKP12R;
+  volatile uint32_t BKP13R;
+  volatile uint32_t BKP14R;
+  volatile uint32_t BKP15R;
+  volatile uint32_t BKP16R;
+  volatile uint32_t BKP17R;
+  volatile uint32_t BKP18R;
+  volatile uint32_t BKP19R;
+} RTC_TypeDef;
 
 
 
 
 
-#define INT8_MIN (-INT8_MAX - 1)
-#define INT8_MAX 127
-#define UINT8_MAX 255
+typedef struct
+{
+  volatile uint32_t POWER;
+  volatile uint32_t CLKCR;
+  volatile uint32_t ARG;
+  volatile uint32_t CMD;
+  volatile uint32_t RESPCMD;
+  volatile uint32_t RESP1;
+  volatile uint32_t RESP2;
+  volatile uint32_t RESP3;
+  volatile uint32_t RESP4;
+  volatile uint32_t DTIMER;
+  volatile uint32_t DLEN;
+  volatile uint32_t DCTRL;
+  volatile uint32_t DCOUNT;
+  volatile uint32_t STA;
+  volatile uint32_t ICR;
+  volatile uint32_t MASK;
+  uint32_t RESERVED0[2];
+  volatile uint32_t FIFOCNT;
+  uint32_t RESERVED1[13];
+  volatile uint32_t FIFO;
+} SDIO_TypeDef;
 
-#define INT16_MIN (-INT16_MAX - 1)
-#define INT16_MAX 32767
-#define UINT16_MAX 65535u
 
 
 
 
+typedef struct
+{
+  volatile uint16_t CR1;
+  uint16_t RESERVED0;
+  volatile uint16_t CR2;
+  uint16_t RESERVED1;
+  volatile uint16_t SR;
+  uint16_t RESERVED2;
+  volatile uint16_t DR;
+  uint16_t RESERVED3;
+  volatile uint16_t CRCPR;
+  uint16_t RESERVED4;
+  volatile uint16_t RXCRCR;
+  uint16_t RESERVED5;
+  volatile uint16_t TXCRCR;
+  uint16_t RESERVED6;
+  volatile uint16_t I2SCFGR;
+  uint16_t RESERVED7;
+  volatile uint16_t I2SPR;
+  uint16_t RESERVED8;
+} SPI_TypeDef;
 
 
 
-#define INT32_MIN (-INT32_MAX - 1)
-#define INT32_MAX 2147483647
-#define UINT32_MAX 4294967295u
 
 
-#define INT64_MIN (-INT64_MAX - 1ll)
-#define INT64_MAX 9223372036854775807ll
-#define UINT64_MAX 18446744073709551615ull
+typedef struct
+{
+  volatile uint16_t CR1;
+  uint16_t RESERVED0;
+  volatile uint16_t CR2;
+  uint16_t RESERVED1;
+  volatile uint16_t SMCR;
+  uint16_t RESERVED2;
+  volatile uint16_t DIER;
+  uint16_t RESERVED3;
+  volatile uint16_t SR;
+  uint16_t RESERVED4;
+  volatile uint16_t EGR;
+  uint16_t RESERVED5;
+  volatile uint16_t CCMR1;
+  uint16_t RESERVED6;
+  volatile uint16_t CCMR2;
+  uint16_t RESERVED7;
+  volatile uint16_t CCER;
+  uint16_t RESERVED8;
+  volatile uint32_t CNT;
+  volatile uint16_t PSC;
+  uint16_t RESERVED9;
+  volatile uint32_t ARR;
+  volatile uint16_t RCR;
+  uint16_t RESERVED10;
+  volatile uint32_t CCR1;
+  volatile uint32_t CCR2;
+  volatile uint32_t CCR3;
+  volatile uint32_t CCR4;
+  volatile uint16_t BDTR;
+  uint16_t RESERVED11;
+  volatile uint16_t DCR;
+  uint16_t RESERVED12;
+  volatile uint16_t DMAR;
+  uint16_t RESERVED13;
+  volatile uint16_t OR;
+  uint16_t RESERVED14;
+} TIM_TypeDef;
 
 
 
 
-#define INT_LEAST8_MIN INT8_MIN
-#define INT_LEAST8_MAX INT8_MAX
-#define UINT_LEAST8_MAX UINT8_MAX
 
-#define INT_LEAST16_MIN INT16_MIN
-#define INT_LEAST16_MAX INT16_MAX
-#define UINT_LEAST16_MAX UINT16_MAX
+typedef struct
+{
+  volatile uint16_t SR;
+  uint16_t RESERVED0;
+  volatile uint16_t DR;
+  uint16_t RESERVED1;
+  volatile uint16_t BRR;
+  uint16_t RESERVED2;
+  volatile uint16_t CR1;
+  uint16_t RESERVED3;
+  volatile uint16_t CR2;
+  uint16_t RESERVED4;
+  volatile uint16_t CR3;
+  uint16_t RESERVED5;
+  volatile uint16_t GTPR;
+  uint16_t RESERVED6;
+} USART_TypeDef;
 
 
 
 
 
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t CFR;
+  volatile uint32_t SR;
+} WWDG_TypeDef;
 
 
-#define INT_LEAST32_MIN INT32_MIN
-#define INT_LEAST32_MAX INT32_MAX
-#define UINT_LEAST32_MAX UINT32_MAX
 
 
-#define INT_LEAST64_MIN INT64_MIN
-#define INT_LEAST64_MAX INT64_MAX
-#define UINT_LEAST64_MAX UINT64_MAX
 
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t SR;
+  volatile uint32_t DR;
+  volatile uint32_t DOUT;
+  volatile uint32_t DMACR;
+  volatile uint32_t IMSCR;
+  volatile uint32_t RISR;
+  volatile uint32_t MISR;
+  volatile uint32_t K0LR;
+  volatile uint32_t K0RR;
+  volatile uint32_t K1LR;
+  volatile uint32_t K1RR;
+  volatile uint32_t K2LR;
+  volatile uint32_t K2RR;
+  volatile uint32_t K3LR;
+  volatile uint32_t K3RR;
+  volatile uint32_t IV0LR;
+  volatile uint32_t IV0RR;
+  volatile uint32_t IV1LR;
+  volatile uint32_t IV1RR;
+  volatile uint32_t CSGCMCCM0R;
+  volatile uint32_t CSGCMCCM1R;
+  volatile uint32_t CSGCMCCM2R;
+  volatile uint32_t CSGCMCCM3R;
+  volatile uint32_t CSGCMCCM4R;
+  volatile uint32_t CSGCMCCM5R;
+  volatile uint32_t CSGCMCCM6R;
+  volatile uint32_t CSGCMCCM7R;
+  volatile uint32_t CSGCM0R;
+  volatile uint32_t CSGCM1R;
+  volatile uint32_t CSGCM2R;
+  volatile uint32_t CSGCM3R;
+  volatile uint32_t CSGCM4R;
+  volatile uint32_t CSGCM5R;
+  volatile uint32_t CSGCM6R;
+  volatile uint32_t CSGCM7R;
+} CRYP_TypeDef;
 
 
 
-#define INT_FAST8_MIN INT8_MIN
-#define INT_FAST8_MAX INT8_MAX
-#define UINT_FAST8_MAX UINT8_MAX
 
-#define INT_FAST16_MIN INT16_MIN
-#define INT_FAST16_MAX INT16_MAX
-#define UINT_FAST16_MAX UINT16_MAX
 
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t DIN;
+  volatile uint32_t STR;
+  volatile uint32_t HR[5];
+  volatile uint32_t IMR;
+  volatile uint32_t SR;
+       uint32_t RESERVED[52];
+  volatile uint32_t CSR[54];
+} HASH_TypeDef;
 
 
 
 
 
+typedef struct
+{
+  volatile uint32_t HR[8];
+} HASH_DIGEST_TypeDef;
 
-#define INT_FAST32_MIN INT32_MIN
-#define INT_FAST32_MAX INT32_MAX
-#define UINT_FAST32_MAX UINT32_MAX
 
 
-#define INT_FAST64_MIN INT64_MIN
-#define INT_FAST64_MAX INT64_MAX
-#define UINT_FAST64_MAX UINT64_MAX
 
 
+typedef struct
+{
+  volatile uint32_t CR;
+  volatile uint32_t SR;
+  volatile uint32_t DR;
+} RNG_TypeDef;
+# 1058 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define FLASH_BASE ((uint32_t)0x08000000)
+#define CCMDATARAM_BASE ((uint32_t)0x10000000)
+#define SRAM1_BASE ((uint32_t)0x20000000)
+#define SRAM2_BASE ((uint32_t)0x2001C000)
+#define SRAM3_BASE ((uint32_t)0x20020000)
+#define PERIPH_BASE ((uint32_t)0x40000000)
+#define BKPSRAM_BASE ((uint32_t)0x40024000)
+#define FSMC_R_BASE ((uint32_t)0xA0000000)
+
+#define CCMDATARAM_BB_BASE ((uint32_t)0x12000000)
+#define SRAM1_BB_BASE ((uint32_t)0x22000000)
+#define SRAM2_BB_BASE ((uint32_t)0x2201C000)
+#define SRAM3_BB_BASE ((uint32_t)0x22020000)
+#define PERIPH_BB_BASE ((uint32_t)0x42000000)
+#define BKPSRAM_BB_BASE ((uint32_t)0x42024000)
+
+
+#define SRAM_BASE SRAM1_BASE
+#define SRAM_BB_BASE SRAM1_BB_BASE
+
+
+#define APB1PERIPH_BASE PERIPH_BASE
+#define APB2PERIPH_BASE (PERIPH_BASE + 0x00010000)
+#define AHB1PERIPH_BASE (PERIPH_BASE + 0x00020000)
+#define AHB2PERIPH_BASE (PERIPH_BASE + 0x10000000)
+
+
+#define TIM2_BASE (APB1PERIPH_BASE + 0x0000)
+#define TIM3_BASE (APB1PERIPH_BASE + 0x0400)
+#define TIM4_BASE (APB1PERIPH_BASE + 0x0800)
+#define TIM5_BASE (APB1PERIPH_BASE + 0x0C00)
+#define TIM6_BASE (APB1PERIPH_BASE + 0x1000)
+#define TIM7_BASE (APB1PERIPH_BASE + 0x1400)
+#define TIM12_BASE (APB1PERIPH_BASE + 0x1800)
+#define TIM13_BASE (APB1PERIPH_BASE + 0x1C00)
+#define TIM14_BASE (APB1PERIPH_BASE + 0x2000)
+#define RTC_BASE (APB1PERIPH_BASE + 0x2800)
+#define WWDG_BASE (APB1PERIPH_BASE + 0x2C00)
+#define IWDG_BASE (APB1PERIPH_BASE + 0x3000)
+#define I2S2ext_BASE (APB1PERIPH_BASE + 0x3400)
+#define SPI2_BASE (APB1PERIPH_BASE + 0x3800)
+#define SPI3_BASE (APB1PERIPH_BASE + 0x3C00)
+#define I2S3ext_BASE (APB1PERIPH_BASE + 0x4000)
+#define USART2_BASE (APB1PERIPH_BASE + 0x4400)
+#define USART3_BASE (APB1PERIPH_BASE + 0x4800)
+#define UART4_BASE (APB1PERIPH_BASE + 0x4C00)
+#define UART5_BASE (APB1PERIPH_BASE + 0x5000)
+#define I2C1_BASE (APB1PERIPH_BASE + 0x5400)
+#define I2C2_BASE (APB1PERIPH_BASE + 0x5800)
+#define I2C3_BASE (APB1PERIPH_BASE + 0x5C00)
+#define CAN1_BASE (APB1PERIPH_BASE + 0x6400)
+#define CAN2_BASE (APB1PERIPH_BASE + 0x6800)
+#define PWR_BASE (APB1PERIPH_BASE + 0x7000)
+#define DAC_BASE (APB1PERIPH_BASE + 0x7400)
+#define UART7_BASE (APB1PERIPH_BASE + 0x7800)
+#define UART8_BASE (APB1PERIPH_BASE + 0x7C00)
+
+
+#define TIM1_BASE (APB2PERIPH_BASE + 0x0000)
+#define TIM8_BASE (APB2PERIPH_BASE + 0x0400)
+#define USART1_BASE (APB2PERIPH_BASE + 0x1000)
+#define USART6_BASE (APB2PERIPH_BASE + 0x1400)
+#define ADC1_BASE (APB2PERIPH_BASE + 0x2000)
+#define ADC2_BASE (APB2PERIPH_BASE + 0x2100)
+#define ADC3_BASE (APB2PERIPH_BASE + 0x2200)
+#define ADC_BASE (APB2PERIPH_BASE + 0x2300)
+#define SDIO_BASE (APB2PERIPH_BASE + 0x2C00)
+#define SPI1_BASE (APB2PERIPH_BASE + 0x3000)
+#define SPI4_BASE (APB2PERIPH_BASE + 0x3400)
+#define SYSCFG_BASE (APB2PERIPH_BASE + 0x3800)
+#define EXTI_BASE (APB2PERIPH_BASE + 0x3C00)
+#define TIM9_BASE (APB2PERIPH_BASE + 0x4000)
+#define TIM10_BASE (APB2PERIPH_BASE + 0x4400)
+#define TIM11_BASE (APB2PERIPH_BASE + 0x4800)
+#define SPI5_BASE (APB2PERIPH_BASE + 0x5000)
+#define SPI6_BASE (APB2PERIPH_BASE + 0x5400)
+
+
+#define GPIOA_BASE (AHB1PERIPH_BASE + 0x0000)
+#define GPIOB_BASE (AHB1PERIPH_BASE + 0x0400)
+#define GPIOC_BASE (AHB1PERIPH_BASE + 0x0800)
+#define GPIOD_BASE (AHB1PERIPH_BASE + 0x0C00)
+#define GPIOE_BASE (AHB1PERIPH_BASE + 0x1000)
+#define GPIOF_BASE (AHB1PERIPH_BASE + 0x1400)
+#define GPIOG_BASE (AHB1PERIPH_BASE + 0x1800)
+#define GPIOH_BASE (AHB1PERIPH_BASE + 0x1C00)
+#define GPIOI_BASE (AHB1PERIPH_BASE + 0x2000)
+
+#define CRC_BASE (AHB1PERIPH_BASE + 0x3000)
+#define RCC_BASE (AHB1PERIPH_BASE + 0x3800)
+#define FLASH_R_BASE (AHB1PERIPH_BASE + 0x3C00)
+#define DMA1_BASE (AHB1PERIPH_BASE + 0x6000)
+#define DMA1_Stream0_BASE (DMA1_BASE + 0x010)
+#define DMA1_Stream1_BASE (DMA1_BASE + 0x028)
+#define DMA1_Stream2_BASE (DMA1_BASE + 0x040)
+#define DMA1_Stream3_BASE (DMA1_BASE + 0x058)
+#define DMA1_Stream4_BASE (DMA1_BASE + 0x070)
+#define DMA1_Stream5_BASE (DMA1_BASE + 0x088)
+#define DMA1_Stream6_BASE (DMA1_BASE + 0x0A0)
+#define DMA1_Stream7_BASE (DMA1_BASE + 0x0B8)
+#define DMA2_BASE (AHB1PERIPH_BASE + 0x6400)
+#define DMA2_Stream0_BASE (DMA2_BASE + 0x010)
+#define DMA2_Stream1_BASE (DMA2_BASE + 0x028)
+#define DMA2_Stream2_BASE (DMA2_BASE + 0x040)
+#define DMA2_Stream3_BASE (DMA2_BASE + 0x058)
+#define DMA2_Stream4_BASE (DMA2_BASE + 0x070)
+#define DMA2_Stream5_BASE (DMA2_BASE + 0x088)
+#define DMA2_Stream6_BASE (DMA2_BASE + 0x0A0)
+#define DMA2_Stream7_BASE (DMA2_BASE + 0x0B8)
+#define ETH_BASE (AHB1PERIPH_BASE + 0x8000)
+#define ETH_MAC_BASE (ETH_BASE)
+#define ETH_MMC_BASE (ETH_BASE + 0x0100)
+#define ETH_PTP_BASE (ETH_BASE + 0x0700)
+#define ETH_DMA_BASE (ETH_BASE + 0x1000)
+
+
+#define DCMI_BASE (AHB2PERIPH_BASE + 0x50000)
+#define CRYP_BASE (AHB2PERIPH_BASE + 0x60000)
+#define HASH_BASE (AHB2PERIPH_BASE + 0x60400)
+#define HASH_DIGEST_BASE (AHB2PERIPH_BASE + 0x60710)
+#define RNG_BASE (AHB2PERIPH_BASE + 0x60800)
+
+
+#define FSMC_Bank1_R_BASE (FSMC_R_BASE + 0x0000)
+#define FSMC_Bank1E_R_BASE (FSMC_R_BASE + 0x0104)
+#define FSMC_Bank2_R_BASE (FSMC_R_BASE + 0x0060)
+#define FSMC_Bank3_R_BASE (FSMC_R_BASE + 0x0080)
+#define FSMC_Bank4_R_BASE (FSMC_R_BASE + 0x00A0)
+
+
+#define DBGMCU_BASE ((uint32_t )0xE0042000)
+# 1197 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define TIM2 ((TIM_TypeDef *) TIM2_BASE)
+#define TIM3 ((TIM_TypeDef *) TIM3_BASE)
+#define TIM4 ((TIM_TypeDef *) TIM4_BASE)
+#define TIM5 ((TIM_TypeDef *) TIM5_BASE)
+#define TIM6 ((TIM_TypeDef *) TIM6_BASE)
+#define TIM7 ((TIM_TypeDef *) TIM7_BASE)
+#define TIM12 ((TIM_TypeDef *) TIM12_BASE)
+#define TIM13 ((TIM_TypeDef *) TIM13_BASE)
+#define TIM14 ((TIM_TypeDef *) TIM14_BASE)
+#define RTC ((RTC_TypeDef *) RTC_BASE)
+#define WWDG ((WWDG_TypeDef *) WWDG_BASE)
+#define IWDG ((IWDG_TypeDef *) IWDG_BASE)
+#define I2S2ext ((SPI_TypeDef *) I2S2ext_BASE)
+#define SPI2 ((SPI_TypeDef *) SPI2_BASE)
+#define SPI3 ((SPI_TypeDef *) SPI3_BASE)
+#define I2S3ext ((SPI_TypeDef *) I2S3ext_BASE)
+#define USART2 ((USART_TypeDef *) USART2_BASE)
+#define USART3 ((USART_TypeDef *) USART3_BASE)
+#define UART4 ((USART_TypeDef *) UART4_BASE)
+#define UART5 ((USART_TypeDef *) UART5_BASE)
+#define I2C1 ((I2C_TypeDef *) I2C1_BASE)
+#define I2C2 ((I2C_TypeDef *) I2C2_BASE)
+#define I2C3 ((I2C_TypeDef *) I2C3_BASE)
+#define CAN1 ((CAN_TypeDef *) CAN1_BASE)
+#define CAN2 ((CAN_TypeDef *) CAN2_BASE)
+#define PWR ((PWR_TypeDef *) PWR_BASE)
+#define DAC ((DAC_TypeDef *) DAC_BASE)
+#define UART7 ((USART_TypeDef *) UART7_BASE)
+#define UART8 ((USART_TypeDef *) UART8_BASE)
+#define TIM1 ((TIM_TypeDef *) TIM1_BASE)
+#define TIM8 ((TIM_TypeDef *) TIM8_BASE)
+#define USART1 ((USART_TypeDef *) USART1_BASE)
+#define USART6 ((USART_TypeDef *) USART6_BASE)
+#define ADC ((ADC_Common_TypeDef *) ADC_BASE)
+#define ADC1 ((ADC_TypeDef *) ADC1_BASE)
+#define ADC2 ((ADC_TypeDef *) ADC2_BASE)
+#define ADC3 ((ADC_TypeDef *) ADC3_BASE)
+#define SDIO ((SDIO_TypeDef *) SDIO_BASE)
+#define SPI1 ((SPI_TypeDef *) SPI1_BASE)
+#define SPI4 ((SPI_TypeDef *) SPI4_BASE)
+#define SYSCFG ((SYSCFG_TypeDef *) SYSCFG_BASE)
+#define EXTI ((EXTI_TypeDef *) EXTI_BASE)
+#define TIM9 ((TIM_TypeDef *) TIM9_BASE)
+#define TIM10 ((TIM_TypeDef *) TIM10_BASE)
+#define TIM11 ((TIM_TypeDef *) TIM11_BASE)
+#define SPI5 ((SPI_TypeDef *) SPI5_BASE)
+#define SPI6 ((SPI_TypeDef *) SPI6_BASE)
+
+#define GPIOA ((GPIO_TypeDef *) GPIOA_BASE)
+#define GPIOB ((GPIO_TypeDef *) GPIOB_BASE)
+#define GPIOC ((GPIO_TypeDef *) GPIOC_BASE)
+#define GPIOD ((GPIO_TypeDef *) GPIOD_BASE)
+#define GPIOE ((GPIO_TypeDef *) GPIOE_BASE)
+#define GPIOF ((GPIO_TypeDef *) GPIOF_BASE)
+#define GPIOG ((GPIO_TypeDef *) GPIOG_BASE)
+#define GPIOH ((GPIO_TypeDef *) GPIOH_BASE)
+#define GPIOI ((GPIO_TypeDef *) GPIOI_BASE)
+
+#define CRC ((CRC_TypeDef *) CRC_BASE)
+#define RCC ((RCC_TypeDef *) RCC_BASE)
+#define FLASH ((FLASH_TypeDef *) FLASH_R_BASE)
+#define DMA1 ((DMA_TypeDef *) DMA1_BASE)
+#define DMA1_Stream0 ((DMA_Stream_TypeDef *) DMA1_Stream0_BASE)
+#define DMA1_Stream1 ((DMA_Stream_TypeDef *) DMA1_Stream1_BASE)
+#define DMA1_Stream2 ((DMA_Stream_TypeDef *) DMA1_Stream2_BASE)
+#define DMA1_Stream3 ((DMA_Stream_TypeDef *) DMA1_Stream3_BASE)
+#define DMA1_Stream4 ((DMA_Stream_TypeDef *) DMA1_Stream4_BASE)
+#define DMA1_Stream5 ((DMA_Stream_TypeDef *) DMA1_Stream5_BASE)
+#define DMA1_Stream6 ((DMA_Stream_TypeDef *) DMA1_Stream6_BASE)
+#define DMA1_Stream7 ((DMA_Stream_TypeDef *) DMA1_Stream7_BASE)
+#define DMA2 ((DMA_TypeDef *) DMA2_BASE)
+#define DMA2_Stream0 ((DMA_Stream_TypeDef *) DMA2_Stream0_BASE)
+#define DMA2_Stream1 ((DMA_Stream_TypeDef *) DMA2_Stream1_BASE)
+#define DMA2_Stream2 ((DMA_Stream_TypeDef *) DMA2_Stream2_BASE)
+#define DMA2_Stream3 ((DMA_Stream_TypeDef *) DMA2_Stream3_BASE)
+#define DMA2_Stream4 ((DMA_Stream_TypeDef *) DMA2_Stream4_BASE)
+#define DMA2_Stream5 ((DMA_Stream_TypeDef *) DMA2_Stream5_BASE)
+#define DMA2_Stream6 ((DMA_Stream_TypeDef *) DMA2_Stream6_BASE)
+#define DMA2_Stream7 ((DMA_Stream_TypeDef *) DMA2_Stream7_BASE)
+#define ETH ((ETH_TypeDef *) ETH_BASE)
+#define DCMI ((DCMI_TypeDef *) DCMI_BASE)
+#define CRYP ((CRYP_TypeDef *) CRYP_BASE)
+#define HASH ((HASH_TypeDef *) HASH_BASE)
+#define HASH_DIGEST ((HASH_DIGEST_TypeDef *) HASH_DIGEST_BASE)
+#define RNG ((RNG_TypeDef *) RNG_BASE)
+#define FSMC_Bank1 ((FSMC_Bank1_TypeDef *) FSMC_Bank1_R_BASE)
+#define FSMC_Bank1E ((FSMC_Bank1E_TypeDef *) FSMC_Bank1E_R_BASE)
+#define FSMC_Bank2 ((FSMC_Bank2_TypeDef *) FSMC_Bank2_R_BASE)
+#define FSMC_Bank3 ((FSMC_Bank3_TypeDef *) FSMC_Bank3_R_BASE)
+#define FSMC_Bank4 ((FSMC_Bank4_TypeDef *) FSMC_Bank4_R_BASE)
+#define DBGMCU ((DBGMCU_TypeDef *) DBGMCU_BASE)
+# 1311 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define ADC_SR_AWD ((uint8_t)0x01)
+#define ADC_SR_EOC ((uint8_t)0x02)
+#define ADC_SR_JEOC ((uint8_t)0x04)
+#define ADC_SR_JSTRT ((uint8_t)0x08)
+#define ADC_SR_STRT ((uint8_t)0x10)
+#define ADC_SR_OVR ((uint8_t)0x20)
+
+
+#define ADC_CR1_AWDCH ((uint32_t)0x0000001F)
+#define ADC_CR1_AWDCH_0 ((uint32_t)0x00000001)
+#define ADC_CR1_AWDCH_1 ((uint32_t)0x00000002)
+#define ADC_CR1_AWDCH_2 ((uint32_t)0x00000004)
+#define ADC_CR1_AWDCH_3 ((uint32_t)0x00000008)
+#define ADC_CR1_AWDCH_4 ((uint32_t)0x00000010)
+#define ADC_CR1_EOCIE ((uint32_t)0x00000020)
+#define ADC_CR1_AWDIE ((uint32_t)0x00000040)
+#define ADC_CR1_JEOCIE ((uint32_t)0x00000080)
+#define ADC_CR1_SCAN ((uint32_t)0x00000100)
+#define ADC_CR1_AWDSGL ((uint32_t)0x00000200)
+#define ADC_CR1_JAUTO ((uint32_t)0x00000400)
+#define ADC_CR1_DISCEN ((uint32_t)0x00000800)
+#define ADC_CR1_JDISCEN ((uint32_t)0x00001000)
+#define ADC_CR1_DISCNUM ((uint32_t)0x0000E000)
+#define ADC_CR1_DISCNUM_0 ((uint32_t)0x00002000)
+#define ADC_CR1_DISCNUM_1 ((uint32_t)0x00004000)
+#define ADC_CR1_DISCNUM_2 ((uint32_t)0x00008000)
+#define ADC_CR1_JAWDEN ((uint32_t)0x00400000)
+#define ADC_CR1_AWDEN ((uint32_t)0x00800000)
+#define ADC_CR1_RES ((uint32_t)0x03000000)
+#define ADC_CR1_RES_0 ((uint32_t)0x01000000)
+#define ADC_CR1_RES_1 ((uint32_t)0x02000000)
+#define ADC_CR1_OVRIE ((uint32_t)0x04000000)
+
+
+#define ADC_CR2_ADON ((uint32_t)0x00000001)
+#define ADC_CR2_CONT ((uint32_t)0x00000002)
+#define ADC_CR2_DMA ((uint32_t)0x00000100)
+#define ADC_CR2_DDS ((uint32_t)0x00000200)
+#define ADC_CR2_EOCS ((uint32_t)0x00000400)
+#define ADC_CR2_ALIGN ((uint32_t)0x00000800)
+#define ADC_CR2_JEXTSEL ((uint32_t)0x000F0000)
+#define ADC_CR2_JEXTSEL_0 ((uint32_t)0x00010000)
+#define ADC_CR2_JEXTSEL_1 ((uint32_t)0x00020000)
+#define ADC_CR2_JEXTSEL_2 ((uint32_t)0x00040000)
+#define ADC_CR2_JEXTSEL_3 ((uint32_t)0x00080000)
+#define ADC_CR2_JEXTEN ((uint32_t)0x00300000)
+#define ADC_CR2_JEXTEN_0 ((uint32_t)0x00100000)
+#define ADC_CR2_JEXTEN_1 ((uint32_t)0x00200000)
+#define ADC_CR2_JSWSTART ((uint32_t)0x00400000)
+#define ADC_CR2_EXTSEL ((uint32_t)0x0F000000)
+#define ADC_CR2_EXTSEL_0 ((uint32_t)0x01000000)
+#define ADC_CR2_EXTSEL_1 ((uint32_t)0x02000000)
+#define ADC_CR2_EXTSEL_2 ((uint32_t)0x04000000)
+#define ADC_CR2_EXTSEL_3 ((uint32_t)0x08000000)
+#define ADC_CR2_EXTEN ((uint32_t)0x30000000)
+#define ADC_CR2_EXTEN_0 ((uint32_t)0x10000000)
+#define ADC_CR2_EXTEN_1 ((uint32_t)0x20000000)
+#define ADC_CR2_SWSTART ((uint32_t)0x40000000)
+
+
+#define ADC_SMPR1_SMP10 ((uint32_t)0x00000007)
+#define ADC_SMPR1_SMP10_0 ((uint32_t)0x00000001)
+#define ADC_SMPR1_SMP10_1 ((uint32_t)0x00000002)
+#define ADC_SMPR1_SMP10_2 ((uint32_t)0x00000004)
+#define ADC_SMPR1_SMP11 ((uint32_t)0x00000038)
+#define ADC_SMPR1_SMP11_0 ((uint32_t)0x00000008)
+#define ADC_SMPR1_SMP11_1 ((uint32_t)0x00000010)
+#define ADC_SMPR1_SMP11_2 ((uint32_t)0x00000020)
+#define ADC_SMPR1_SMP12 ((uint32_t)0x000001C0)
+#define ADC_SMPR1_SMP12_0 ((uint32_t)0x00000040)
+#define ADC_SMPR1_SMP12_1 ((uint32_t)0x00000080)
+#define ADC_SMPR1_SMP12_2 ((uint32_t)0x00000100)
+#define ADC_SMPR1_SMP13 ((uint32_t)0x00000E00)
+#define ADC_SMPR1_SMP13_0 ((uint32_t)0x00000200)
+#define ADC_SMPR1_SMP13_1 ((uint32_t)0x00000400)
+#define ADC_SMPR1_SMP13_2 ((uint32_t)0x00000800)
+#define ADC_SMPR1_SMP14 ((uint32_t)0x00007000)
+#define ADC_SMPR1_SMP14_0 ((uint32_t)0x00001000)
+#define ADC_SMPR1_SMP14_1 ((uint32_t)0x00002000)
+#define ADC_SMPR1_SMP14_2 ((uint32_t)0x00004000)
+#define ADC_SMPR1_SMP15 ((uint32_t)0x00038000)
+#define ADC_SMPR1_SMP15_0 ((uint32_t)0x00008000)
+#define ADC_SMPR1_SMP15_1 ((uint32_t)0x00010000)
+#define ADC_SMPR1_SMP15_2 ((uint32_t)0x00020000)
+#define ADC_SMPR1_SMP16 ((uint32_t)0x001C0000)
+#define ADC_SMPR1_SMP16_0 ((uint32_t)0x00040000)
+#define ADC_SMPR1_SMP16_1 ((uint32_t)0x00080000)
+#define ADC_SMPR1_SMP16_2 ((uint32_t)0x00100000)
+#define ADC_SMPR1_SMP17 ((uint32_t)0x00E00000)
+#define ADC_SMPR1_SMP17_0 ((uint32_t)0x00200000)
+#define ADC_SMPR1_SMP17_1 ((uint32_t)0x00400000)
+#define ADC_SMPR1_SMP17_2 ((uint32_t)0x00800000)
+#define ADC_SMPR1_SMP18 ((uint32_t)0x07000000)
+#define ADC_SMPR1_SMP18_0 ((uint32_t)0x01000000)
+#define ADC_SMPR1_SMP18_1 ((uint32_t)0x02000000)
+#define ADC_SMPR1_SMP18_2 ((uint32_t)0x04000000)
+
+
+#define ADC_SMPR2_SMP0 ((uint32_t)0x00000007)
+#define ADC_SMPR2_SMP0_0 ((uint32_t)0x00000001)
+#define ADC_SMPR2_SMP0_1 ((uint32_t)0x00000002)
+#define ADC_SMPR2_SMP0_2 ((uint32_t)0x00000004)
+#define ADC_SMPR2_SMP1 ((uint32_t)0x00000038)
+#define ADC_SMPR2_SMP1_0 ((uint32_t)0x00000008)
+#define ADC_SMPR2_SMP1_1 ((uint32_t)0x00000010)
+#define ADC_SMPR2_SMP1_2 ((uint32_t)0x00000020)
+#define ADC_SMPR2_SMP2 ((uint32_t)0x000001C0)
+#define ADC_SMPR2_SMP2_0 ((uint32_t)0x00000040)
+#define ADC_SMPR2_SMP2_1 ((uint32_t)0x00000080)
+#define ADC_SMPR2_SMP2_2 ((uint32_t)0x00000100)
+#define ADC_SMPR2_SMP3 ((uint32_t)0x00000E00)
+#define ADC_SMPR2_SMP3_0 ((uint32_t)0x00000200)
+#define ADC_SMPR2_SMP3_1 ((uint32_t)0x00000400)
+#define ADC_SMPR2_SMP3_2 ((uint32_t)0x00000800)
+#define ADC_SMPR2_SMP4 ((uint32_t)0x00007000)
+#define ADC_SMPR2_SMP4_0 ((uint32_t)0x00001000)
+#define ADC_SMPR2_SMP4_1 ((uint32_t)0x00002000)
+#define ADC_SMPR2_SMP4_2 ((uint32_t)0x00004000)
+#define ADC_SMPR2_SMP5 ((uint32_t)0x00038000)
+#define ADC_SMPR2_SMP5_0 ((uint32_t)0x00008000)
+#define ADC_SMPR2_SMP5_1 ((uint32_t)0x00010000)
+#define ADC_SMPR2_SMP5_2 ((uint32_t)0x00020000)
+#define ADC_SMPR2_SMP6 ((uint32_t)0x001C0000)
+#define ADC_SMPR2_SMP6_0 ((uint32_t)0x00040000)
+#define ADC_SMPR2_SMP6_1 ((uint32_t)0x00080000)
+#define ADC_SMPR2_SMP6_2 ((uint32_t)0x00100000)
+#define ADC_SMPR2_SMP7 ((uint32_t)0x00E00000)
+#define ADC_SMPR2_SMP7_0 ((uint32_t)0x00200000)
+#define ADC_SMPR2_SMP7_1 ((uint32_t)0x00400000)
+#define ADC_SMPR2_SMP7_2 ((uint32_t)0x00800000)
+#define ADC_SMPR2_SMP8 ((uint32_t)0x07000000)
+#define ADC_SMPR2_SMP8_0 ((uint32_t)0x01000000)
+#define ADC_SMPR2_SMP8_1 ((uint32_t)0x02000000)
+#define ADC_SMPR2_SMP8_2 ((uint32_t)0x04000000)
+#define ADC_SMPR2_SMP9 ((uint32_t)0x38000000)
+#define ADC_SMPR2_SMP9_0 ((uint32_t)0x08000000)
+#define ADC_SMPR2_SMP9_1 ((uint32_t)0x10000000)
+#define ADC_SMPR2_SMP9_2 ((uint32_t)0x20000000)
+
+
+#define ADC_JOFR1_JOFFSET1 ((uint16_t)0x0FFF)
+
+
+#define ADC_JOFR2_JOFFSET2 ((uint16_t)0x0FFF)
+
+
+#define ADC_JOFR3_JOFFSET3 ((uint16_t)0x0FFF)
+
+
+#define ADC_JOFR4_JOFFSET4 ((uint16_t)0x0FFF)
+
+
+#define ADC_HTR_HT ((uint16_t)0x0FFF)
+
+
+#define ADC_LTR_LT ((uint16_t)0x0FFF)
+
+
+#define ADC_SQR1_SQ13 ((uint32_t)0x0000001F)
+#define ADC_SQR1_SQ13_0 ((uint32_t)0x00000001)
+#define ADC_SQR1_SQ13_1 ((uint32_t)0x00000002)
+#define ADC_SQR1_SQ13_2 ((uint32_t)0x00000004)
+#define ADC_SQR1_SQ13_3 ((uint32_t)0x00000008)
+#define ADC_SQR1_SQ13_4 ((uint32_t)0x00000010)
+#define ADC_SQR1_SQ14 ((uint32_t)0x000003E0)
+#define ADC_SQR1_SQ14_0 ((uint32_t)0x00000020)
+#define ADC_SQR1_SQ14_1 ((uint32_t)0x00000040)
+#define ADC_SQR1_SQ14_2 ((uint32_t)0x00000080)
+#define ADC_SQR1_SQ14_3 ((uint32_t)0x00000100)
+#define ADC_SQR1_SQ14_4 ((uint32_t)0x00000200)
+#define ADC_SQR1_SQ15 ((uint32_t)0x00007C00)
+#define ADC_SQR1_SQ15_0 ((uint32_t)0x00000400)
+#define ADC_SQR1_SQ15_1 ((uint32_t)0x00000800)
+#define ADC_SQR1_SQ15_2 ((uint32_t)0x00001000)
+#define ADC_SQR1_SQ15_3 ((uint32_t)0x00002000)
+#define ADC_SQR1_SQ15_4 ((uint32_t)0x00004000)
+#define ADC_SQR1_SQ16 ((uint32_t)0x000F8000)
+#define ADC_SQR1_SQ16_0 ((uint32_t)0x00008000)
+#define ADC_SQR1_SQ16_1 ((uint32_t)0x00010000)
+#define ADC_SQR1_SQ16_2 ((uint32_t)0x00020000)
+#define ADC_SQR1_SQ16_3 ((uint32_t)0x00040000)
+#define ADC_SQR1_SQ16_4 ((uint32_t)0x00080000)
+#define ADC_SQR1_L ((uint32_t)0x00F00000)
+#define ADC_SQR1_L_0 ((uint32_t)0x00100000)
+#define ADC_SQR1_L_1 ((uint32_t)0x00200000)
+#define ADC_SQR1_L_2 ((uint32_t)0x00400000)
+#define ADC_SQR1_L_3 ((uint32_t)0x00800000)
+
+
+#define ADC_SQR2_SQ7 ((uint32_t)0x0000001F)
+#define ADC_SQR2_SQ7_0 ((uint32_t)0x00000001)
+#define ADC_SQR2_SQ7_1 ((uint32_t)0x00000002)
+#define ADC_SQR2_SQ7_2 ((uint32_t)0x00000004)
+#define ADC_SQR2_SQ7_3 ((uint32_t)0x00000008)
+#define ADC_SQR2_SQ7_4 ((uint32_t)0x00000010)
+#define ADC_SQR2_SQ8 ((uint32_t)0x000003E0)
+#define ADC_SQR2_SQ8_0 ((uint32_t)0x00000020)
+#define ADC_SQR2_SQ8_1 ((uint32_t)0x00000040)
+#define ADC_SQR2_SQ8_2 ((uint32_t)0x00000080)
+#define ADC_SQR2_SQ8_3 ((uint32_t)0x00000100)
+#define ADC_SQR2_SQ8_4 ((uint32_t)0x00000200)
+#define ADC_SQR2_SQ9 ((uint32_t)0x00007C00)
+#define ADC_SQR2_SQ9_0 ((uint32_t)0x00000400)
+#define ADC_SQR2_SQ9_1 ((uint32_t)0x00000800)
+#define ADC_SQR2_SQ9_2 ((uint32_t)0x00001000)
+#define ADC_SQR2_SQ9_3 ((uint32_t)0x00002000)
+#define ADC_SQR2_SQ9_4 ((uint32_t)0x00004000)
+#define ADC_SQR2_SQ10 ((uint32_t)0x000F8000)
+#define ADC_SQR2_SQ10_0 ((uint32_t)0x00008000)
+#define ADC_SQR2_SQ10_1 ((uint32_t)0x00010000)
+#define ADC_SQR2_SQ10_2 ((uint32_t)0x00020000)
+#define ADC_SQR2_SQ10_3 ((uint32_t)0x00040000)
+#define ADC_SQR2_SQ10_4 ((uint32_t)0x00080000)
+#define ADC_SQR2_SQ11 ((uint32_t)0x01F00000)
+#define ADC_SQR2_SQ11_0 ((uint32_t)0x00100000)
+#define ADC_SQR2_SQ11_1 ((uint32_t)0x00200000)
+#define ADC_SQR2_SQ11_2 ((uint32_t)0x00400000)
+#define ADC_SQR2_SQ11_3 ((uint32_t)0x00800000)
+#define ADC_SQR2_SQ11_4 ((uint32_t)0x01000000)
+#define ADC_SQR2_SQ12 ((uint32_t)0x3E000000)
+#define ADC_SQR2_SQ12_0 ((uint32_t)0x02000000)
+#define ADC_SQR2_SQ12_1 ((uint32_t)0x04000000)
+#define ADC_SQR2_SQ12_2 ((uint32_t)0x08000000)
+#define ADC_SQR2_SQ12_3 ((uint32_t)0x10000000)
+#define ADC_SQR2_SQ12_4 ((uint32_t)0x20000000)
+
+
+#define ADC_SQR3_SQ1 ((uint32_t)0x0000001F)
+#define ADC_SQR3_SQ1_0 ((uint32_t)0x00000001)
+#define ADC_SQR3_SQ1_1 ((uint32_t)0x00000002)
+#define ADC_SQR3_SQ1_2 ((uint32_t)0x00000004)
+#define ADC_SQR3_SQ1_3 ((uint32_t)0x00000008)
+#define ADC_SQR3_SQ1_4 ((uint32_t)0x00000010)
+#define ADC_SQR3_SQ2 ((uint32_t)0x000003E0)
+#define ADC_SQR3_SQ2_0 ((uint32_t)0x00000020)
+#define ADC_SQR3_SQ2_1 ((uint32_t)0x00000040)
+#define ADC_SQR3_SQ2_2 ((uint32_t)0x00000080)
+#define ADC_SQR3_SQ2_3 ((uint32_t)0x00000100)
+#define ADC_SQR3_SQ2_4 ((uint32_t)0x00000200)
+#define ADC_SQR3_SQ3 ((uint32_t)0x00007C00)
+#define ADC_SQR3_SQ3_0 ((uint32_t)0x00000400)
+#define ADC_SQR3_SQ3_1 ((uint32_t)0x00000800)
+#define ADC_SQR3_SQ3_2 ((uint32_t)0x00001000)
+#define ADC_SQR3_SQ3_3 ((uint32_t)0x00002000)
+#define ADC_SQR3_SQ3_4 ((uint32_t)0x00004000)
+#define ADC_SQR3_SQ4 ((uint32_t)0x000F8000)
+#define ADC_SQR3_SQ4_0 ((uint32_t)0x00008000)
+#define ADC_SQR3_SQ4_1 ((uint32_t)0x00010000)
+#define ADC_SQR3_SQ4_2 ((uint32_t)0x00020000)
+#define ADC_SQR3_SQ4_3 ((uint32_t)0x00040000)
+#define ADC_SQR3_SQ4_4 ((uint32_t)0x00080000)
+#define ADC_SQR3_SQ5 ((uint32_t)0x01F00000)
+#define ADC_SQR3_SQ5_0 ((uint32_t)0x00100000)
+#define ADC_SQR3_SQ5_1 ((uint32_t)0x00200000)
+#define ADC_SQR3_SQ5_2 ((uint32_t)0x00400000)
+#define ADC_SQR3_SQ5_3 ((uint32_t)0x00800000)
+#define ADC_SQR3_SQ5_4 ((uint32_t)0x01000000)
+#define ADC_SQR3_SQ6 ((uint32_t)0x3E000000)
+#define ADC_SQR3_SQ6_0 ((uint32_t)0x02000000)
+#define ADC_SQR3_SQ6_1 ((uint32_t)0x04000000)
+#define ADC_SQR3_SQ6_2 ((uint32_t)0x08000000)
+#define ADC_SQR3_SQ6_3 ((uint32_t)0x10000000)
+#define ADC_SQR3_SQ6_4 ((uint32_t)0x20000000)
+
+
+#define ADC_JSQR_JSQ1 ((uint32_t)0x0000001F)
+#define ADC_JSQR_JSQ1_0 ((uint32_t)0x00000001)
+#define ADC_JSQR_JSQ1_1 ((uint32_t)0x00000002)
+#define ADC_JSQR_JSQ1_2 ((uint32_t)0x00000004)
+#define ADC_JSQR_JSQ1_3 ((uint32_t)0x00000008)
+#define ADC_JSQR_JSQ1_4 ((uint32_t)0x00000010)
+#define ADC_JSQR_JSQ2 ((uint32_t)0x000003E0)
+#define ADC_JSQR_JSQ2_0 ((uint32_t)0x00000020)
+#define ADC_JSQR_JSQ2_1 ((uint32_t)0x00000040)
+#define ADC_JSQR_JSQ2_2 ((uint32_t)0x00000080)
+#define ADC_JSQR_JSQ2_3 ((uint32_t)0x00000100)
+#define ADC_JSQR_JSQ2_4 ((uint32_t)0x00000200)
+#define ADC_JSQR_JSQ3 ((uint32_t)0x00007C00)
+#define ADC_JSQR_JSQ3_0 ((uint32_t)0x00000400)
+#define ADC_JSQR_JSQ3_1 ((uint32_t)0x00000800)
+#define ADC_JSQR_JSQ3_2 ((uint32_t)0x00001000)
+#define ADC_JSQR_JSQ3_3 ((uint32_t)0x00002000)
+#define ADC_JSQR_JSQ3_4 ((uint32_t)0x00004000)
+#define ADC_JSQR_JSQ4 ((uint32_t)0x000F8000)
+#define ADC_JSQR_JSQ4_0 ((uint32_t)0x00008000)
+#define ADC_JSQR_JSQ4_1 ((uint32_t)0x00010000)
+#define ADC_JSQR_JSQ4_2 ((uint32_t)0x00020000)
+#define ADC_JSQR_JSQ4_3 ((uint32_t)0x00040000)
+#define ADC_JSQR_JSQ4_4 ((uint32_t)0x00080000)
+#define ADC_JSQR_JL ((uint32_t)0x00300000)
+#define ADC_JSQR_JL_0 ((uint32_t)0x00100000)
+#define ADC_JSQR_JL_1 ((uint32_t)0x00200000)
+
+
+#define ADC_JDR1_JDATA ((uint16_t)0xFFFF)
+
+
+#define ADC_JDR2_JDATA ((uint16_t)0xFFFF)
+
+
+#define ADC_JDR3_JDATA ((uint16_t)0xFFFF)
+
+
+#define ADC_JDR4_JDATA ((uint16_t)0xFFFF)
+
+
+#define ADC_DR_DATA ((uint32_t)0x0000FFFF)
+#define ADC_DR_ADC2DATA ((uint32_t)0xFFFF0000)
+
+
+#define ADC_CSR_AWD1 ((uint32_t)0x00000001)
+#define ADC_CSR_EOC1 ((uint32_t)0x00000002)
+#define ADC_CSR_JEOC1 ((uint32_t)0x00000004)
+#define ADC_CSR_JSTRT1 ((uint32_t)0x00000008)
+#define ADC_CSR_STRT1 ((uint32_t)0x00000010)
+#define ADC_CSR_DOVR1 ((uint32_t)0x00000020)
+#define ADC_CSR_AWD2 ((uint32_t)0x00000100)
+#define ADC_CSR_EOC2 ((uint32_t)0x00000200)
+#define ADC_CSR_JEOC2 ((uint32_t)0x00000400)
+#define ADC_CSR_JSTRT2 ((uint32_t)0x00000800)
+#define ADC_CSR_STRT2 ((uint32_t)0x00001000)
+#define ADC_CSR_DOVR2 ((uint32_t)0x00002000)
+#define ADC_CSR_AWD3 ((uint32_t)0x00010000)
+#define ADC_CSR_EOC3 ((uint32_t)0x00020000)
+#define ADC_CSR_JEOC3 ((uint32_t)0x00040000)
+#define ADC_CSR_JSTRT3 ((uint32_t)0x00080000)
+#define ADC_CSR_STRT3 ((uint32_t)0x00100000)
+#define ADC_CSR_DOVR3 ((uint32_t)0x00200000)
+
+
+#define ADC_CCR_MULTI ((uint32_t)0x0000001F)
+#define ADC_CCR_MULTI_0 ((uint32_t)0x00000001)
+#define ADC_CCR_MULTI_1 ((uint32_t)0x00000002)
+#define ADC_CCR_MULTI_2 ((uint32_t)0x00000004)
+#define ADC_CCR_MULTI_3 ((uint32_t)0x00000008)
+#define ADC_CCR_MULTI_4 ((uint32_t)0x00000010)
+#define ADC_CCR_DELAY ((uint32_t)0x00000F00)
+#define ADC_CCR_DELAY_0 ((uint32_t)0x00000100)
+#define ADC_CCR_DELAY_1 ((uint32_t)0x00000200)
+#define ADC_CCR_DELAY_2 ((uint32_t)0x00000400)
+#define ADC_CCR_DELAY_3 ((uint32_t)0x00000800)
+#define ADC_CCR_DDS ((uint32_t)0x00002000)
+#define ADC_CCR_DMA ((uint32_t)0x0000C000)
+#define ADC_CCR_DMA_0 ((uint32_t)0x00004000)
+#define ADC_CCR_DMA_1 ((uint32_t)0x00008000)
+#define ADC_CCR_ADCPRE ((uint32_t)0x00030000)
+#define ADC_CCR_ADCPRE_0 ((uint32_t)0x00010000)
+#define ADC_CCR_ADCPRE_1 ((uint32_t)0x00020000)
+#define ADC_CCR_VBATE ((uint32_t)0x00400000)
+#define ADC_CCR_TSVREFE ((uint32_t)0x00800000)
+
+
+#define ADC_CDR_DATA1 ((uint32_t)0x0000FFFF)
+#define ADC_CDR_DATA2 ((uint32_t)0xFFFF0000)
+# 1673 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define CAN_MCR_INRQ ((uint16_t)0x0001)
+#define CAN_MCR_SLEEP ((uint16_t)0x0002)
+#define CAN_MCR_TXFP ((uint16_t)0x0004)
+#define CAN_MCR_RFLM ((uint16_t)0x0008)
+#define CAN_MCR_NART ((uint16_t)0x0010)
+#define CAN_MCR_AWUM ((uint16_t)0x0020)
+#define CAN_MCR_ABOM ((uint16_t)0x0040)
+#define CAN_MCR_TTCM ((uint16_t)0x0080)
+#define CAN_MCR_RESET ((uint16_t)0x8000)
+
+
+#define CAN_MSR_INAK ((uint16_t)0x0001)
+#define CAN_MSR_SLAK ((uint16_t)0x0002)
+#define CAN_MSR_ERRI ((uint16_t)0x0004)
+#define CAN_MSR_WKUI ((uint16_t)0x0008)
+#define CAN_MSR_SLAKI ((uint16_t)0x0010)
+#define CAN_MSR_TXM ((uint16_t)0x0100)
+#define CAN_MSR_RXM ((uint16_t)0x0200)
+#define CAN_MSR_SAMP ((uint16_t)0x0400)
+#define CAN_MSR_RX ((uint16_t)0x0800)
+
+
+#define CAN_TSR_RQCP0 ((uint32_t)0x00000001)
+#define CAN_TSR_TXOK0 ((uint32_t)0x00000002)
+#define CAN_TSR_ALST0 ((uint32_t)0x00000004)
+#define CAN_TSR_TERR0 ((uint32_t)0x00000008)
+#define CAN_TSR_ABRQ0 ((uint32_t)0x00000080)
+#define CAN_TSR_RQCP1 ((uint32_t)0x00000100)
+#define CAN_TSR_TXOK1 ((uint32_t)0x00000200)
+#define CAN_TSR_ALST1 ((uint32_t)0x00000400)
+#define CAN_TSR_TERR1 ((uint32_t)0x00000800)
+#define CAN_TSR_ABRQ1 ((uint32_t)0x00008000)
+#define CAN_TSR_RQCP2 ((uint32_t)0x00010000)
+#define CAN_TSR_TXOK2 ((uint32_t)0x00020000)
+#define CAN_TSR_ALST2 ((uint32_t)0x00040000)
+#define CAN_TSR_TERR2 ((uint32_t)0x00080000)
+#define CAN_TSR_ABRQ2 ((uint32_t)0x00800000)
+#define CAN_TSR_CODE ((uint32_t)0x03000000)
+
+#define CAN_TSR_TME ((uint32_t)0x1C000000)
+#define CAN_TSR_TME0 ((uint32_t)0x04000000)
+#define CAN_TSR_TME1 ((uint32_t)0x08000000)
+#define CAN_TSR_TME2 ((uint32_t)0x10000000)
+
+#define CAN_TSR_LOW ((uint32_t)0xE0000000)
+#define CAN_TSR_LOW0 ((uint32_t)0x20000000)
+#define CAN_TSR_LOW1 ((uint32_t)0x40000000)
+#define CAN_TSR_LOW2 ((uint32_t)0x80000000)
+
+
+#define CAN_RF0R_FMP0 ((uint8_t)0x03)
+#define CAN_RF0R_FULL0 ((uint8_t)0x08)
+#define CAN_RF0R_FOVR0 ((uint8_t)0x10)
+#define CAN_RF0R_RFOM0 ((uint8_t)0x20)
+
+
+#define CAN_RF1R_FMP1 ((uint8_t)0x03)
+#define CAN_RF1R_FULL1 ((uint8_t)0x08)
+#define CAN_RF1R_FOVR1 ((uint8_t)0x10)
+#define CAN_RF1R_RFOM1 ((uint8_t)0x20)
+
+
+#define CAN_IER_TMEIE ((uint32_t)0x00000001)
+#define CAN_IER_FMPIE0 ((uint32_t)0x00000002)
+#define CAN_IER_FFIE0 ((uint32_t)0x00000004)
+#define CAN_IER_FOVIE0 ((uint32_t)0x00000008)
+#define CAN_IER_FMPIE1 ((uint32_t)0x00000010)
+#define CAN_IER_FFIE1 ((uint32_t)0x00000020)
+#define CAN_IER_FOVIE1 ((uint32_t)0x00000040)
+#define CAN_IER_EWGIE ((uint32_t)0x00000100)
+#define CAN_IER_EPVIE ((uint32_t)0x00000200)
+#define CAN_IER_BOFIE ((uint32_t)0x00000400)
+#define CAN_IER_LECIE ((uint32_t)0x00000800)
+#define CAN_IER_ERRIE ((uint32_t)0x00008000)
+#define CAN_IER_WKUIE ((uint32_t)0x00010000)
+#define CAN_IER_SLKIE ((uint32_t)0x00020000)
+
+
+#define CAN_ESR_EWGF ((uint32_t)0x00000001)
+#define CAN_ESR_EPVF ((uint32_t)0x00000002)
+#define CAN_ESR_BOFF ((uint32_t)0x00000004)
+
+#define CAN_ESR_LEC ((uint32_t)0x00000070)
+#define CAN_ESR_LEC_0 ((uint32_t)0x00000010)
+#define CAN_ESR_LEC_1 ((uint32_t)0x00000020)
+#define CAN_ESR_LEC_2 ((uint32_t)0x00000040)
+
+#define CAN_ESR_TEC ((uint32_t)0x00FF0000)
+#define CAN_ESR_REC ((uint32_t)0xFF000000)
+
+
+#define CAN_BTR_BRP ((uint32_t)0x000003FF)
+#define CAN_BTR_TS1 ((uint32_t)0x000F0000)
+#define CAN_BTR_TS2 ((uint32_t)0x00700000)
+#define CAN_BTR_SJW ((uint32_t)0x03000000)
+#define CAN_BTR_LBKM ((uint32_t)0x40000000)
+#define CAN_BTR_SILM ((uint32_t)0x80000000)
+
+
+
+#define CAN_TI0R_TXRQ ((uint32_t)0x00000001)
+#define CAN_TI0R_RTR ((uint32_t)0x00000002)
+#define CAN_TI0R_IDE ((uint32_t)0x00000004)
+#define CAN_TI0R_EXID ((uint32_t)0x001FFFF8)
+#define CAN_TI0R_STID ((uint32_t)0xFFE00000)
+
+
+#define CAN_TDT0R_DLC ((uint32_t)0x0000000F)
+#define CAN_TDT0R_TGT ((uint32_t)0x00000100)
+#define CAN_TDT0R_TIME ((uint32_t)0xFFFF0000)
+
+
+#define CAN_TDL0R_DATA0 ((uint32_t)0x000000FF)
+#define CAN_TDL0R_DATA1 ((uint32_t)0x0000FF00)
+#define CAN_TDL0R_DATA2 ((uint32_t)0x00FF0000)
+#define CAN_TDL0R_DATA3 ((uint32_t)0xFF000000)
+
+
+#define CAN_TDH0R_DATA4 ((uint32_t)0x000000FF)
+#define CAN_TDH0R_DATA5 ((uint32_t)0x0000FF00)
+#define CAN_TDH0R_DATA6 ((uint32_t)0x00FF0000)
+#define CAN_TDH0R_DATA7 ((uint32_t)0xFF000000)
+
+
+#define CAN_TI1R_TXRQ ((uint32_t)0x00000001)
+#define CAN_TI1R_RTR ((uint32_t)0x00000002)
+#define CAN_TI1R_IDE ((uint32_t)0x00000004)
+#define CAN_TI1R_EXID ((uint32_t)0x001FFFF8)
+#define CAN_TI1R_STID ((uint32_t)0xFFE00000)
+
+
+#define CAN_TDT1R_DLC ((uint32_t)0x0000000F)
+#define CAN_TDT1R_TGT ((uint32_t)0x00000100)
+#define CAN_TDT1R_TIME ((uint32_t)0xFFFF0000)
+
+
+#define CAN_TDL1R_DATA0 ((uint32_t)0x000000FF)
+#define CAN_TDL1R_DATA1 ((uint32_t)0x0000FF00)
+#define CAN_TDL1R_DATA2 ((uint32_t)0x00FF0000)
+#define CAN_TDL1R_DATA3 ((uint32_t)0xFF000000)
+
+
+#define CAN_TDH1R_DATA4 ((uint32_t)0x000000FF)
+#define CAN_TDH1R_DATA5 ((uint32_t)0x0000FF00)
+#define CAN_TDH1R_DATA6 ((uint32_t)0x00FF0000)
+#define CAN_TDH1R_DATA7 ((uint32_t)0xFF000000)
+
+
+#define CAN_TI2R_TXRQ ((uint32_t)0x00000001)
+#define CAN_TI2R_RTR ((uint32_t)0x00000002)
+#define CAN_TI2R_IDE ((uint32_t)0x00000004)
+#define CAN_TI2R_EXID ((uint32_t)0x001FFFF8)
+#define CAN_TI2R_STID ((uint32_t)0xFFE00000)
+
+
+#define CAN_TDT2R_DLC ((uint32_t)0x0000000F)
+#define CAN_TDT2R_TGT ((uint32_t)0x00000100)
+#define CAN_TDT2R_TIME ((uint32_t)0xFFFF0000)
+
+
+#define CAN_TDL2R_DATA0 ((uint32_t)0x000000FF)
+#define CAN_TDL2R_DATA1 ((uint32_t)0x0000FF00)
+#define CAN_TDL2R_DATA2 ((uint32_t)0x00FF0000)
+#define CAN_TDL2R_DATA3 ((uint32_t)0xFF000000)
+
+
+#define CAN_TDH2R_DATA4 ((uint32_t)0x000000FF)
+#define CAN_TDH2R_DATA5 ((uint32_t)0x0000FF00)
+#define CAN_TDH2R_DATA6 ((uint32_t)0x00FF0000)
+#define CAN_TDH2R_DATA7 ((uint32_t)0xFF000000)
+
+
+#define CAN_RI0R_RTR ((uint32_t)0x00000002)
+#define CAN_RI0R_IDE ((uint32_t)0x00000004)
+#define CAN_RI0R_EXID ((uint32_t)0x001FFFF8)
+#define CAN_RI0R_STID ((uint32_t)0xFFE00000)
+
+
+#define CAN_RDT0R_DLC ((uint32_t)0x0000000F)
+#define CAN_RDT0R_FMI ((uint32_t)0x0000FF00)
+#define CAN_RDT0R_TIME ((uint32_t)0xFFFF0000)
+
+
+#define CAN_RDL0R_DATA0 ((uint32_t)0x000000FF)
+#define CAN_RDL0R_DATA1 ((uint32_t)0x0000FF00)
+#define CAN_RDL0R_DATA2 ((uint32_t)0x00FF0000)
+#define CAN_RDL0R_DATA3 ((uint32_t)0xFF000000)
+
+
+#define CAN_RDH0R_DATA4 ((uint32_t)0x000000FF)
+#define CAN_RDH0R_DATA5 ((uint32_t)0x0000FF00)
+#define CAN_RDH0R_DATA6 ((uint32_t)0x00FF0000)
+#define CAN_RDH0R_DATA7 ((uint32_t)0xFF000000)
+
+
+#define CAN_RI1R_RTR ((uint32_t)0x00000002)
+#define CAN_RI1R_IDE ((uint32_t)0x00000004)
+#define CAN_RI1R_EXID ((uint32_t)0x001FFFF8)
+#define CAN_RI1R_STID ((uint32_t)0xFFE00000)
+
+
+#define CAN_RDT1R_DLC ((uint32_t)0x0000000F)
+#define CAN_RDT1R_FMI ((uint32_t)0x0000FF00)
+#define CAN_RDT1R_TIME ((uint32_t)0xFFFF0000)
+
+
+#define CAN_RDL1R_DATA0 ((uint32_t)0x000000FF)
+#define CAN_RDL1R_DATA1 ((uint32_t)0x0000FF00)
+#define CAN_RDL1R_DATA2 ((uint32_t)0x00FF0000)
+#define CAN_RDL1R_DATA3 ((uint32_t)0xFF000000)
+
+
+#define CAN_RDH1R_DATA4 ((uint32_t)0x000000FF)
+#define CAN_RDH1R_DATA5 ((uint32_t)0x0000FF00)
+#define CAN_RDH1R_DATA6 ((uint32_t)0x00FF0000)
+#define CAN_RDH1R_DATA7 ((uint32_t)0xFF000000)
+
+
+
+#define CAN_FMR_FINIT ((uint8_t)0x01)
+
+
+#define CAN_FM1R_FBM ((uint16_t)0x3FFF)
+#define CAN_FM1R_FBM0 ((uint16_t)0x0001)
+#define CAN_FM1R_FBM1 ((uint16_t)0x0002)
+#define CAN_FM1R_FBM2 ((uint16_t)0x0004)
+#define CAN_FM1R_FBM3 ((uint16_t)0x0008)
+#define CAN_FM1R_FBM4 ((uint16_t)0x0010)
+#define CAN_FM1R_FBM5 ((uint16_t)0x0020)
+#define CAN_FM1R_FBM6 ((uint16_t)0x0040)
+#define CAN_FM1R_FBM7 ((uint16_t)0x0080)
+#define CAN_FM1R_FBM8 ((uint16_t)0x0100)
+#define CAN_FM1R_FBM9 ((uint16_t)0x0200)
+#define CAN_FM1R_FBM10 ((uint16_t)0x0400)
+#define CAN_FM1R_FBM11 ((uint16_t)0x0800)
+#define CAN_FM1R_FBM12 ((uint16_t)0x1000)
+#define CAN_FM1R_FBM13 ((uint16_t)0x2000)
+
+
+#define CAN_FS1R_FSC ((uint16_t)0x3FFF)
+#define CAN_FS1R_FSC0 ((uint16_t)0x0001)
+#define CAN_FS1R_FSC1 ((uint16_t)0x0002)
+#define CAN_FS1R_FSC2 ((uint16_t)0x0004)
+#define CAN_FS1R_FSC3 ((uint16_t)0x0008)
+#define CAN_FS1R_FSC4 ((uint16_t)0x0010)
+#define CAN_FS1R_FSC5 ((uint16_t)0x0020)
+#define CAN_FS1R_FSC6 ((uint16_t)0x0040)
+#define CAN_FS1R_FSC7 ((uint16_t)0x0080)
+#define CAN_FS1R_FSC8 ((uint16_t)0x0100)
+#define CAN_FS1R_FSC9 ((uint16_t)0x0200)
+#define CAN_FS1R_FSC10 ((uint16_t)0x0400)
+#define CAN_FS1R_FSC11 ((uint16_t)0x0800)
+#define CAN_FS1R_FSC12 ((uint16_t)0x1000)
+#define CAN_FS1R_FSC13 ((uint16_t)0x2000)
+
+
+#define CAN_FFA1R_FFA ((uint16_t)0x3FFF)
+#define CAN_FFA1R_FFA0 ((uint16_t)0x0001)
+#define CAN_FFA1R_FFA1 ((uint16_t)0x0002)
+#define CAN_FFA1R_FFA2 ((uint16_t)0x0004)
+#define CAN_FFA1R_FFA3 ((uint16_t)0x0008)
+#define CAN_FFA1R_FFA4 ((uint16_t)0x0010)
+#define CAN_FFA1R_FFA5 ((uint16_t)0x0020)
+#define CAN_FFA1R_FFA6 ((uint16_t)0x0040)
+#define CAN_FFA1R_FFA7 ((uint16_t)0x0080)
+#define CAN_FFA1R_FFA8 ((uint16_t)0x0100)
+#define CAN_FFA1R_FFA9 ((uint16_t)0x0200)
+#define CAN_FFA1R_FFA10 ((uint16_t)0x0400)
+#define CAN_FFA1R_FFA11 ((uint16_t)0x0800)
+#define CAN_FFA1R_FFA12 ((uint16_t)0x1000)
+#define CAN_FFA1R_FFA13 ((uint16_t)0x2000)
+
+
+#define CAN_FA1R_FACT ((uint16_t)0x3FFF)
+#define CAN_FA1R_FACT0 ((uint16_t)0x0001)
+#define CAN_FA1R_FACT1 ((uint16_t)0x0002)
+#define CAN_FA1R_FACT2 ((uint16_t)0x0004)
+#define CAN_FA1R_FACT3 ((uint16_t)0x0008)
+#define CAN_FA1R_FACT4 ((uint16_t)0x0010)
+#define CAN_FA1R_FACT5 ((uint16_t)0x0020)
+#define CAN_FA1R_FACT6 ((uint16_t)0x0040)
+#define CAN_FA1R_FACT7 ((uint16_t)0x0080)
+#define CAN_FA1R_FACT8 ((uint16_t)0x0100)
+#define CAN_FA1R_FACT9 ((uint16_t)0x0200)
+#define CAN_FA1R_FACT10 ((uint16_t)0x0400)
+#define CAN_FA1R_FACT11 ((uint16_t)0x0800)
+#define CAN_FA1R_FACT12 ((uint16_t)0x1000)
+#define CAN_FA1R_FACT13 ((uint16_t)0x2000)
+
+
+#define CAN_F0R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F0R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F0R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F0R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F0R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F0R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F0R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F0R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F0R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F0R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F0R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F0R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F0R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F0R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F0R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F0R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F0R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F0R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F0R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F0R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F0R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F0R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F0R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F0R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F0R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F0R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F0R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F0R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F0R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F0R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F0R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F0R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F1R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F1R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F1R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F1R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F1R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F1R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F1R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F1R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F1R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F1R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F1R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F1R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F1R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F1R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F1R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F1R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F1R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F1R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F1R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F1R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F1R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F1R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F1R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F1R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F1R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F1R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F1R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F1R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F1R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F1R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F1R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F1R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F2R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F2R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F2R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F2R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F2R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F2R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F2R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F2R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F2R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F2R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F2R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F2R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F2R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F2R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F2R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F2R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F2R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F2R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F2R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F2R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F2R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F2R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F2R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F2R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F2R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F2R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F2R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F2R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F2R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F2R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F2R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F2R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F3R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F3R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F3R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F3R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F3R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F3R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F3R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F3R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F3R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F3R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F3R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F3R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F3R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F3R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F3R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F3R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F3R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F3R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F3R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F3R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F3R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F3R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F3R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F3R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F3R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F3R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F3R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F3R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F3R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F3R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F3R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F3R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F4R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F4R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F4R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F4R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F4R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F4R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F4R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F4R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F4R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F4R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F4R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F4R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F4R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F4R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F4R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F4R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F4R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F4R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F4R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F4R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F4R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F4R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F4R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F4R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F4R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F4R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F4R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F4R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F4R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F4R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F4R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F4R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F5R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F5R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F5R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F5R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F5R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F5R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F5R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F5R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F5R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F5R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F5R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F5R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F5R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F5R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F5R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F5R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F5R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F5R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F5R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F5R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F5R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F5R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F5R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F5R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F5R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F5R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F5R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F5R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F5R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F5R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F5R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F5R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F6R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F6R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F6R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F6R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F6R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F6R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F6R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F6R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F6R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F6R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F6R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F6R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F6R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F6R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F6R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F6R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F6R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F6R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F6R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F6R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F6R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F6R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F6R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F6R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F6R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F6R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F6R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F6R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F6R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F6R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F6R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F6R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F7R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F7R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F7R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F7R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F7R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F7R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F7R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F7R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F7R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F7R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F7R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F7R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F7R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F7R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F7R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F7R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F7R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F7R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F7R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F7R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F7R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F7R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F7R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F7R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F7R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F7R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F7R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F7R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F7R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F7R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F7R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F7R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F8R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F8R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F8R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F8R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F8R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F8R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F8R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F8R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F8R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F8R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F8R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F8R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F8R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F8R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F8R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F8R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F8R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F8R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F8R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F8R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F8R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F8R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F8R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F8R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F8R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F8R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F8R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F8R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F8R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F8R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F8R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F8R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F9R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F9R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F9R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F9R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F9R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F9R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F9R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F9R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F9R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F9R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F9R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F9R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F9R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F9R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F9R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F9R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F9R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F9R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F9R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F9R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F9R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F9R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F9R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F9R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F9R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F9R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F9R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F9R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F9R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F9R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F9R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F9R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F10R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F10R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F10R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F10R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F10R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F10R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F10R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F10R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F10R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F10R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F10R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F10R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F10R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F10R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F10R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F10R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F10R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F10R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F10R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F10R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F10R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F10R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F10R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F10R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F10R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F10R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F10R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F10R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F10R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F10R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F10R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F10R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F11R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F11R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F11R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F11R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F11R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F11R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F11R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F11R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F11R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F11R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F11R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F11R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F11R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F11R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F11R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F11R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F11R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F11R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F11R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F11R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F11R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F11R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F11R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F11R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F11R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F11R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F11R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F11R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F11R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F11R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F11R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F11R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F12R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F12R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F12R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F12R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F12R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F12R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F12R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F12R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F12R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F12R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F12R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F12R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F12R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F12R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F12R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F12R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F12R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F12R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F12R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F12R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F12R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F12R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F12R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F12R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F12R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F12R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F12R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F12R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F12R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F12R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F12R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F12R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F13R1_FB0 ((uint32_t)0x00000001)
+#define CAN_F13R1_FB1 ((uint32_t)0x00000002)
+#define CAN_F13R1_FB2 ((uint32_t)0x00000004)
+#define CAN_F13R1_FB3 ((uint32_t)0x00000008)
+#define CAN_F13R1_FB4 ((uint32_t)0x00000010)
+#define CAN_F13R1_FB5 ((uint32_t)0x00000020)
+#define CAN_F13R1_FB6 ((uint32_t)0x00000040)
+#define CAN_F13R1_FB7 ((uint32_t)0x00000080)
+#define CAN_F13R1_FB8 ((uint32_t)0x00000100)
+#define CAN_F13R1_FB9 ((uint32_t)0x00000200)
+#define CAN_F13R1_FB10 ((uint32_t)0x00000400)
+#define CAN_F13R1_FB11 ((uint32_t)0x00000800)
+#define CAN_F13R1_FB12 ((uint32_t)0x00001000)
+#define CAN_F13R1_FB13 ((uint32_t)0x00002000)
+#define CAN_F13R1_FB14 ((uint32_t)0x00004000)
+#define CAN_F13R1_FB15 ((uint32_t)0x00008000)
+#define CAN_F13R1_FB16 ((uint32_t)0x00010000)
+#define CAN_F13R1_FB17 ((uint32_t)0x00020000)
+#define CAN_F13R1_FB18 ((uint32_t)0x00040000)
+#define CAN_F13R1_FB19 ((uint32_t)0x00080000)
+#define CAN_F13R1_FB20 ((uint32_t)0x00100000)
+#define CAN_F13R1_FB21 ((uint32_t)0x00200000)
+#define CAN_F13R1_FB22 ((uint32_t)0x00400000)
+#define CAN_F13R1_FB23 ((uint32_t)0x00800000)
+#define CAN_F13R1_FB24 ((uint32_t)0x01000000)
+#define CAN_F13R1_FB25 ((uint32_t)0x02000000)
+#define CAN_F13R1_FB26 ((uint32_t)0x04000000)
+#define CAN_F13R1_FB27 ((uint32_t)0x08000000)
+#define CAN_F13R1_FB28 ((uint32_t)0x10000000)
+#define CAN_F13R1_FB29 ((uint32_t)0x20000000)
+#define CAN_F13R1_FB30 ((uint32_t)0x40000000)
+#define CAN_F13R1_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F0R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F0R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F0R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F0R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F0R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F0R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F0R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F0R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F0R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F0R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F0R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F0R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F0R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F0R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F0R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F0R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F0R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F0R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F0R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F0R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F0R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F0R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F0R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F0R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F0R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F0R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F0R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F0R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F0R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F0R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F0R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F0R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F1R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F1R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F1R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F1R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F1R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F1R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F1R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F1R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F1R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F1R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F1R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F1R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F1R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F1R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F1R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F1R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F1R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F1R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F1R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F1R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F1R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F1R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F1R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F1R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F1R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F1R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F1R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F1R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F1R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F1R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F1R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F1R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F2R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F2R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F2R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F2R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F2R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F2R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F2R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F2R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F2R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F2R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F2R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F2R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F2R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F2R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F2R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F2R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F2R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F2R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F2R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F2R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F2R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F2R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F2R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F2R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F2R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F2R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F2R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F2R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F2R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F2R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F2R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F2R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F3R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F3R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F3R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F3R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F3R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F3R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F3R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F3R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F3R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F3R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F3R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F3R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F3R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F3R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F3R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F3R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F3R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F3R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F3R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F3R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F3R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F3R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F3R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F3R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F3R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F3R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F3R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F3R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F3R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F3R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F3R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F3R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F4R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F4R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F4R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F4R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F4R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F4R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F4R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F4R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F4R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F4R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F4R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F4R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F4R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F4R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F4R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F4R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F4R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F4R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F4R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F4R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F4R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F4R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F4R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F4R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F4R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F4R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F4R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F4R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F4R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F4R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F4R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F4R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F5R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F5R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F5R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F5R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F5R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F5R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F5R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F5R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F5R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F5R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F5R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F5R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F5R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F5R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F5R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F5R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F5R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F5R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F5R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F5R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F5R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F5R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F5R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F5R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F5R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F5R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F5R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F5R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F5R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F5R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F5R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F5R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F6R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F6R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F6R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F6R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F6R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F6R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F6R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F6R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F6R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F6R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F6R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F6R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F6R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F6R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F6R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F6R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F6R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F6R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F6R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F6R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F6R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F6R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F6R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F6R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F6R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F6R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F6R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F6R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F6R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F6R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F6R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F6R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F7R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F7R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F7R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F7R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F7R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F7R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F7R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F7R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F7R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F7R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F7R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F7R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F7R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F7R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F7R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F7R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F7R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F7R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F7R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F7R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F7R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F7R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F7R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F7R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F7R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F7R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F7R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F7R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F7R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F7R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F7R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F7R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F8R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F8R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F8R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F8R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F8R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F8R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F8R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F8R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F8R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F8R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F8R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F8R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F8R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F8R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F8R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F8R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F8R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F8R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F8R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F8R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F8R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F8R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F8R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F8R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F8R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F8R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F8R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F8R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F8R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F8R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F8R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F8R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F9R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F9R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F9R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F9R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F9R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F9R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F9R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F9R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F9R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F9R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F9R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F9R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F9R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F9R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F9R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F9R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F9R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F9R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F9R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F9R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F9R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F9R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F9R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F9R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F9R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F9R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F9R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F9R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F9R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F9R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F9R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F9R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F10R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F10R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F10R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F10R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F10R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F10R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F10R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F10R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F10R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F10R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F10R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F10R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F10R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F10R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F10R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F10R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F10R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F10R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F10R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F10R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F10R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F10R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F10R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F10R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F10R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F10R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F10R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F10R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F10R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F10R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F10R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F10R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F11R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F11R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F11R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F11R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F11R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F11R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F11R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F11R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F11R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F11R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F11R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F11R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F11R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F11R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F11R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F11R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F11R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F11R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F11R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F11R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F11R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F11R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F11R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F11R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F11R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F11R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F11R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F11R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F11R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F11R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F11R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F11R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F12R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F12R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F12R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F12R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F12R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F12R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F12R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F12R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F12R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F12R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F12R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F12R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F12R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F12R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F12R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F12R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F12R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F12R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F12R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F12R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F12R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F12R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F12R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F12R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F12R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F12R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F12R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F12R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F12R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F12R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F12R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F12R2_FB31 ((uint32_t)0x80000000)
+
+
+#define CAN_F13R2_FB0 ((uint32_t)0x00000001)
+#define CAN_F13R2_FB1 ((uint32_t)0x00000002)
+#define CAN_F13R2_FB2 ((uint32_t)0x00000004)
+#define CAN_F13R2_FB3 ((uint32_t)0x00000008)
+#define CAN_F13R2_FB4 ((uint32_t)0x00000010)
+#define CAN_F13R2_FB5 ((uint32_t)0x00000020)
+#define CAN_F13R2_FB6 ((uint32_t)0x00000040)
+#define CAN_F13R2_FB7 ((uint32_t)0x00000080)
+#define CAN_F13R2_FB8 ((uint32_t)0x00000100)
+#define CAN_F13R2_FB9 ((uint32_t)0x00000200)
+#define CAN_F13R2_FB10 ((uint32_t)0x00000400)
+#define CAN_F13R2_FB11 ((uint32_t)0x00000800)
+#define CAN_F13R2_FB12 ((uint32_t)0x00001000)
+#define CAN_F13R2_FB13 ((uint32_t)0x00002000)
+#define CAN_F13R2_FB14 ((uint32_t)0x00004000)
+#define CAN_F13R2_FB15 ((uint32_t)0x00008000)
+#define CAN_F13R2_FB16 ((uint32_t)0x00010000)
+#define CAN_F13R2_FB17 ((uint32_t)0x00020000)
+#define CAN_F13R2_FB18 ((uint32_t)0x00040000)
+#define CAN_F13R2_FB19 ((uint32_t)0x00080000)
+#define CAN_F13R2_FB20 ((uint32_t)0x00100000)
+#define CAN_F13R2_FB21 ((uint32_t)0x00200000)
+#define CAN_F13R2_FB22 ((uint32_t)0x00400000)
+#define CAN_F13R2_FB23 ((uint32_t)0x00800000)
+#define CAN_F13R2_FB24 ((uint32_t)0x01000000)
+#define CAN_F13R2_FB25 ((uint32_t)0x02000000)
+#define CAN_F13R2_FB26 ((uint32_t)0x04000000)
+#define CAN_F13R2_FB27 ((uint32_t)0x08000000)
+#define CAN_F13R2_FB28 ((uint32_t)0x10000000)
+#define CAN_F13R2_FB29 ((uint32_t)0x20000000)
+#define CAN_F13R2_FB30 ((uint32_t)0x40000000)
+#define CAN_F13R2_FB31 ((uint32_t)0x80000000)
+
+
+
+
+
+
+
+#define CRC_DR_DR ((uint32_t)0xFFFFFFFF)
+
+
+
+#define CRC_IDR_IDR ((uint8_t)0xFF)
+
+
+
+#define CRC_CR_RESET ((uint8_t)0x01)
+
+
+
+
+
+
+
+#define CRYP_CR_ALGODIR ((uint32_t)0x00000004)
+
+#define CRYP_CR_ALGOMODE ((uint32_t)0x00080038)
+#define CRYP_CR_ALGOMODE_0 ((uint32_t)0x00000008)
+#define CRYP_CR_ALGOMODE_1 ((uint32_t)0x00000010)
+#define CRYP_CR_ALGOMODE_2 ((uint32_t)0x00000020)
+#define CRYP_CR_ALGOMODE_TDES_ECB ((uint32_t)0x00000000)
+#define CRYP_CR_ALGOMODE_TDES_CBC ((uint32_t)0x00000008)
+#define CRYP_CR_ALGOMODE_DES_ECB ((uint32_t)0x00000010)
+#define CRYP_CR_ALGOMODE_DES_CBC ((uint32_t)0x00000018)
+#define CRYP_CR_ALGOMODE_AES_ECB ((uint32_t)0x00000020)
+#define CRYP_CR_ALGOMODE_AES_CBC ((uint32_t)0x00000028)
+#define CRYP_CR_ALGOMODE_AES_CTR ((uint32_t)0x00000030)
+#define CRYP_CR_ALGOMODE_AES_KEY ((uint32_t)0x00000038)
+
+#define CRYP_CR_DATATYPE ((uint32_t)0x000000C0)
+#define CRYP_CR_DATATYPE_0 ((uint32_t)0x00000040)
+#define CRYP_CR_DATATYPE_1 ((uint32_t)0x00000080)
+#define CRYP_CR_KEYSIZE ((uint32_t)0x00000300)
+#define CRYP_CR_KEYSIZE_0 ((uint32_t)0x00000100)
+#define CRYP_CR_KEYSIZE_1 ((uint32_t)0x00000200)
+#define CRYP_CR_FFLUSH ((uint32_t)0x00004000)
+#define CRYP_CR_CRYPEN ((uint32_t)0x00008000)
+
+#define CRYP_CR_GCM_CCMPH ((uint32_t)0x00030000)
+#define CRYP_CR_GCM_CCMPH_0 ((uint32_t)0x00010000)
+#define CRYP_CR_GCM_CCMPH_1 ((uint32_t)0x00020000)
+#define CRYP_CR_ALGOMODE_3 ((uint32_t)0x00080000)
+
+
+#define CRYP_SR_IFEM ((uint32_t)0x00000001)
+#define CRYP_SR_IFNF ((uint32_t)0x00000002)
+#define CRYP_SR_OFNE ((uint32_t)0x00000004)
+#define CRYP_SR_OFFU ((uint32_t)0x00000008)
+#define CRYP_SR_BUSY ((uint32_t)0x00000010)
+
+#define CRYP_DMACR_DIEN ((uint32_t)0x00000001)
+#define CRYP_DMACR_DOEN ((uint32_t)0x00000002)
+
+#define CRYP_IMSCR_INIM ((uint32_t)0x00000001)
+#define CRYP_IMSCR_OUTIM ((uint32_t)0x00000002)
+
+#define CRYP_RISR_OUTRIS ((uint32_t)0x00000001)
+#define CRYP_RISR_INRIS ((uint32_t)0x00000002)
+
+#define CRYP_MISR_INMIS ((uint32_t)0x00000001)
+#define CRYP_MISR_OUTMIS ((uint32_t)0x00000002)
+
+
+
+
+
+
+
+#define DAC_CR_EN1 ((uint32_t)0x00000001)
+#define DAC_CR_BOFF1 ((uint32_t)0x00000002)
+#define DAC_CR_TEN1 ((uint32_t)0x00000004)
+
+#define DAC_CR_TSEL1 ((uint32_t)0x00000038)
+#define DAC_CR_TSEL1_0 ((uint32_t)0x00000008)
+#define DAC_CR_TSEL1_1 ((uint32_t)0x00000010)
+#define DAC_CR_TSEL1_2 ((uint32_t)0x00000020)
+
+#define DAC_CR_WAVE1 ((uint32_t)0x000000C0)
+#define DAC_CR_WAVE1_0 ((uint32_t)0x00000040)
+#define DAC_CR_WAVE1_1 ((uint32_t)0x00000080)
+
+#define DAC_CR_MAMP1 ((uint32_t)0x00000F00)
+#define DAC_CR_MAMP1_0 ((uint32_t)0x00000100)
+#define DAC_CR_MAMP1_1 ((uint32_t)0x00000200)
+#define DAC_CR_MAMP1_2 ((uint32_t)0x00000400)
+#define DAC_CR_MAMP1_3 ((uint32_t)0x00000800)
+
+#define DAC_CR_DMAEN1 ((uint32_t)0x00001000)
+#define DAC_CR_EN2 ((uint32_t)0x00010000)
+#define DAC_CR_BOFF2 ((uint32_t)0x00020000)
+#define DAC_CR_TEN2 ((uint32_t)0x00040000)
+
+#define DAC_CR_TSEL2 ((uint32_t)0x00380000)
+#define DAC_CR_TSEL2_0 ((uint32_t)0x00080000)
+#define DAC_CR_TSEL2_1 ((uint32_t)0x00100000)
+#define DAC_CR_TSEL2_2 ((uint32_t)0x00200000)
+
+#define DAC_CR_WAVE2 ((uint32_t)0x00C00000)
+#define DAC_CR_WAVE2_0 ((uint32_t)0x00400000)
+#define DAC_CR_WAVE2_1 ((uint32_t)0x00800000)
+
+#define DAC_CR_MAMP2 ((uint32_t)0x0F000000)
+#define DAC_CR_MAMP2_0 ((uint32_t)0x01000000)
+#define DAC_CR_MAMP2_1 ((uint32_t)0x02000000)
+#define DAC_CR_MAMP2_2 ((uint32_t)0x04000000)
+#define DAC_CR_MAMP2_3 ((uint32_t)0x08000000)
+
+#define DAC_CR_DMAEN2 ((uint32_t)0x10000000)
+
+
+#define DAC_SWTRIGR_SWTRIG1 ((uint8_t)0x01)
+#define DAC_SWTRIGR_SWTRIG2 ((uint8_t)0x02)
+
+
+#define DAC_DHR12R1_DACC1DHR ((uint16_t)0x0FFF)
+
+
+#define DAC_DHR12L1_DACC1DHR ((uint16_t)0xFFF0)
+
+
+#define DAC_DHR8R1_DACC1DHR ((uint8_t)0xFF)
+
+
+#define DAC_DHR12R2_DACC2DHR ((uint16_t)0x0FFF)
+
+
+#define DAC_DHR12L2_DACC2DHR ((uint16_t)0xFFF0)
+
+
+#define DAC_DHR8R2_DACC2DHR ((uint8_t)0xFF)
+
+
+#define DAC_DHR12RD_DACC1DHR ((uint32_t)0x00000FFF)
+#define DAC_DHR12RD_DACC2DHR ((uint32_t)0x0FFF0000)
+
+
+#define DAC_DHR12LD_DACC1DHR ((uint32_t)0x0000FFF0)
+#define DAC_DHR12LD_DACC2DHR ((uint32_t)0xFFF00000)
+
+
+#define DAC_DHR8RD_DACC1DHR ((uint16_t)0x00FF)
+#define DAC_DHR8RD_DACC2DHR ((uint16_t)0xFF00)
+
+
+#define DAC_DOR1_DACC1DOR ((uint16_t)0x0FFF)
+
+
+#define DAC_DOR2_DACC2DOR ((uint16_t)0x0FFF)
+
+
+#define DAC_SR_DMAUDR1 ((uint32_t)0x00002000)
+#define DAC_SR_DMAUDR2 ((uint32_t)0x20000000)
+# 3087 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define DCMI_CR_CAPTURE ((uint32_t)0x00000001)
+#define DCMI_CR_CM ((uint32_t)0x00000002)
+#define DCMI_CR_CROP ((uint32_t)0x00000004)
+#define DCMI_CR_JPEG ((uint32_t)0x00000008)
+#define DCMI_CR_ESS ((uint32_t)0x00000010)
+#define DCMI_CR_PCKPOL ((uint32_t)0x00000020)
+#define DCMI_CR_HSPOL ((uint32_t)0x00000040)
+#define DCMI_CR_VSPOL ((uint32_t)0x00000080)
+#define DCMI_CR_FCRC_0 ((uint32_t)0x00000100)
+#define DCMI_CR_FCRC_1 ((uint32_t)0x00000200)
+#define DCMI_CR_EDM_0 ((uint32_t)0x00000400)
+#define DCMI_CR_EDM_1 ((uint32_t)0x00000800)
+#define DCMI_CR_CRE ((uint32_t)0x00001000)
+#define DCMI_CR_ENABLE ((uint32_t)0x00004000)
+
+
+#define DCMI_SR_HSYNC ((uint32_t)0x00000001)
+#define DCMI_SR_VSYNC ((uint32_t)0x00000002)
+#define DCMI_SR_FNE ((uint32_t)0x00000004)
+
+
+#define DCMI_RISR_FRAME_RIS ((uint32_t)0x00000001)
+#define DCMI_RISR_OVF_RIS ((uint32_t)0x00000002)
+#define DCMI_RISR_ERR_RIS ((uint32_t)0x00000004)
+#define DCMI_RISR_VSYNC_RIS ((uint32_t)0x00000008)
+#define DCMI_RISR_LINE_RIS ((uint32_t)0x00000010)
+
+
+#define DCMI_IER_FRAME_IE ((uint32_t)0x00000001)
+#define DCMI_IER_OVF_IE ((uint32_t)0x00000002)
+#define DCMI_IER_ERR_IE ((uint32_t)0x00000004)
+#define DCMI_IER_VSYNC_IE ((uint32_t)0x00000008)
+#define DCMI_IER_LINE_IE ((uint32_t)0x00000010)
+
+
+#define DCMI_MISR_FRAME_MIS ((uint32_t)0x00000001)
+#define DCMI_MISR_OVF_MIS ((uint32_t)0x00000002)
+#define DCMI_MISR_ERR_MIS ((uint32_t)0x00000004)
+#define DCMI_MISR_VSYNC_MIS ((uint32_t)0x00000008)
+#define DCMI_MISR_LINE_MIS ((uint32_t)0x00000010)
+
+
+#define DCMI_ICR_FRAME_ISC ((uint32_t)0x00000001)
+#define DCMI_ICR_OVF_ISC ((uint32_t)0x00000002)
+#define DCMI_ICR_ERR_ISC ((uint32_t)0x00000004)
+#define DCMI_ICR_VSYNC_ISC ((uint32_t)0x00000008)
+#define DCMI_ICR_LINE_ISC ((uint32_t)0x00000010)
+
+
+
+
+
+
+
+#define DMA_SxCR_CHSEL ((uint32_t)0x0E000000)
+#define DMA_SxCR_CHSEL_0 ((uint32_t)0x02000000)
+#define DMA_SxCR_CHSEL_1 ((uint32_t)0x04000000)
+#define DMA_SxCR_CHSEL_2 ((uint32_t)0x08000000)
+#define DMA_SxCR_MBURST ((uint32_t)0x01800000)
+#define DMA_SxCR_MBURST_0 ((uint32_t)0x00800000)
+#define DMA_SxCR_MBURST_1 ((uint32_t)0x01000000)
+#define DMA_SxCR_PBURST ((uint32_t)0x00600000)
+#define DMA_SxCR_PBURST_0 ((uint32_t)0x00200000)
+#define DMA_SxCR_PBURST_1 ((uint32_t)0x00400000)
+#define DMA_SxCR_ACK ((uint32_t)0x00100000)
+#define DMA_SxCR_CT ((uint32_t)0x00080000)
+#define DMA_SxCR_DBM ((uint32_t)0x00040000)
+#define DMA_SxCR_PL ((uint32_t)0x00030000)
+#define DMA_SxCR_PL_0 ((uint32_t)0x00010000)
+#define DMA_SxCR_PL_1 ((uint32_t)0x00020000)
+#define DMA_SxCR_PINCOS ((uint32_t)0x00008000)
+#define DMA_SxCR_MSIZE ((uint32_t)0x00006000)
+#define DMA_SxCR_MSIZE_0 ((uint32_t)0x00002000)
+#define DMA_SxCR_MSIZE_1 ((uint32_t)0x00004000)
+#define DMA_SxCR_PSIZE ((uint32_t)0x00001800)
+#define DMA_SxCR_PSIZE_0 ((uint32_t)0x00000800)
+#define DMA_SxCR_PSIZE_1 ((uint32_t)0x00001000)
+#define DMA_SxCR_MINC ((uint32_t)0x00000400)
+#define DMA_SxCR_PINC ((uint32_t)0x00000200)
+#define DMA_SxCR_CIRC ((uint32_t)0x00000100)
+#define DMA_SxCR_DIR ((uint32_t)0x000000C0)
+#define DMA_SxCR_DIR_0 ((uint32_t)0x00000040)
+#define DMA_SxCR_DIR_1 ((uint32_t)0x00000080)
+#define DMA_SxCR_PFCTRL ((uint32_t)0x00000020)
+#define DMA_SxCR_TCIE ((uint32_t)0x00000010)
+#define DMA_SxCR_HTIE ((uint32_t)0x00000008)
+#define DMA_SxCR_TEIE ((uint32_t)0x00000004)
+#define DMA_SxCR_DMEIE ((uint32_t)0x00000002)
+#define DMA_SxCR_EN ((uint32_t)0x00000001)
+
+
+#define DMA_SxNDT ((uint32_t)0x0000FFFF)
+#define DMA_SxNDT_0 ((uint32_t)0x00000001)
+#define DMA_SxNDT_1 ((uint32_t)0x00000002)
+#define DMA_SxNDT_2 ((uint32_t)0x00000004)
+#define DMA_SxNDT_3 ((uint32_t)0x00000008)
+#define DMA_SxNDT_4 ((uint32_t)0x00000010)
+#define DMA_SxNDT_5 ((uint32_t)0x00000020)
+#define DMA_SxNDT_6 ((uint32_t)0x00000040)
+#define DMA_SxNDT_7 ((uint32_t)0x00000080)
+#define DMA_SxNDT_8 ((uint32_t)0x00000100)
+#define DMA_SxNDT_9 ((uint32_t)0x00000200)
+#define DMA_SxNDT_10 ((uint32_t)0x00000400)
+#define DMA_SxNDT_11 ((uint32_t)0x00000800)
+#define DMA_SxNDT_12 ((uint32_t)0x00001000)
+#define DMA_SxNDT_13 ((uint32_t)0x00002000)
+#define DMA_SxNDT_14 ((uint32_t)0x00004000)
+#define DMA_SxNDT_15 ((uint32_t)0x00008000)
+
+
+#define DMA_SxFCR_FEIE ((uint32_t)0x00000080)
+#define DMA_SxFCR_FS ((uint32_t)0x00000038)
+#define DMA_SxFCR_FS_0 ((uint32_t)0x00000008)
+#define DMA_SxFCR_FS_1 ((uint32_t)0x00000010)
+#define DMA_SxFCR_FS_2 ((uint32_t)0x00000020)
+#define DMA_SxFCR_DMDIS ((uint32_t)0x00000004)
+#define DMA_SxFCR_FTH ((uint32_t)0x00000003)
+#define DMA_SxFCR_FTH_0 ((uint32_t)0x00000001)
+#define DMA_SxFCR_FTH_1 ((uint32_t)0x00000002)
+
+
+#define DMA_LISR_TCIF3 ((uint32_t)0x08000000)
+#define DMA_LISR_HTIF3 ((uint32_t)0x04000000)
+#define DMA_LISR_TEIF3 ((uint32_t)0x02000000)
+#define DMA_LISR_DMEIF3 ((uint32_t)0x01000000)
+#define DMA_LISR_FEIF3 ((uint32_t)0x00400000)
+#define DMA_LISR_TCIF2 ((uint32_t)0x00200000)
+#define DMA_LISR_HTIF2 ((uint32_t)0x00100000)
+#define DMA_LISR_TEIF2 ((uint32_t)0x00080000)
+#define DMA_LISR_DMEIF2 ((uint32_t)0x00040000)
+#define DMA_LISR_FEIF2 ((uint32_t)0x00010000)
+#define DMA_LISR_TCIF1 ((uint32_t)0x00000800)
+#define DMA_LISR_HTIF1 ((uint32_t)0x00000400)
+#define DMA_LISR_TEIF1 ((uint32_t)0x00000200)
+#define DMA_LISR_DMEIF1 ((uint32_t)0x00000100)
+#define DMA_LISR_FEIF1 ((uint32_t)0x00000040)
+#define DMA_LISR_TCIF0 ((uint32_t)0x00000020)
+#define DMA_LISR_HTIF0 ((uint32_t)0x00000010)
+#define DMA_LISR_TEIF0 ((uint32_t)0x00000008)
+#define DMA_LISR_DMEIF0 ((uint32_t)0x00000004)
+#define DMA_LISR_FEIF0 ((uint32_t)0x00000001)
+
+
+#define DMA_HISR_TCIF7 ((uint32_t)0x08000000)
+#define DMA_HISR_HTIF7 ((uint32_t)0x04000000)
+#define DMA_HISR_TEIF7 ((uint32_t)0x02000000)
+#define DMA_HISR_DMEIF7 ((uint32_t)0x01000000)
+#define DMA_HISR_FEIF7 ((uint32_t)0x00400000)
+#define DMA_HISR_TCIF6 ((uint32_t)0x00200000)
+#define DMA_HISR_HTIF6 ((uint32_t)0x00100000)
+#define DMA_HISR_TEIF6 ((uint32_t)0x00080000)
+#define DMA_HISR_DMEIF6 ((uint32_t)0x00040000)
+#define DMA_HISR_FEIF6 ((uint32_t)0x00010000)
+#define DMA_HISR_TCIF5 ((uint32_t)0x00000800)
+#define DMA_HISR_HTIF5 ((uint32_t)0x00000400)
+#define DMA_HISR_TEIF5 ((uint32_t)0x00000200)
+#define DMA_HISR_DMEIF5 ((uint32_t)0x00000100)
+#define DMA_HISR_FEIF5 ((uint32_t)0x00000040)
+#define DMA_HISR_TCIF4 ((uint32_t)0x00000020)
+#define DMA_HISR_HTIF4 ((uint32_t)0x00000010)
+#define DMA_HISR_TEIF4 ((uint32_t)0x00000008)
+#define DMA_HISR_DMEIF4 ((uint32_t)0x00000004)
+#define DMA_HISR_FEIF4 ((uint32_t)0x00000001)
+
+
+#define DMA_LIFCR_CTCIF3 ((uint32_t)0x08000000)
+#define DMA_LIFCR_CHTIF3 ((uint32_t)0x04000000)
+#define DMA_LIFCR_CTEIF3 ((uint32_t)0x02000000)
+#define DMA_LIFCR_CDMEIF3 ((uint32_t)0x01000000)
+#define DMA_LIFCR_CFEIF3 ((uint32_t)0x00400000)
+#define DMA_LIFCR_CTCIF2 ((uint32_t)0x00200000)
+#define DMA_LIFCR_CHTIF2 ((uint32_t)0x00100000)
+#define DMA_LIFCR_CTEIF2 ((uint32_t)0x00080000)
+#define DMA_LIFCR_CDMEIF2 ((uint32_t)0x00040000)
+#define DMA_LIFCR_CFEIF2 ((uint32_t)0x00010000)
+#define DMA_LIFCR_CTCIF1 ((uint32_t)0x00000800)
+#define DMA_LIFCR_CHTIF1 ((uint32_t)0x00000400)
+#define DMA_LIFCR_CTEIF1 ((uint32_t)0x00000200)
+#define DMA_LIFCR_CDMEIF1 ((uint32_t)0x00000100)
+#define DMA_LIFCR_CFEIF1 ((uint32_t)0x00000040)
+#define DMA_LIFCR_CTCIF0 ((uint32_t)0x00000020)
+#define DMA_LIFCR_CHTIF0 ((uint32_t)0x00000010)
+#define DMA_LIFCR_CTEIF0 ((uint32_t)0x00000008)
+#define DMA_LIFCR_CDMEIF0 ((uint32_t)0x00000004)
+#define DMA_LIFCR_CFEIF0 ((uint32_t)0x00000001)
+
+
+#define DMA_HIFCR_CTCIF7 ((uint32_t)0x08000000)
+#define DMA_HIFCR_CHTIF7 ((uint32_t)0x04000000)
+#define DMA_HIFCR_CTEIF7 ((uint32_t)0x02000000)
+#define DMA_HIFCR_CDMEIF7 ((uint32_t)0x01000000)
+#define DMA_HIFCR_CFEIF7 ((uint32_t)0x00400000)
+#define DMA_HIFCR_CTCIF6 ((uint32_t)0x00200000)
+#define DMA_HIFCR_CHTIF6 ((uint32_t)0x00100000)
+#define DMA_HIFCR_CTEIF6 ((uint32_t)0x00080000)
+#define DMA_HIFCR_CDMEIF6 ((uint32_t)0x00040000)
+#define DMA_HIFCR_CFEIF6 ((uint32_t)0x00010000)
+#define DMA_HIFCR_CTCIF5 ((uint32_t)0x00000800)
+#define DMA_HIFCR_CHTIF5 ((uint32_t)0x00000400)
+#define DMA_HIFCR_CTEIF5 ((uint32_t)0x00000200)
+#define DMA_HIFCR_CDMEIF5 ((uint32_t)0x00000100)
+#define DMA_HIFCR_CFEIF5 ((uint32_t)0x00000040)
+#define DMA_HIFCR_CTCIF4 ((uint32_t)0x00000020)
+#define DMA_HIFCR_CHTIF4 ((uint32_t)0x00000010)
+#define DMA_HIFCR_CTEIF4 ((uint32_t)0x00000008)
+#define DMA_HIFCR_CDMEIF4 ((uint32_t)0x00000004)
+#define DMA_HIFCR_CFEIF4 ((uint32_t)0x00000001)
+# 3302 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define EXTI_IMR_MR0 ((uint32_t)0x00000001)
+#define EXTI_IMR_MR1 ((uint32_t)0x00000002)
+#define EXTI_IMR_MR2 ((uint32_t)0x00000004)
+#define EXTI_IMR_MR3 ((uint32_t)0x00000008)
+#define EXTI_IMR_MR4 ((uint32_t)0x00000010)
+#define EXTI_IMR_MR5 ((uint32_t)0x00000020)
+#define EXTI_IMR_MR6 ((uint32_t)0x00000040)
+#define EXTI_IMR_MR7 ((uint32_t)0x00000080)
+#define EXTI_IMR_MR8 ((uint32_t)0x00000100)
+#define EXTI_IMR_MR9 ((uint32_t)0x00000200)
+#define EXTI_IMR_MR10 ((uint32_t)0x00000400)
+#define EXTI_IMR_MR11 ((uint32_t)0x00000800)
+#define EXTI_IMR_MR12 ((uint32_t)0x00001000)
+#define EXTI_IMR_MR13 ((uint32_t)0x00002000)
+#define EXTI_IMR_MR14 ((uint32_t)0x00004000)
+#define EXTI_IMR_MR15 ((uint32_t)0x00008000)
+#define EXTI_IMR_MR16 ((uint32_t)0x00010000)
+#define EXTI_IMR_MR17 ((uint32_t)0x00020000)
+#define EXTI_IMR_MR18 ((uint32_t)0x00040000)
+#define EXTI_IMR_MR19 ((uint32_t)0x00080000)
+
+
+#define EXTI_EMR_MR0 ((uint32_t)0x00000001)
+#define EXTI_EMR_MR1 ((uint32_t)0x00000002)
+#define EXTI_EMR_MR2 ((uint32_t)0x00000004)
+#define EXTI_EMR_MR3 ((uint32_t)0x00000008)
+#define EXTI_EMR_MR4 ((uint32_t)0x00000010)
+#define EXTI_EMR_MR5 ((uint32_t)0x00000020)
+#define EXTI_EMR_MR6 ((uint32_t)0x00000040)
+#define EXTI_EMR_MR7 ((uint32_t)0x00000080)
+#define EXTI_EMR_MR8 ((uint32_t)0x00000100)
+#define EXTI_EMR_MR9 ((uint32_t)0x00000200)
+#define EXTI_EMR_MR10 ((uint32_t)0x00000400)
+#define EXTI_EMR_MR11 ((uint32_t)0x00000800)
+#define EXTI_EMR_MR12 ((uint32_t)0x00001000)
+#define EXTI_EMR_MR13 ((uint32_t)0x00002000)
+#define EXTI_EMR_MR14 ((uint32_t)0x00004000)
+#define EXTI_EMR_MR15 ((uint32_t)0x00008000)
+#define EXTI_EMR_MR16 ((uint32_t)0x00010000)
+#define EXTI_EMR_MR17 ((uint32_t)0x00020000)
+#define EXTI_EMR_MR18 ((uint32_t)0x00040000)
+#define EXTI_EMR_MR19 ((uint32_t)0x00080000)
+
+
+#define EXTI_RTSR_TR0 ((uint32_t)0x00000001)
+#define EXTI_RTSR_TR1 ((uint32_t)0x00000002)
+#define EXTI_RTSR_TR2 ((uint32_t)0x00000004)
+#define EXTI_RTSR_TR3 ((uint32_t)0x00000008)
+#define EXTI_RTSR_TR4 ((uint32_t)0x00000010)
+#define EXTI_RTSR_TR5 ((uint32_t)0x00000020)
+#define EXTI_RTSR_TR6 ((uint32_t)0x00000040)
+#define EXTI_RTSR_TR7 ((uint32_t)0x00000080)
+#define EXTI_RTSR_TR8 ((uint32_t)0x00000100)
+#define EXTI_RTSR_TR9 ((uint32_t)0x00000200)
+#define EXTI_RTSR_TR10 ((uint32_t)0x00000400)
+#define EXTI_RTSR_TR11 ((uint32_t)0x00000800)
+#define EXTI_RTSR_TR12 ((uint32_t)0x00001000)
+#define EXTI_RTSR_TR13 ((uint32_t)0x00002000)
+#define EXTI_RTSR_TR14 ((uint32_t)0x00004000)
+#define EXTI_RTSR_TR15 ((uint32_t)0x00008000)
+#define EXTI_RTSR_TR16 ((uint32_t)0x00010000)
+#define EXTI_RTSR_TR17 ((uint32_t)0x00020000)
+#define EXTI_RTSR_TR18 ((uint32_t)0x00040000)
+#define EXTI_RTSR_TR19 ((uint32_t)0x00080000)
+
+
+#define EXTI_FTSR_TR0 ((uint32_t)0x00000001)
+#define EXTI_FTSR_TR1 ((uint32_t)0x00000002)
+#define EXTI_FTSR_TR2 ((uint32_t)0x00000004)
+#define EXTI_FTSR_TR3 ((uint32_t)0x00000008)
+#define EXTI_FTSR_TR4 ((uint32_t)0x00000010)
+#define EXTI_FTSR_TR5 ((uint32_t)0x00000020)
+#define EXTI_FTSR_TR6 ((uint32_t)0x00000040)
+#define EXTI_FTSR_TR7 ((uint32_t)0x00000080)
+#define EXTI_FTSR_TR8 ((uint32_t)0x00000100)
+#define EXTI_FTSR_TR9 ((uint32_t)0x00000200)
+#define EXTI_FTSR_TR10 ((uint32_t)0x00000400)
+#define EXTI_FTSR_TR11 ((uint32_t)0x00000800)
+#define EXTI_FTSR_TR12 ((uint32_t)0x00001000)
+#define EXTI_FTSR_TR13 ((uint32_t)0x00002000)
+#define EXTI_FTSR_TR14 ((uint32_t)0x00004000)
+#define EXTI_FTSR_TR15 ((uint32_t)0x00008000)
+#define EXTI_FTSR_TR16 ((uint32_t)0x00010000)
+#define EXTI_FTSR_TR17 ((uint32_t)0x00020000)
+#define EXTI_FTSR_TR18 ((uint32_t)0x00040000)
+#define EXTI_FTSR_TR19 ((uint32_t)0x00080000)
+
+
+#define EXTI_SWIER_SWIER0 ((uint32_t)0x00000001)
+#define EXTI_SWIER_SWIER1 ((uint32_t)0x00000002)
+#define EXTI_SWIER_SWIER2 ((uint32_t)0x00000004)
+#define EXTI_SWIER_SWIER3 ((uint32_t)0x00000008)
+#define EXTI_SWIER_SWIER4 ((uint32_t)0x00000010)
+#define EXTI_SWIER_SWIER5 ((uint32_t)0x00000020)
+#define EXTI_SWIER_SWIER6 ((uint32_t)0x00000040)
+#define EXTI_SWIER_SWIER7 ((uint32_t)0x00000080)
+#define EXTI_SWIER_SWIER8 ((uint32_t)0x00000100)
+#define EXTI_SWIER_SWIER9 ((uint32_t)0x00000200)
+#define EXTI_SWIER_SWIER10 ((uint32_t)0x00000400)
+#define EXTI_SWIER_SWIER11 ((uint32_t)0x00000800)
+#define EXTI_SWIER_SWIER12 ((uint32_t)0x00001000)
+#define EXTI_SWIER_SWIER13 ((uint32_t)0x00002000)
+#define EXTI_SWIER_SWIER14 ((uint32_t)0x00004000)
+#define EXTI_SWIER_SWIER15 ((uint32_t)0x00008000)
+#define EXTI_SWIER_SWIER16 ((uint32_t)0x00010000)
+#define EXTI_SWIER_SWIER17 ((uint32_t)0x00020000)
+#define EXTI_SWIER_SWIER18 ((uint32_t)0x00040000)
+#define EXTI_SWIER_SWIER19 ((uint32_t)0x00080000)
+
+
+#define EXTI_PR_PR0 ((uint32_t)0x00000001)
+#define EXTI_PR_PR1 ((uint32_t)0x00000002)
+#define EXTI_PR_PR2 ((uint32_t)0x00000004)
+#define EXTI_PR_PR3 ((uint32_t)0x00000008)
+#define EXTI_PR_PR4 ((uint32_t)0x00000010)
+#define EXTI_PR_PR5 ((uint32_t)0x00000020)
+#define EXTI_PR_PR6 ((uint32_t)0x00000040)
+#define EXTI_PR_PR7 ((uint32_t)0x00000080)
+#define EXTI_PR_PR8 ((uint32_t)0x00000100)
+#define EXTI_PR_PR9 ((uint32_t)0x00000200)
+#define EXTI_PR_PR10 ((uint32_t)0x00000400)
+#define EXTI_PR_PR11 ((uint32_t)0x00000800)
+#define EXTI_PR_PR12 ((uint32_t)0x00001000)
+#define EXTI_PR_PR13 ((uint32_t)0x00002000)
+#define EXTI_PR_PR14 ((uint32_t)0x00004000)
+#define EXTI_PR_PR15 ((uint32_t)0x00008000)
+#define EXTI_PR_PR16 ((uint32_t)0x00010000)
+#define EXTI_PR_PR17 ((uint32_t)0x00020000)
+#define EXTI_PR_PR18 ((uint32_t)0x00040000)
+#define EXTI_PR_PR19 ((uint32_t)0x00080000)
+
+
+
+
+
+
+
+#define FLASH_ACR_LATENCY ((uint32_t)0x0000000F)
+#define FLASH_ACR_LATENCY_0WS ((uint32_t)0x00000000)
+#define FLASH_ACR_LATENCY_1WS ((uint32_t)0x00000001)
+#define FLASH_ACR_LATENCY_2WS ((uint32_t)0x00000002)
+#define FLASH_ACR_LATENCY_3WS ((uint32_t)0x00000003)
+#define FLASH_ACR_LATENCY_4WS ((uint32_t)0x00000004)
+#define FLASH_ACR_LATENCY_5WS ((uint32_t)0x00000005)
+#define FLASH_ACR_LATENCY_6WS ((uint32_t)0x00000006)
+#define FLASH_ACR_LATENCY_7WS ((uint32_t)0x00000007)
+
+#define FLASH_ACR_PRFTEN ((uint32_t)0x00000100)
+#define FLASH_ACR_ICEN ((uint32_t)0x00000200)
+#define FLASH_ACR_DCEN ((uint32_t)0x00000400)
+#define FLASH_ACR_ICRST ((uint32_t)0x00000800)
+#define FLASH_ACR_DCRST ((uint32_t)0x00001000)
+#define FLASH_ACR_BYTE0_ADDRESS ((uint32_t)0x40023C00)
+#define FLASH_ACR_BYTE2_ADDRESS ((uint32_t)0x40023C03)
+
+
+#define FLASH_SR_EOP ((uint32_t)0x00000001)
+#define FLASH_SR_SOP ((uint32_t)0x00000002)
+#define FLASH_SR_WRPERR ((uint32_t)0x00000010)
+#define FLASH_SR_PGAERR ((uint32_t)0x00000020)
+#define FLASH_SR_PGPERR ((uint32_t)0x00000040)
+#define FLASH_SR_PGSERR ((uint32_t)0x00000080)
+#define FLASH_SR_BSY ((uint32_t)0x00010000)
+
+
+#define FLASH_CR_PG ((uint32_t)0x00000001)
+#define FLASH_CR_SER ((uint32_t)0x00000002)
+#define FLASH_CR_MER ((uint32_t)0x00000004)
+#define FLASH_CR_MER1 FLASH_CR_MER
+#define FLASH_CR_SNB ((uint32_t)0x000000F8)
+#define FLASH_CR_SNB_0 ((uint32_t)0x00000008)
+#define FLASH_CR_SNB_1 ((uint32_t)0x00000010)
+#define FLASH_CR_SNB_2 ((uint32_t)0x00000020)
+#define FLASH_CR_SNB_3 ((uint32_t)0x00000040)
+#define FLASH_CR_SNB_4 ((uint32_t)0x00000040)
+#define FLASH_CR_PSIZE ((uint32_t)0x00000300)
+#define FLASH_CR_PSIZE_0 ((uint32_t)0x00000100)
+#define FLASH_CR_PSIZE_1 ((uint32_t)0x00000200)
+#define FLASH_CR_MER2 ((uint32_t)0x00008000)
+#define FLASH_CR_STRT ((uint32_t)0x00010000)
+#define FLASH_CR_EOPIE ((uint32_t)0x01000000)
+#define FLASH_CR_LOCK ((uint32_t)0x80000000)
+
+
+#define FLASH_OPTCR_OPTLOCK ((uint32_t)0x00000001)
+#define FLASH_OPTCR_OPTSTRT ((uint32_t)0x00000002)
+#define FLASH_OPTCR_BOR_LEV_0 ((uint32_t)0x00000004)
+#define FLASH_OPTCR_BOR_LEV_1 ((uint32_t)0x00000008)
+#define FLASH_OPTCR_BOR_LEV ((uint32_t)0x0000000C)
+#define FLASH_OPTCR_WDG_SW ((uint32_t)0x00000020)
+#define FLASH_OPTCR_nRST_STOP ((uint32_t)0x00000040)
+#define FLASH_OPTCR_nRST_STDBY ((uint32_t)0x00000080)
+#define FLASH_OPTCR_RDP ((uint32_t)0x0000FF00)
+#define FLASH_OPTCR_RDP_0 ((uint32_t)0x00000100)
+#define FLASH_OPTCR_RDP_1 ((uint32_t)0x00000200)
+#define FLASH_OPTCR_RDP_2 ((uint32_t)0x00000400)
+#define FLASH_OPTCR_RDP_3 ((uint32_t)0x00000800)
+#define FLASH_OPTCR_RDP_4 ((uint32_t)0x00001000)
+#define FLASH_OPTCR_RDP_5 ((uint32_t)0x00002000)
+#define FLASH_OPTCR_RDP_6 ((uint32_t)0x00004000)
+#define FLASH_OPTCR_RDP_7 ((uint32_t)0x00008000)
+#define FLASH_OPTCR_nWRP ((uint32_t)0x0FFF0000)
+#define FLASH_OPTCR_nWRP_0 ((uint32_t)0x00010000)
+#define FLASH_OPTCR_nWRP_1 ((uint32_t)0x00020000)
+#define FLASH_OPTCR_nWRP_2 ((uint32_t)0x00040000)
+#define FLASH_OPTCR_nWRP_3 ((uint32_t)0x00080000)
+#define FLASH_OPTCR_nWRP_4 ((uint32_t)0x00100000)
+#define FLASH_OPTCR_nWRP_5 ((uint32_t)0x00200000)
+#define FLASH_OPTCR_nWRP_6 ((uint32_t)0x00400000)
+#define FLASH_OPTCR_nWRP_7 ((uint32_t)0x00800000)
+#define FLASH_OPTCR_nWRP_8 ((uint32_t)0x01000000)
+#define FLASH_OPTCR_nWRP_9 ((uint32_t)0x02000000)
+#define FLASH_OPTCR_nWRP_10 ((uint32_t)0x04000000)
+#define FLASH_OPTCR_nWRP_11 ((uint32_t)0x08000000)
+
+
+#define FLASH_OPTCR1_nWRP ((uint32_t)0x0FFF0000)
+#define FLASH_OPTCR1_nWRP_0 ((uint32_t)0x00010000)
+#define FLASH_OPTCR1_nWRP_1 ((uint32_t)0x00020000)
+#define FLASH_OPTCR1_nWRP_2 ((uint32_t)0x00040000)
+#define FLASH_OPTCR1_nWRP_3 ((uint32_t)0x00080000)
+#define FLASH_OPTCR1_nWRP_4 ((uint32_t)0x00100000)
+#define FLASH_OPTCR1_nWRP_5 ((uint32_t)0x00200000)
+#define FLASH_OPTCR1_nWRP_6 ((uint32_t)0x00400000)
+#define FLASH_OPTCR1_nWRP_7 ((uint32_t)0x00800000)
+#define FLASH_OPTCR1_nWRP_8 ((uint32_t)0x01000000)
+#define FLASH_OPTCR1_nWRP_9 ((uint32_t)0x02000000)
+#define FLASH_OPTCR1_nWRP_10 ((uint32_t)0x04000000)
+#define FLASH_OPTCR1_nWRP_11 ((uint32_t)0x08000000)
+# 3539 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define FSMC_BCR1_MBKEN ((uint32_t)0x00000001)
+#define FSMC_BCR1_MUXEN ((uint32_t)0x00000002)
+
+#define FSMC_BCR1_MTYP ((uint32_t)0x0000000C)
+#define FSMC_BCR1_MTYP_0 ((uint32_t)0x00000004)
+#define FSMC_BCR1_MTYP_1 ((uint32_t)0x00000008)
+
+#define FSMC_BCR1_MWID ((uint32_t)0x00000030)
+#define FSMC_BCR1_MWID_0 ((uint32_t)0x00000010)
+#define FSMC_BCR1_MWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_BCR1_FACCEN ((uint32_t)0x00000040)
+#define FSMC_BCR1_BURSTEN ((uint32_t)0x00000100)
+#define FSMC_BCR1_WAITPOL ((uint32_t)0x00000200)
+#define FSMC_BCR1_WRAPMOD ((uint32_t)0x00000400)
+#define FSMC_BCR1_WAITCFG ((uint32_t)0x00000800)
+#define FSMC_BCR1_WREN ((uint32_t)0x00001000)
+#define FSMC_BCR1_WAITEN ((uint32_t)0x00002000)
+#define FSMC_BCR1_EXTMOD ((uint32_t)0x00004000)
+#define FSMC_BCR1_ASYNCWAIT ((uint32_t)0x00008000)
+#define FSMC_BCR1_CBURSTRW ((uint32_t)0x00080000)
+
+
+#define FSMC_BCR2_MBKEN ((uint32_t)0x00000001)
+#define FSMC_BCR2_MUXEN ((uint32_t)0x00000002)
+
+#define FSMC_BCR2_MTYP ((uint32_t)0x0000000C)
+#define FSMC_BCR2_MTYP_0 ((uint32_t)0x00000004)
+#define FSMC_BCR2_MTYP_1 ((uint32_t)0x00000008)
+
+#define FSMC_BCR2_MWID ((uint32_t)0x00000030)
+#define FSMC_BCR2_MWID_0 ((uint32_t)0x00000010)
+#define FSMC_BCR2_MWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_BCR2_FACCEN ((uint32_t)0x00000040)
+#define FSMC_BCR2_BURSTEN ((uint32_t)0x00000100)
+#define FSMC_BCR2_WAITPOL ((uint32_t)0x00000200)
+#define FSMC_BCR2_WRAPMOD ((uint32_t)0x00000400)
+#define FSMC_BCR2_WAITCFG ((uint32_t)0x00000800)
+#define FSMC_BCR2_WREN ((uint32_t)0x00001000)
+#define FSMC_BCR2_WAITEN ((uint32_t)0x00002000)
+#define FSMC_BCR2_EXTMOD ((uint32_t)0x00004000)
+#define FSMC_BCR2_ASYNCWAIT ((uint32_t)0x00008000)
+#define FSMC_BCR2_CBURSTRW ((uint32_t)0x00080000)
+
+
+#define FSMC_BCR3_MBKEN ((uint32_t)0x00000001)
+#define FSMC_BCR3_MUXEN ((uint32_t)0x00000002)
+
+#define FSMC_BCR3_MTYP ((uint32_t)0x0000000C)
+#define FSMC_BCR3_MTYP_0 ((uint32_t)0x00000004)
+#define FSMC_BCR3_MTYP_1 ((uint32_t)0x00000008)
+
+#define FSMC_BCR3_MWID ((uint32_t)0x00000030)
+#define FSMC_BCR3_MWID_0 ((uint32_t)0x00000010)
+#define FSMC_BCR3_MWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_BCR3_FACCEN ((uint32_t)0x00000040)
+#define FSMC_BCR3_BURSTEN ((uint32_t)0x00000100)
+#define FSMC_BCR3_WAITPOL ((uint32_t)0x00000200)
+#define FSMC_BCR3_WRAPMOD ((uint32_t)0x00000400)
+#define FSMC_BCR3_WAITCFG ((uint32_t)0x00000800)
+#define FSMC_BCR3_WREN ((uint32_t)0x00001000)
+#define FSMC_BCR3_WAITEN ((uint32_t)0x00002000)
+#define FSMC_BCR3_EXTMOD ((uint32_t)0x00004000)
+#define FSMC_BCR3_ASYNCWAIT ((uint32_t)0x00008000)
+#define FSMC_BCR3_CBURSTRW ((uint32_t)0x00080000)
+
+
+#define FSMC_BCR4_MBKEN ((uint32_t)0x00000001)
+#define FSMC_BCR4_MUXEN ((uint32_t)0x00000002)
+
+#define FSMC_BCR4_MTYP ((uint32_t)0x0000000C)
+#define FSMC_BCR4_MTYP_0 ((uint32_t)0x00000004)
+#define FSMC_BCR4_MTYP_1 ((uint32_t)0x00000008)
+
+#define FSMC_BCR4_MWID ((uint32_t)0x00000030)
+#define FSMC_BCR4_MWID_0 ((uint32_t)0x00000010)
+#define FSMC_BCR4_MWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_BCR4_FACCEN ((uint32_t)0x00000040)
+#define FSMC_BCR4_BURSTEN ((uint32_t)0x00000100)
+#define FSMC_BCR4_WAITPOL ((uint32_t)0x00000200)
+#define FSMC_BCR4_WRAPMOD ((uint32_t)0x00000400)
+#define FSMC_BCR4_WAITCFG ((uint32_t)0x00000800)
+#define FSMC_BCR4_WREN ((uint32_t)0x00001000)
+#define FSMC_BCR4_WAITEN ((uint32_t)0x00002000)
+#define FSMC_BCR4_EXTMOD ((uint32_t)0x00004000)
+#define FSMC_BCR4_ASYNCWAIT ((uint32_t)0x00008000)
+#define FSMC_BCR4_CBURSTRW ((uint32_t)0x00080000)
+
+
+#define FSMC_BTR1_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BTR1_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BTR1_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BTR1_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BTR1_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BTR1_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BTR1_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BTR1_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BTR1_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BTR1_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BTR1_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BTR1_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BTR1_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BTR1_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BTR1_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BTR1_BUSTURN ((uint32_t)0x000F0000)
+#define FSMC_BTR1_BUSTURN_0 ((uint32_t)0x00010000)
+#define FSMC_BTR1_BUSTURN_1 ((uint32_t)0x00020000)
+#define FSMC_BTR1_BUSTURN_2 ((uint32_t)0x00040000)
+#define FSMC_BTR1_BUSTURN_3 ((uint32_t)0x00080000)
+
+#define FSMC_BTR1_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BTR1_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BTR1_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BTR1_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BTR1_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BTR1_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BTR1_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BTR1_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BTR1_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BTR1_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BTR1_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BTR1_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BTR1_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BTR2_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BTR2_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BTR2_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BTR2_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BTR2_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BTR2_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BTR2_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BTR2_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BTR2_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BTR2_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BTR2_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BTR2_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BTR2_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BTR2_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BTR2_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BTR2_BUSTURN ((uint32_t)0x000F0000)
+#define FSMC_BTR2_BUSTURN_0 ((uint32_t)0x00010000)
+#define FSMC_BTR2_BUSTURN_1 ((uint32_t)0x00020000)
+#define FSMC_BTR2_BUSTURN_2 ((uint32_t)0x00040000)
+#define FSMC_BTR2_BUSTURN_3 ((uint32_t)0x00080000)
+
+#define FSMC_BTR2_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BTR2_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BTR2_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BTR2_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BTR2_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BTR2_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BTR2_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BTR2_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BTR2_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BTR2_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BTR2_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BTR2_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BTR2_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BTR3_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BTR3_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BTR3_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BTR3_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BTR3_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BTR3_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BTR3_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BTR3_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BTR3_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BTR3_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BTR3_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BTR3_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BTR3_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BTR3_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BTR3_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BTR3_BUSTURN ((uint32_t)0x000F0000)
+#define FSMC_BTR3_BUSTURN_0 ((uint32_t)0x00010000)
+#define FSMC_BTR3_BUSTURN_1 ((uint32_t)0x00020000)
+#define FSMC_BTR3_BUSTURN_2 ((uint32_t)0x00040000)
+#define FSMC_BTR3_BUSTURN_3 ((uint32_t)0x00080000)
+
+#define FSMC_BTR3_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BTR3_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BTR3_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BTR3_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BTR3_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BTR3_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BTR3_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BTR3_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BTR3_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BTR3_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BTR3_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BTR3_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BTR3_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BTR4_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BTR4_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BTR4_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BTR4_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BTR4_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BTR4_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BTR4_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BTR4_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BTR4_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BTR4_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BTR4_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BTR4_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BTR4_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BTR4_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BTR4_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BTR4_BUSTURN ((uint32_t)0x000F0000)
+#define FSMC_BTR4_BUSTURN_0 ((uint32_t)0x00010000)
+#define FSMC_BTR4_BUSTURN_1 ((uint32_t)0x00020000)
+#define FSMC_BTR4_BUSTURN_2 ((uint32_t)0x00040000)
+#define FSMC_BTR4_BUSTURN_3 ((uint32_t)0x00080000)
+
+#define FSMC_BTR4_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BTR4_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BTR4_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BTR4_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BTR4_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BTR4_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BTR4_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BTR4_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BTR4_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BTR4_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BTR4_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BTR4_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BTR4_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BWTR1_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BWTR1_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BWTR1_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BWTR1_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BWTR1_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BWTR1_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BWTR1_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BWTR1_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BWTR1_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BWTR1_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BWTR1_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BWTR1_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BWTR1_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BWTR1_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BWTR1_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BWTR1_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BWTR1_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BWTR1_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BWTR1_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BWTR1_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BWTR1_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BWTR1_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BWTR1_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BWTR1_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BWTR1_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BWTR1_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BWTR1_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BWTR1_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BWTR2_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BWTR2_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BWTR2_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BWTR2_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BWTR2_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BWTR2_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BWTR2_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BWTR2_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BWTR2_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BWTR2_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BWTR2_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BWTR2_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BWTR2_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BWTR2_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BWTR2_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BWTR2_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BWTR2_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BWTR2_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BWTR2_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BWTR2_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BWTR2_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BWTR2_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BWTR2_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BWTR2_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BWTR2_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BWTR2_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BWTR2_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BWTR2_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BWTR3_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BWTR3_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BWTR3_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BWTR3_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BWTR3_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BWTR3_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BWTR3_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BWTR3_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BWTR3_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BWTR3_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BWTR3_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BWTR3_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BWTR3_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BWTR3_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BWTR3_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BWTR3_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BWTR3_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BWTR3_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BWTR3_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BWTR3_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BWTR3_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BWTR3_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BWTR3_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BWTR3_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BWTR3_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BWTR3_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BWTR3_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BWTR3_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_BWTR4_ADDSET ((uint32_t)0x0000000F)
+#define FSMC_BWTR4_ADDSET_0 ((uint32_t)0x00000001)
+#define FSMC_BWTR4_ADDSET_1 ((uint32_t)0x00000002)
+#define FSMC_BWTR4_ADDSET_2 ((uint32_t)0x00000004)
+#define FSMC_BWTR4_ADDSET_3 ((uint32_t)0x00000008)
+
+#define FSMC_BWTR4_ADDHLD ((uint32_t)0x000000F0)
+#define FSMC_BWTR4_ADDHLD_0 ((uint32_t)0x00000010)
+#define FSMC_BWTR4_ADDHLD_1 ((uint32_t)0x00000020)
+#define FSMC_BWTR4_ADDHLD_2 ((uint32_t)0x00000040)
+#define FSMC_BWTR4_ADDHLD_3 ((uint32_t)0x00000080)
+
+#define FSMC_BWTR4_DATAST ((uint32_t)0x0000FF00)
+#define FSMC_BWTR4_DATAST_0 ((uint32_t)0x00000100)
+#define FSMC_BWTR4_DATAST_1 ((uint32_t)0x00000200)
+#define FSMC_BWTR4_DATAST_2 ((uint32_t)0x00000400)
+#define FSMC_BWTR4_DATAST_3 ((uint32_t)0x00000800)
+
+#define FSMC_BWTR4_CLKDIV ((uint32_t)0x00F00000)
+#define FSMC_BWTR4_CLKDIV_0 ((uint32_t)0x00100000)
+#define FSMC_BWTR4_CLKDIV_1 ((uint32_t)0x00200000)
+#define FSMC_BWTR4_CLKDIV_2 ((uint32_t)0x00400000)
+#define FSMC_BWTR4_CLKDIV_3 ((uint32_t)0x00800000)
+
+#define FSMC_BWTR4_DATLAT ((uint32_t)0x0F000000)
+#define FSMC_BWTR4_DATLAT_0 ((uint32_t)0x01000000)
+#define FSMC_BWTR4_DATLAT_1 ((uint32_t)0x02000000)
+#define FSMC_BWTR4_DATLAT_2 ((uint32_t)0x04000000)
+#define FSMC_BWTR4_DATLAT_3 ((uint32_t)0x08000000)
+
+#define FSMC_BWTR4_ACCMOD ((uint32_t)0x30000000)
+#define FSMC_BWTR4_ACCMOD_0 ((uint32_t)0x10000000)
+#define FSMC_BWTR4_ACCMOD_1 ((uint32_t)0x20000000)
+
+
+#define FSMC_PCR2_PWAITEN ((uint32_t)0x00000002)
+#define FSMC_PCR2_PBKEN ((uint32_t)0x00000004)
+#define FSMC_PCR2_PTYP ((uint32_t)0x00000008)
+
+#define FSMC_PCR2_PWID ((uint32_t)0x00000030)
+#define FSMC_PCR2_PWID_0 ((uint32_t)0x00000010)
+#define FSMC_PCR2_PWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_PCR2_ECCEN ((uint32_t)0x00000040)
+
+#define FSMC_PCR2_TCLR ((uint32_t)0x00001E00)
+#define FSMC_PCR2_TCLR_0 ((uint32_t)0x00000200)
+#define FSMC_PCR2_TCLR_1 ((uint32_t)0x00000400)
+#define FSMC_PCR2_TCLR_2 ((uint32_t)0x00000800)
+#define FSMC_PCR2_TCLR_3 ((uint32_t)0x00001000)
+
+#define FSMC_PCR2_TAR ((uint32_t)0x0001E000)
+#define FSMC_PCR2_TAR_0 ((uint32_t)0x00002000)
+#define FSMC_PCR2_TAR_1 ((uint32_t)0x00004000)
+#define FSMC_PCR2_TAR_2 ((uint32_t)0x00008000)
+#define FSMC_PCR2_TAR_3 ((uint32_t)0x00010000)
+
+#define FSMC_PCR2_ECCPS ((uint32_t)0x000E0000)
+#define FSMC_PCR2_ECCPS_0 ((uint32_t)0x00020000)
+#define FSMC_PCR2_ECCPS_1 ((uint32_t)0x00040000)
+#define FSMC_PCR2_ECCPS_2 ((uint32_t)0x00080000)
+
+
+#define FSMC_PCR3_PWAITEN ((uint32_t)0x00000002)
+#define FSMC_PCR3_PBKEN ((uint32_t)0x00000004)
+#define FSMC_PCR3_PTYP ((uint32_t)0x00000008)
+
+#define FSMC_PCR3_PWID ((uint32_t)0x00000030)
+#define FSMC_PCR3_PWID_0 ((uint32_t)0x00000010)
+#define FSMC_PCR3_PWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_PCR3_ECCEN ((uint32_t)0x00000040)
+
+#define FSMC_PCR3_TCLR ((uint32_t)0x00001E00)
+#define FSMC_PCR3_TCLR_0 ((uint32_t)0x00000200)
+#define FSMC_PCR3_TCLR_1 ((uint32_t)0x00000400)
+#define FSMC_PCR3_TCLR_2 ((uint32_t)0x00000800)
+#define FSMC_PCR3_TCLR_3 ((uint32_t)0x00001000)
+
+#define FSMC_PCR3_TAR ((uint32_t)0x0001E000)
+#define FSMC_PCR3_TAR_0 ((uint32_t)0x00002000)
+#define FSMC_PCR3_TAR_1 ((uint32_t)0x00004000)
+#define FSMC_PCR3_TAR_2 ((uint32_t)0x00008000)
+#define FSMC_PCR3_TAR_3 ((uint32_t)0x00010000)
+
+#define FSMC_PCR3_ECCPS ((uint32_t)0x000E0000)
+#define FSMC_PCR3_ECCPS_0 ((uint32_t)0x00020000)
+#define FSMC_PCR3_ECCPS_1 ((uint32_t)0x00040000)
+#define FSMC_PCR3_ECCPS_2 ((uint32_t)0x00080000)
+
+
+#define FSMC_PCR4_PWAITEN ((uint32_t)0x00000002)
+#define FSMC_PCR4_PBKEN ((uint32_t)0x00000004)
+#define FSMC_PCR4_PTYP ((uint32_t)0x00000008)
+
+#define FSMC_PCR4_PWID ((uint32_t)0x00000030)
+#define FSMC_PCR4_PWID_0 ((uint32_t)0x00000010)
+#define FSMC_PCR4_PWID_1 ((uint32_t)0x00000020)
+
+#define FSMC_PCR4_ECCEN ((uint32_t)0x00000040)
+
+#define FSMC_PCR4_TCLR ((uint32_t)0x00001E00)
+#define FSMC_PCR4_TCLR_0 ((uint32_t)0x00000200)
+#define FSMC_PCR4_TCLR_1 ((uint32_t)0x00000400)
+#define FSMC_PCR4_TCLR_2 ((uint32_t)0x00000800)
+#define FSMC_PCR4_TCLR_3 ((uint32_t)0x00001000)
+
+#define FSMC_PCR4_TAR ((uint32_t)0x0001E000)
+#define FSMC_PCR4_TAR_0 ((uint32_t)0x00002000)
+#define FSMC_PCR4_TAR_1 ((uint32_t)0x00004000)
+#define FSMC_PCR4_TAR_2 ((uint32_t)0x00008000)
+#define FSMC_PCR4_TAR_3 ((uint32_t)0x00010000)
+
+#define FSMC_PCR4_ECCPS ((uint32_t)0x000E0000)
+#define FSMC_PCR4_ECCPS_0 ((uint32_t)0x00020000)
+#define FSMC_PCR4_ECCPS_1 ((uint32_t)0x00040000)
+#define FSMC_PCR4_ECCPS_2 ((uint32_t)0x00080000)
+
+
+#define FSMC_SR2_IRS ((uint8_t)0x01)
+#define FSMC_SR2_ILS ((uint8_t)0x02)
+#define FSMC_SR2_IFS ((uint8_t)0x04)
+#define FSMC_SR2_IREN ((uint8_t)0x08)
+#define FSMC_SR2_ILEN ((uint8_t)0x10)
+#define FSMC_SR2_IFEN ((uint8_t)0x20)
+#define FSMC_SR2_FEMPT ((uint8_t)0x40)
+
+
+#define FSMC_SR3_IRS ((uint8_t)0x01)
+#define FSMC_SR3_ILS ((uint8_t)0x02)
+#define FSMC_SR3_IFS ((uint8_t)0x04)
+#define FSMC_SR3_IREN ((uint8_t)0x08)
+#define FSMC_SR3_ILEN ((uint8_t)0x10)
+#define FSMC_SR3_IFEN ((uint8_t)0x20)
+#define FSMC_SR3_FEMPT ((uint8_t)0x40)
+
+
+#define FSMC_SR4_IRS ((uint8_t)0x01)
+#define FSMC_SR4_ILS ((uint8_t)0x02)
+#define FSMC_SR4_IFS ((uint8_t)0x04)
+#define FSMC_SR4_IREN ((uint8_t)0x08)
+#define FSMC_SR4_ILEN ((uint8_t)0x10)
+#define FSMC_SR4_IFEN ((uint8_t)0x20)
+#define FSMC_SR4_FEMPT ((uint8_t)0x40)
+
+
+#define FSMC_PMEM2_MEMSET2 ((uint32_t)0x000000FF)
+#define FSMC_PMEM2_MEMSET2_0 ((uint32_t)0x00000001)
+#define FSMC_PMEM2_MEMSET2_1 ((uint32_t)0x00000002)
+#define FSMC_PMEM2_MEMSET2_2 ((uint32_t)0x00000004)
+#define FSMC_PMEM2_MEMSET2_3 ((uint32_t)0x00000008)
+#define FSMC_PMEM2_MEMSET2_4 ((uint32_t)0x00000010)
+#define FSMC_PMEM2_MEMSET2_5 ((uint32_t)0x00000020)
+#define FSMC_PMEM2_MEMSET2_6 ((uint32_t)0x00000040)
+#define FSMC_PMEM2_MEMSET2_7 ((uint32_t)0x00000080)
+
+#define FSMC_PMEM2_MEMWAIT2 ((uint32_t)0x0000FF00)
+#define FSMC_PMEM2_MEMWAIT2_0 ((uint32_t)0x00000100)
+#define FSMC_PMEM2_MEMWAIT2_1 ((uint32_t)0x00000200)
+#define FSMC_PMEM2_MEMWAIT2_2 ((uint32_t)0x00000400)
+#define FSMC_PMEM2_MEMWAIT2_3 ((uint32_t)0x00000800)
+#define FSMC_PMEM2_MEMWAIT2_4 ((uint32_t)0x00001000)
+#define FSMC_PMEM2_MEMWAIT2_5 ((uint32_t)0x00002000)
+#define FSMC_PMEM2_MEMWAIT2_6 ((uint32_t)0x00004000)
+#define FSMC_PMEM2_MEMWAIT2_7 ((uint32_t)0x00008000)
+
+#define FSMC_PMEM2_MEMHOLD2 ((uint32_t)0x00FF0000)
+#define FSMC_PMEM2_MEMHOLD2_0 ((uint32_t)0x00010000)
+#define FSMC_PMEM2_MEMHOLD2_1 ((uint32_t)0x00020000)
+#define FSMC_PMEM2_MEMHOLD2_2 ((uint32_t)0x00040000)
+#define FSMC_PMEM2_MEMHOLD2_3 ((uint32_t)0x00080000)
+#define FSMC_PMEM2_MEMHOLD2_4 ((uint32_t)0x00100000)
+#define FSMC_PMEM2_MEMHOLD2_5 ((uint32_t)0x00200000)
+#define FSMC_PMEM2_MEMHOLD2_6 ((uint32_t)0x00400000)
+#define FSMC_PMEM2_MEMHOLD2_7 ((uint32_t)0x00800000)
+
+#define FSMC_PMEM2_MEMHIZ2 ((uint32_t)0xFF000000)
+#define FSMC_PMEM2_MEMHIZ2_0 ((uint32_t)0x01000000)
+#define FSMC_PMEM2_MEMHIZ2_1 ((uint32_t)0x02000000)
+#define FSMC_PMEM2_MEMHIZ2_2 ((uint32_t)0x04000000)
+#define FSMC_PMEM2_MEMHIZ2_3 ((uint32_t)0x08000000)
+#define FSMC_PMEM2_MEMHIZ2_4 ((uint32_t)0x10000000)
+#define FSMC_PMEM2_MEMHIZ2_5 ((uint32_t)0x20000000)
+#define FSMC_PMEM2_MEMHIZ2_6 ((uint32_t)0x40000000)
+#define FSMC_PMEM2_MEMHIZ2_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_PMEM3_MEMSET3 ((uint32_t)0x000000FF)
+#define FSMC_PMEM3_MEMSET3_0 ((uint32_t)0x00000001)
+#define FSMC_PMEM3_MEMSET3_1 ((uint32_t)0x00000002)
+#define FSMC_PMEM3_MEMSET3_2 ((uint32_t)0x00000004)
+#define FSMC_PMEM3_MEMSET3_3 ((uint32_t)0x00000008)
+#define FSMC_PMEM3_MEMSET3_4 ((uint32_t)0x00000010)
+#define FSMC_PMEM3_MEMSET3_5 ((uint32_t)0x00000020)
+#define FSMC_PMEM3_MEMSET3_6 ((uint32_t)0x00000040)
+#define FSMC_PMEM3_MEMSET3_7 ((uint32_t)0x00000080)
+
+#define FSMC_PMEM3_MEMWAIT3 ((uint32_t)0x0000FF00)
+#define FSMC_PMEM3_MEMWAIT3_0 ((uint32_t)0x00000100)
+#define FSMC_PMEM3_MEMWAIT3_1 ((uint32_t)0x00000200)
+#define FSMC_PMEM3_MEMWAIT3_2 ((uint32_t)0x00000400)
+#define FSMC_PMEM3_MEMWAIT3_3 ((uint32_t)0x00000800)
+#define FSMC_PMEM3_MEMWAIT3_4 ((uint32_t)0x00001000)
+#define FSMC_PMEM3_MEMWAIT3_5 ((uint32_t)0x00002000)
+#define FSMC_PMEM3_MEMWAIT3_6 ((uint32_t)0x00004000)
+#define FSMC_PMEM3_MEMWAIT3_7 ((uint32_t)0x00008000)
+
+#define FSMC_PMEM3_MEMHOLD3 ((uint32_t)0x00FF0000)
+#define FSMC_PMEM3_MEMHOLD3_0 ((uint32_t)0x00010000)
+#define FSMC_PMEM3_MEMHOLD3_1 ((uint32_t)0x00020000)
+#define FSMC_PMEM3_MEMHOLD3_2 ((uint32_t)0x00040000)
+#define FSMC_PMEM3_MEMHOLD3_3 ((uint32_t)0x00080000)
+#define FSMC_PMEM3_MEMHOLD3_4 ((uint32_t)0x00100000)
+#define FSMC_PMEM3_MEMHOLD3_5 ((uint32_t)0x00200000)
+#define FSMC_PMEM3_MEMHOLD3_6 ((uint32_t)0x00400000)
+#define FSMC_PMEM3_MEMHOLD3_7 ((uint32_t)0x00800000)
+
+#define FSMC_PMEM3_MEMHIZ3 ((uint32_t)0xFF000000)
+#define FSMC_PMEM3_MEMHIZ3_0 ((uint32_t)0x01000000)
+#define FSMC_PMEM3_MEMHIZ3_1 ((uint32_t)0x02000000)
+#define FSMC_PMEM3_MEMHIZ3_2 ((uint32_t)0x04000000)
+#define FSMC_PMEM3_MEMHIZ3_3 ((uint32_t)0x08000000)
+#define FSMC_PMEM3_MEMHIZ3_4 ((uint32_t)0x10000000)
+#define FSMC_PMEM3_MEMHIZ3_5 ((uint32_t)0x20000000)
+#define FSMC_PMEM3_MEMHIZ3_6 ((uint32_t)0x40000000)
+#define FSMC_PMEM3_MEMHIZ3_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_PMEM4_MEMSET4 ((uint32_t)0x000000FF)
+#define FSMC_PMEM4_MEMSET4_0 ((uint32_t)0x00000001)
+#define FSMC_PMEM4_MEMSET4_1 ((uint32_t)0x00000002)
+#define FSMC_PMEM4_MEMSET4_2 ((uint32_t)0x00000004)
+#define FSMC_PMEM4_MEMSET4_3 ((uint32_t)0x00000008)
+#define FSMC_PMEM4_MEMSET4_4 ((uint32_t)0x00000010)
+#define FSMC_PMEM4_MEMSET4_5 ((uint32_t)0x00000020)
+#define FSMC_PMEM4_MEMSET4_6 ((uint32_t)0x00000040)
+#define FSMC_PMEM4_MEMSET4_7 ((uint32_t)0x00000080)
+
+#define FSMC_PMEM4_MEMWAIT4 ((uint32_t)0x0000FF00)
+#define FSMC_PMEM4_MEMWAIT4_0 ((uint32_t)0x00000100)
+#define FSMC_PMEM4_MEMWAIT4_1 ((uint32_t)0x00000200)
+#define FSMC_PMEM4_MEMWAIT4_2 ((uint32_t)0x00000400)
+#define FSMC_PMEM4_MEMWAIT4_3 ((uint32_t)0x00000800)
+#define FSMC_PMEM4_MEMWAIT4_4 ((uint32_t)0x00001000)
+#define FSMC_PMEM4_MEMWAIT4_5 ((uint32_t)0x00002000)
+#define FSMC_PMEM4_MEMWAIT4_6 ((uint32_t)0x00004000)
+#define FSMC_PMEM4_MEMWAIT4_7 ((uint32_t)0x00008000)
+
+#define FSMC_PMEM4_MEMHOLD4 ((uint32_t)0x00FF0000)
+#define FSMC_PMEM4_MEMHOLD4_0 ((uint32_t)0x00010000)
+#define FSMC_PMEM4_MEMHOLD4_1 ((uint32_t)0x00020000)
+#define FSMC_PMEM4_MEMHOLD4_2 ((uint32_t)0x00040000)
+#define FSMC_PMEM4_MEMHOLD4_3 ((uint32_t)0x00080000)
+#define FSMC_PMEM4_MEMHOLD4_4 ((uint32_t)0x00100000)
+#define FSMC_PMEM4_MEMHOLD4_5 ((uint32_t)0x00200000)
+#define FSMC_PMEM4_MEMHOLD4_6 ((uint32_t)0x00400000)
+#define FSMC_PMEM4_MEMHOLD4_7 ((uint32_t)0x00800000)
+
+#define FSMC_PMEM4_MEMHIZ4 ((uint32_t)0xFF000000)
+#define FSMC_PMEM4_MEMHIZ4_0 ((uint32_t)0x01000000)
+#define FSMC_PMEM4_MEMHIZ4_1 ((uint32_t)0x02000000)
+#define FSMC_PMEM4_MEMHIZ4_2 ((uint32_t)0x04000000)
+#define FSMC_PMEM4_MEMHIZ4_3 ((uint32_t)0x08000000)
+#define FSMC_PMEM4_MEMHIZ4_4 ((uint32_t)0x10000000)
+#define FSMC_PMEM4_MEMHIZ4_5 ((uint32_t)0x20000000)
+#define FSMC_PMEM4_MEMHIZ4_6 ((uint32_t)0x40000000)
+#define FSMC_PMEM4_MEMHIZ4_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_PATT2_ATTSET2 ((uint32_t)0x000000FF)
+#define FSMC_PATT2_ATTSET2_0 ((uint32_t)0x00000001)
+#define FSMC_PATT2_ATTSET2_1 ((uint32_t)0x00000002)
+#define FSMC_PATT2_ATTSET2_2 ((uint32_t)0x00000004)
+#define FSMC_PATT2_ATTSET2_3 ((uint32_t)0x00000008)
+#define FSMC_PATT2_ATTSET2_4 ((uint32_t)0x00000010)
+#define FSMC_PATT2_ATTSET2_5 ((uint32_t)0x00000020)
+#define FSMC_PATT2_ATTSET2_6 ((uint32_t)0x00000040)
+#define FSMC_PATT2_ATTSET2_7 ((uint32_t)0x00000080)
+
+#define FSMC_PATT2_ATTWAIT2 ((uint32_t)0x0000FF00)
+#define FSMC_PATT2_ATTWAIT2_0 ((uint32_t)0x00000100)
+#define FSMC_PATT2_ATTWAIT2_1 ((uint32_t)0x00000200)
+#define FSMC_PATT2_ATTWAIT2_2 ((uint32_t)0x00000400)
+#define FSMC_PATT2_ATTWAIT2_3 ((uint32_t)0x00000800)
+#define FSMC_PATT2_ATTWAIT2_4 ((uint32_t)0x00001000)
+#define FSMC_PATT2_ATTWAIT2_5 ((uint32_t)0x00002000)
+#define FSMC_PATT2_ATTWAIT2_6 ((uint32_t)0x00004000)
+#define FSMC_PATT2_ATTWAIT2_7 ((uint32_t)0x00008000)
+
+#define FSMC_PATT2_ATTHOLD2 ((uint32_t)0x00FF0000)
+#define FSMC_PATT2_ATTHOLD2_0 ((uint32_t)0x00010000)
+#define FSMC_PATT2_ATTHOLD2_1 ((uint32_t)0x00020000)
+#define FSMC_PATT2_ATTHOLD2_2 ((uint32_t)0x00040000)
+#define FSMC_PATT2_ATTHOLD2_3 ((uint32_t)0x00080000)
+#define FSMC_PATT2_ATTHOLD2_4 ((uint32_t)0x00100000)
+#define FSMC_PATT2_ATTHOLD2_5 ((uint32_t)0x00200000)
+#define FSMC_PATT2_ATTHOLD2_6 ((uint32_t)0x00400000)
+#define FSMC_PATT2_ATTHOLD2_7 ((uint32_t)0x00800000)
+
+#define FSMC_PATT2_ATTHIZ2 ((uint32_t)0xFF000000)
+#define FSMC_PATT2_ATTHIZ2_0 ((uint32_t)0x01000000)
+#define FSMC_PATT2_ATTHIZ2_1 ((uint32_t)0x02000000)
+#define FSMC_PATT2_ATTHIZ2_2 ((uint32_t)0x04000000)
+#define FSMC_PATT2_ATTHIZ2_3 ((uint32_t)0x08000000)
+#define FSMC_PATT2_ATTHIZ2_4 ((uint32_t)0x10000000)
+#define FSMC_PATT2_ATTHIZ2_5 ((uint32_t)0x20000000)
+#define FSMC_PATT2_ATTHIZ2_6 ((uint32_t)0x40000000)
+#define FSMC_PATT2_ATTHIZ2_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_PATT3_ATTSET3 ((uint32_t)0x000000FF)
+#define FSMC_PATT3_ATTSET3_0 ((uint32_t)0x00000001)
+#define FSMC_PATT3_ATTSET3_1 ((uint32_t)0x00000002)
+#define FSMC_PATT3_ATTSET3_2 ((uint32_t)0x00000004)
+#define FSMC_PATT3_ATTSET3_3 ((uint32_t)0x00000008)
+#define FSMC_PATT3_ATTSET3_4 ((uint32_t)0x00000010)
+#define FSMC_PATT3_ATTSET3_5 ((uint32_t)0x00000020)
+#define FSMC_PATT3_ATTSET3_6 ((uint32_t)0x00000040)
+#define FSMC_PATT3_ATTSET3_7 ((uint32_t)0x00000080)
+
+#define FSMC_PATT3_ATTWAIT3 ((uint32_t)0x0000FF00)
+#define FSMC_PATT3_ATTWAIT3_0 ((uint32_t)0x00000100)
+#define FSMC_PATT3_ATTWAIT3_1 ((uint32_t)0x00000200)
+#define FSMC_PATT3_ATTWAIT3_2 ((uint32_t)0x00000400)
+#define FSMC_PATT3_ATTWAIT3_3 ((uint32_t)0x00000800)
+#define FSMC_PATT3_ATTWAIT3_4 ((uint32_t)0x00001000)
+#define FSMC_PATT3_ATTWAIT3_5 ((uint32_t)0x00002000)
+#define FSMC_PATT3_ATTWAIT3_6 ((uint32_t)0x00004000)
+#define FSMC_PATT3_ATTWAIT3_7 ((uint32_t)0x00008000)
+
+#define FSMC_PATT3_ATTHOLD3 ((uint32_t)0x00FF0000)
+#define FSMC_PATT3_ATTHOLD3_0 ((uint32_t)0x00010000)
+#define FSMC_PATT3_ATTHOLD3_1 ((uint32_t)0x00020000)
+#define FSMC_PATT3_ATTHOLD3_2 ((uint32_t)0x00040000)
+#define FSMC_PATT3_ATTHOLD3_3 ((uint32_t)0x00080000)
+#define FSMC_PATT3_ATTHOLD3_4 ((uint32_t)0x00100000)
+#define FSMC_PATT3_ATTHOLD3_5 ((uint32_t)0x00200000)
+#define FSMC_PATT3_ATTHOLD3_6 ((uint32_t)0x00400000)
+#define FSMC_PATT3_ATTHOLD3_7 ((uint32_t)0x00800000)
+
+#define FSMC_PATT3_ATTHIZ3 ((uint32_t)0xFF000000)
+#define FSMC_PATT3_ATTHIZ3_0 ((uint32_t)0x01000000)
+#define FSMC_PATT3_ATTHIZ3_1 ((uint32_t)0x02000000)
+#define FSMC_PATT3_ATTHIZ3_2 ((uint32_t)0x04000000)
+#define FSMC_PATT3_ATTHIZ3_3 ((uint32_t)0x08000000)
+#define FSMC_PATT3_ATTHIZ3_4 ((uint32_t)0x10000000)
+#define FSMC_PATT3_ATTHIZ3_5 ((uint32_t)0x20000000)
+#define FSMC_PATT3_ATTHIZ3_6 ((uint32_t)0x40000000)
+#define FSMC_PATT3_ATTHIZ3_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_PATT4_ATTSET4 ((uint32_t)0x000000FF)
+#define FSMC_PATT4_ATTSET4_0 ((uint32_t)0x00000001)
+#define FSMC_PATT4_ATTSET4_1 ((uint32_t)0x00000002)
+#define FSMC_PATT4_ATTSET4_2 ((uint32_t)0x00000004)
+#define FSMC_PATT4_ATTSET4_3 ((uint32_t)0x00000008)
+#define FSMC_PATT4_ATTSET4_4 ((uint32_t)0x00000010)
+#define FSMC_PATT4_ATTSET4_5 ((uint32_t)0x00000020)
+#define FSMC_PATT4_ATTSET4_6 ((uint32_t)0x00000040)
+#define FSMC_PATT4_ATTSET4_7 ((uint32_t)0x00000080)
+
+#define FSMC_PATT4_ATTWAIT4 ((uint32_t)0x0000FF00)
+#define FSMC_PATT4_ATTWAIT4_0 ((uint32_t)0x00000100)
+#define FSMC_PATT4_ATTWAIT4_1 ((uint32_t)0x00000200)
+#define FSMC_PATT4_ATTWAIT4_2 ((uint32_t)0x00000400)
+#define FSMC_PATT4_ATTWAIT4_3 ((uint32_t)0x00000800)
+#define FSMC_PATT4_ATTWAIT4_4 ((uint32_t)0x00001000)
+#define FSMC_PATT4_ATTWAIT4_5 ((uint32_t)0x00002000)
+#define FSMC_PATT4_ATTWAIT4_6 ((uint32_t)0x00004000)
+#define FSMC_PATT4_ATTWAIT4_7 ((uint32_t)0x00008000)
+
+#define FSMC_PATT4_ATTHOLD4 ((uint32_t)0x00FF0000)
+#define FSMC_PATT4_ATTHOLD4_0 ((uint32_t)0x00010000)
+#define FSMC_PATT4_ATTHOLD4_1 ((uint32_t)0x00020000)
+#define FSMC_PATT4_ATTHOLD4_2 ((uint32_t)0x00040000)
+#define FSMC_PATT4_ATTHOLD4_3 ((uint32_t)0x00080000)
+#define FSMC_PATT4_ATTHOLD4_4 ((uint32_t)0x00100000)
+#define FSMC_PATT4_ATTHOLD4_5 ((uint32_t)0x00200000)
+#define FSMC_PATT4_ATTHOLD4_6 ((uint32_t)0x00400000)
+#define FSMC_PATT4_ATTHOLD4_7 ((uint32_t)0x00800000)
+
+#define FSMC_PATT4_ATTHIZ4 ((uint32_t)0xFF000000)
+#define FSMC_PATT4_ATTHIZ4_0 ((uint32_t)0x01000000)
+#define FSMC_PATT4_ATTHIZ4_1 ((uint32_t)0x02000000)
+#define FSMC_PATT4_ATTHIZ4_2 ((uint32_t)0x04000000)
+#define FSMC_PATT4_ATTHIZ4_3 ((uint32_t)0x08000000)
+#define FSMC_PATT4_ATTHIZ4_4 ((uint32_t)0x10000000)
+#define FSMC_PATT4_ATTHIZ4_5 ((uint32_t)0x20000000)
+#define FSMC_PATT4_ATTHIZ4_6 ((uint32_t)0x40000000)
+#define FSMC_PATT4_ATTHIZ4_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_PIO4_IOSET4 ((uint32_t)0x000000FF)
+#define FSMC_PIO4_IOSET4_0 ((uint32_t)0x00000001)
+#define FSMC_PIO4_IOSET4_1 ((uint32_t)0x00000002)
+#define FSMC_PIO4_IOSET4_2 ((uint32_t)0x00000004)
+#define FSMC_PIO4_IOSET4_3 ((uint32_t)0x00000008)
+#define FSMC_PIO4_IOSET4_4 ((uint32_t)0x00000010)
+#define FSMC_PIO4_IOSET4_5 ((uint32_t)0x00000020)
+#define FSMC_PIO4_IOSET4_6 ((uint32_t)0x00000040)
+#define FSMC_PIO4_IOSET4_7 ((uint32_t)0x00000080)
+
+#define FSMC_PIO4_IOWAIT4 ((uint32_t)0x0000FF00)
+#define FSMC_PIO4_IOWAIT4_0 ((uint32_t)0x00000100)
+#define FSMC_PIO4_IOWAIT4_1 ((uint32_t)0x00000200)
+#define FSMC_PIO4_IOWAIT4_2 ((uint32_t)0x00000400)
+#define FSMC_PIO4_IOWAIT4_3 ((uint32_t)0x00000800)
+#define FSMC_PIO4_IOWAIT4_4 ((uint32_t)0x00001000)
+#define FSMC_PIO4_IOWAIT4_5 ((uint32_t)0x00002000)
+#define FSMC_PIO4_IOWAIT4_6 ((uint32_t)0x00004000)
+#define FSMC_PIO4_IOWAIT4_7 ((uint32_t)0x00008000)
+
+#define FSMC_PIO4_IOHOLD4 ((uint32_t)0x00FF0000)
+#define FSMC_PIO4_IOHOLD4_0 ((uint32_t)0x00010000)
+#define FSMC_PIO4_IOHOLD4_1 ((uint32_t)0x00020000)
+#define FSMC_PIO4_IOHOLD4_2 ((uint32_t)0x00040000)
+#define FSMC_PIO4_IOHOLD4_3 ((uint32_t)0x00080000)
+#define FSMC_PIO4_IOHOLD4_4 ((uint32_t)0x00100000)
+#define FSMC_PIO4_IOHOLD4_5 ((uint32_t)0x00200000)
+#define FSMC_PIO4_IOHOLD4_6 ((uint32_t)0x00400000)
+#define FSMC_PIO4_IOHOLD4_7 ((uint32_t)0x00800000)
+
+#define FSMC_PIO4_IOHIZ4 ((uint32_t)0xFF000000)
+#define FSMC_PIO4_IOHIZ4_0 ((uint32_t)0x01000000)
+#define FSMC_PIO4_IOHIZ4_1 ((uint32_t)0x02000000)
+#define FSMC_PIO4_IOHIZ4_2 ((uint32_t)0x04000000)
+#define FSMC_PIO4_IOHIZ4_3 ((uint32_t)0x08000000)
+#define FSMC_PIO4_IOHIZ4_4 ((uint32_t)0x10000000)
+#define FSMC_PIO4_IOHIZ4_5 ((uint32_t)0x20000000)
+#define FSMC_PIO4_IOHIZ4_6 ((uint32_t)0x40000000)
+#define FSMC_PIO4_IOHIZ4_7 ((uint32_t)0x80000000)
+
+
+#define FSMC_ECCR2_ECC2 ((uint32_t)0xFFFFFFFF)
+
+
+#define FSMC_ECCR3_ECC3 ((uint32_t)0xFFFFFFFF)
+# 4345 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define GPIO_MODER_MODER0 ((uint32_t)0x00000003)
+#define GPIO_MODER_MODER0_0 ((uint32_t)0x00000001)
+#define GPIO_MODER_MODER0_1 ((uint32_t)0x00000002)
+
+#define GPIO_MODER_MODER1 ((uint32_t)0x0000000C)
+#define GPIO_MODER_MODER1_0 ((uint32_t)0x00000004)
+#define GPIO_MODER_MODER1_1 ((uint32_t)0x00000008)
+
+#define GPIO_MODER_MODER2 ((uint32_t)0x00000030)
+#define GPIO_MODER_MODER2_0 ((uint32_t)0x00000010)
+#define GPIO_MODER_MODER2_1 ((uint32_t)0x00000020)
+
+#define GPIO_MODER_MODER3 ((uint32_t)0x000000C0)
+#define GPIO_MODER_MODER3_0 ((uint32_t)0x00000040)
+#define GPIO_MODER_MODER3_1 ((uint32_t)0x00000080)
+
+#define GPIO_MODER_MODER4 ((uint32_t)0x00000300)
+#define GPIO_MODER_MODER4_0 ((uint32_t)0x00000100)
+#define GPIO_MODER_MODER4_1 ((uint32_t)0x00000200)
+
+#define GPIO_MODER_MODER5 ((uint32_t)0x00000C00)
+#define GPIO_MODER_MODER5_0 ((uint32_t)0x00000400)
+#define GPIO_MODER_MODER5_1 ((uint32_t)0x00000800)
+
+#define GPIO_MODER_MODER6 ((uint32_t)0x00003000)
+#define GPIO_MODER_MODER6_0 ((uint32_t)0x00001000)
+#define GPIO_MODER_MODER6_1 ((uint32_t)0x00002000)
+
+#define GPIO_MODER_MODER7 ((uint32_t)0x0000C000)
+#define GPIO_MODER_MODER7_0 ((uint32_t)0x00004000)
+#define GPIO_MODER_MODER7_1 ((uint32_t)0x00008000)
+
+#define GPIO_MODER_MODER8 ((uint32_t)0x00030000)
+#define GPIO_MODER_MODER8_0 ((uint32_t)0x00010000)
+#define GPIO_MODER_MODER8_1 ((uint32_t)0x00020000)
+
+#define GPIO_MODER_MODER9 ((uint32_t)0x000C0000)
+#define GPIO_MODER_MODER9_0 ((uint32_t)0x00040000)
+#define GPIO_MODER_MODER9_1 ((uint32_t)0x00080000)
+
+#define GPIO_MODER_MODER10 ((uint32_t)0x00300000)
+#define GPIO_MODER_MODER10_0 ((uint32_t)0x00100000)
+#define GPIO_MODER_MODER10_1 ((uint32_t)0x00200000)
+
+#define GPIO_MODER_MODER11 ((uint32_t)0x00C00000)
+#define GPIO_MODER_MODER11_0 ((uint32_t)0x00400000)
+#define GPIO_MODER_MODER11_1 ((uint32_t)0x00800000)
+
+#define GPIO_MODER_MODER12 ((uint32_t)0x03000000)
+#define GPIO_MODER_MODER12_0 ((uint32_t)0x01000000)
+#define GPIO_MODER_MODER12_1 ((uint32_t)0x02000000)
+
+#define GPIO_MODER_MODER13 ((uint32_t)0x0C000000)
+#define GPIO_MODER_MODER13_0 ((uint32_t)0x04000000)
+#define GPIO_MODER_MODER13_1 ((uint32_t)0x08000000)
+
+#define GPIO_MODER_MODER14 ((uint32_t)0x30000000)
+#define GPIO_MODER_MODER14_0 ((uint32_t)0x10000000)
+#define GPIO_MODER_MODER14_1 ((uint32_t)0x20000000)
+
+#define GPIO_MODER_MODER15 ((uint32_t)0xC0000000)
+#define GPIO_MODER_MODER15_0 ((uint32_t)0x40000000)
+#define GPIO_MODER_MODER15_1 ((uint32_t)0x80000000)
+
+
+#define GPIO_OTYPER_OT_0 ((uint32_t)0x00000001)
+#define GPIO_OTYPER_OT_1 ((uint32_t)0x00000002)
+#define GPIO_OTYPER_OT_2 ((uint32_t)0x00000004)
+#define GPIO_OTYPER_OT_3 ((uint32_t)0x00000008)
+#define GPIO_OTYPER_OT_4 ((uint32_t)0x00000010)
+#define GPIO_OTYPER_OT_5 ((uint32_t)0x00000020)
+#define GPIO_OTYPER_OT_6 ((uint32_t)0x00000040)
+#define GPIO_OTYPER_OT_7 ((uint32_t)0x00000080)
+#define GPIO_OTYPER_OT_8 ((uint32_t)0x00000100)
+#define GPIO_OTYPER_OT_9 ((uint32_t)0x00000200)
+#define GPIO_OTYPER_OT_10 ((uint32_t)0x00000400)
+#define GPIO_OTYPER_OT_11 ((uint32_t)0x00000800)
+#define GPIO_OTYPER_OT_12 ((uint32_t)0x00001000)
+#define GPIO_OTYPER_OT_13 ((uint32_t)0x00002000)
+#define GPIO_OTYPER_OT_14 ((uint32_t)0x00004000)
+#define GPIO_OTYPER_OT_15 ((uint32_t)0x00008000)
+
+
+#define GPIO_OSPEEDER_OSPEEDR0 ((uint32_t)0x00000003)
+#define GPIO_OSPEEDER_OSPEEDR0_0 ((uint32_t)0x00000001)
+#define GPIO_OSPEEDER_OSPEEDR0_1 ((uint32_t)0x00000002)
+
+#define GPIO_OSPEEDER_OSPEEDR1 ((uint32_t)0x0000000C)
+#define GPIO_OSPEEDER_OSPEEDR1_0 ((uint32_t)0x00000004)
+#define GPIO_OSPEEDER_OSPEEDR1_1 ((uint32_t)0x00000008)
+
+#define GPIO_OSPEEDER_OSPEEDR2 ((uint32_t)0x00000030)
+#define GPIO_OSPEEDER_OSPEEDR2_0 ((uint32_t)0x00000010)
+#define GPIO_OSPEEDER_OSPEEDR2_1 ((uint32_t)0x00000020)
+
+#define GPIO_OSPEEDER_OSPEEDR3 ((uint32_t)0x000000C0)
+#define GPIO_OSPEEDER_OSPEEDR3_0 ((uint32_t)0x00000040)
+#define GPIO_OSPEEDER_OSPEEDR3_1 ((uint32_t)0x00000080)
+
+#define GPIO_OSPEEDER_OSPEEDR4 ((uint32_t)0x00000300)
+#define GPIO_OSPEEDER_OSPEEDR4_0 ((uint32_t)0x00000100)
+#define GPIO_OSPEEDER_OSPEEDR4_1 ((uint32_t)0x00000200)
+
+#define GPIO_OSPEEDER_OSPEEDR5 ((uint32_t)0x00000C00)
+#define GPIO_OSPEEDER_OSPEEDR5_0 ((uint32_t)0x00000400)
+#define GPIO_OSPEEDER_OSPEEDR5_1 ((uint32_t)0x00000800)
+
+#define GPIO_OSPEEDER_OSPEEDR6 ((uint32_t)0x00003000)
+#define GPIO_OSPEEDER_OSPEEDR6_0 ((uint32_t)0x00001000)
+#define GPIO_OSPEEDER_OSPEEDR6_1 ((uint32_t)0x00002000)
+
+#define GPIO_OSPEEDER_OSPEEDR7 ((uint32_t)0x0000C000)
+#define GPIO_OSPEEDER_OSPEEDR7_0 ((uint32_t)0x00004000)
+#define GPIO_OSPEEDER_OSPEEDR7_1 ((uint32_t)0x00008000)
+
+#define GPIO_OSPEEDER_OSPEEDR8 ((uint32_t)0x00030000)
+#define GPIO_OSPEEDER_OSPEEDR8_0 ((uint32_t)0x00010000)
+#define GPIO_OSPEEDER_OSPEEDR8_1 ((uint32_t)0x00020000)
+
+#define GPIO_OSPEEDER_OSPEEDR9 ((uint32_t)0x000C0000)
+#define GPIO_OSPEEDER_OSPEEDR9_0 ((uint32_t)0x00040000)
+#define GPIO_OSPEEDER_OSPEEDR9_1 ((uint32_t)0x00080000)
+
+#define GPIO_OSPEEDER_OSPEEDR10 ((uint32_t)0x00300000)
+#define GPIO_OSPEEDER_OSPEEDR10_0 ((uint32_t)0x00100000)
+#define GPIO_OSPEEDER_OSPEEDR10_1 ((uint32_t)0x00200000)
+
+#define GPIO_OSPEEDER_OSPEEDR11 ((uint32_t)0x00C00000)
+#define GPIO_OSPEEDER_OSPEEDR11_0 ((uint32_t)0x00400000)
+#define GPIO_OSPEEDER_OSPEEDR11_1 ((uint32_t)0x00800000)
+
+#define GPIO_OSPEEDER_OSPEEDR12 ((uint32_t)0x03000000)
+#define GPIO_OSPEEDER_OSPEEDR12_0 ((uint32_t)0x01000000)
+#define GPIO_OSPEEDER_OSPEEDR12_1 ((uint32_t)0x02000000)
+
+#define GPIO_OSPEEDER_OSPEEDR13 ((uint32_t)0x0C000000)
+#define GPIO_OSPEEDER_OSPEEDR13_0 ((uint32_t)0x04000000)
+#define GPIO_OSPEEDER_OSPEEDR13_1 ((uint32_t)0x08000000)
+
+#define GPIO_OSPEEDER_OSPEEDR14 ((uint32_t)0x30000000)
+#define GPIO_OSPEEDER_OSPEEDR14_0 ((uint32_t)0x10000000)
+#define GPIO_OSPEEDER_OSPEEDR14_1 ((uint32_t)0x20000000)
+
+#define GPIO_OSPEEDER_OSPEEDR15 ((uint32_t)0xC0000000)
+#define GPIO_OSPEEDER_OSPEEDR15_0 ((uint32_t)0x40000000)
+#define GPIO_OSPEEDER_OSPEEDR15_1 ((uint32_t)0x80000000)
+
+
+#define GPIO_PUPDR_PUPDR0 ((uint32_t)0x00000003)
+#define GPIO_PUPDR_PUPDR0_0 ((uint32_t)0x00000001)
+#define GPIO_PUPDR_PUPDR0_1 ((uint32_t)0x00000002)
+
+#define GPIO_PUPDR_PUPDR1 ((uint32_t)0x0000000C)
+#define GPIO_PUPDR_PUPDR1_0 ((uint32_t)0x00000004)
+#define GPIO_PUPDR_PUPDR1_1 ((uint32_t)0x00000008)
+
+#define GPIO_PUPDR_PUPDR2 ((uint32_t)0x00000030)
+#define GPIO_PUPDR_PUPDR2_0 ((uint32_t)0x00000010)
+#define GPIO_PUPDR_PUPDR2_1 ((uint32_t)0x00000020)
+
+#define GPIO_PUPDR_PUPDR3 ((uint32_t)0x000000C0)
+#define GPIO_PUPDR_PUPDR3_0 ((uint32_t)0x00000040)
+#define GPIO_PUPDR_PUPDR3_1 ((uint32_t)0x00000080)
+
+#define GPIO_PUPDR_PUPDR4 ((uint32_t)0x00000300)
+#define GPIO_PUPDR_PUPDR4_0 ((uint32_t)0x00000100)
+#define GPIO_PUPDR_PUPDR4_1 ((uint32_t)0x00000200)
+
+#define GPIO_PUPDR_PUPDR5 ((uint32_t)0x00000C00)
+#define GPIO_PUPDR_PUPDR5_0 ((uint32_t)0x00000400)
+#define GPIO_PUPDR_PUPDR5_1 ((uint32_t)0x00000800)
+
+#define GPIO_PUPDR_PUPDR6 ((uint32_t)0x00003000)
+#define GPIO_PUPDR_PUPDR6_0 ((uint32_t)0x00001000)
+#define GPIO_PUPDR_PUPDR6_1 ((uint32_t)0x00002000)
+
+#define GPIO_PUPDR_PUPDR7 ((uint32_t)0x0000C000)
+#define GPIO_PUPDR_PUPDR7_0 ((uint32_t)0x00004000)
+#define GPIO_PUPDR_PUPDR7_1 ((uint32_t)0x00008000)
+
+#define GPIO_PUPDR_PUPDR8 ((uint32_t)0x00030000)
+#define GPIO_PUPDR_PUPDR8_0 ((uint32_t)0x00010000)
+#define GPIO_PUPDR_PUPDR8_1 ((uint32_t)0x00020000)
+
+#define GPIO_PUPDR_PUPDR9 ((uint32_t)0x000C0000)
+#define GPIO_PUPDR_PUPDR9_0 ((uint32_t)0x00040000)
+#define GPIO_PUPDR_PUPDR9_1 ((uint32_t)0x00080000)
+
+#define GPIO_PUPDR_PUPDR10 ((uint32_t)0x00300000)
+#define GPIO_PUPDR_PUPDR10_0 ((uint32_t)0x00100000)
+#define GPIO_PUPDR_PUPDR10_1 ((uint32_t)0x00200000)
+
+#define GPIO_PUPDR_PUPDR11 ((uint32_t)0x00C00000)
+#define GPIO_PUPDR_PUPDR11_0 ((uint32_t)0x00400000)
+#define GPIO_PUPDR_PUPDR11_1 ((uint32_t)0x00800000)
+
+#define GPIO_PUPDR_PUPDR12 ((uint32_t)0x03000000)
+#define GPIO_PUPDR_PUPDR12_0 ((uint32_t)0x01000000)
+#define GPIO_PUPDR_PUPDR12_1 ((uint32_t)0x02000000)
+
+#define GPIO_PUPDR_PUPDR13 ((uint32_t)0x0C000000)
+#define GPIO_PUPDR_PUPDR13_0 ((uint32_t)0x04000000)
+#define GPIO_PUPDR_PUPDR13_1 ((uint32_t)0x08000000)
+
+#define GPIO_PUPDR_PUPDR14 ((uint32_t)0x30000000)
+#define GPIO_PUPDR_PUPDR14_0 ((uint32_t)0x10000000)
+#define GPIO_PUPDR_PUPDR14_1 ((uint32_t)0x20000000)
+
+#define GPIO_PUPDR_PUPDR15 ((uint32_t)0xC0000000)
+#define GPIO_PUPDR_PUPDR15_0 ((uint32_t)0x40000000)
+#define GPIO_PUPDR_PUPDR15_1 ((uint32_t)0x80000000)
+
+
+#define GPIO_IDR_IDR_0 ((uint32_t)0x00000001)
+#define GPIO_IDR_IDR_1 ((uint32_t)0x00000002)
+#define GPIO_IDR_IDR_2 ((uint32_t)0x00000004)
+#define GPIO_IDR_IDR_3 ((uint32_t)0x00000008)
+#define GPIO_IDR_IDR_4 ((uint32_t)0x00000010)
+#define GPIO_IDR_IDR_5 ((uint32_t)0x00000020)
+#define GPIO_IDR_IDR_6 ((uint32_t)0x00000040)
+#define GPIO_IDR_IDR_7 ((uint32_t)0x00000080)
+#define GPIO_IDR_IDR_8 ((uint32_t)0x00000100)
+#define GPIO_IDR_IDR_9 ((uint32_t)0x00000200)
+#define GPIO_IDR_IDR_10 ((uint32_t)0x00000400)
+#define GPIO_IDR_IDR_11 ((uint32_t)0x00000800)
+#define GPIO_IDR_IDR_12 ((uint32_t)0x00001000)
+#define GPIO_IDR_IDR_13 ((uint32_t)0x00002000)
+#define GPIO_IDR_IDR_14 ((uint32_t)0x00004000)
+#define GPIO_IDR_IDR_15 ((uint32_t)0x00008000)
+
+#define GPIO_OTYPER_IDR_0 GPIO_IDR_IDR_0
+#define GPIO_OTYPER_IDR_1 GPIO_IDR_IDR_1
+#define GPIO_OTYPER_IDR_2 GPIO_IDR_IDR_2
+#define GPIO_OTYPER_IDR_3 GPIO_IDR_IDR_3
+#define GPIO_OTYPER_IDR_4 GPIO_IDR_IDR_4
+#define GPIO_OTYPER_IDR_5 GPIO_IDR_IDR_5
+#define GPIO_OTYPER_IDR_6 GPIO_IDR_IDR_6
+#define GPIO_OTYPER_IDR_7 GPIO_IDR_IDR_7
+#define GPIO_OTYPER_IDR_8 GPIO_IDR_IDR_8
+#define GPIO_OTYPER_IDR_9 GPIO_IDR_IDR_9
+#define GPIO_OTYPER_IDR_10 GPIO_IDR_IDR_10
+#define GPIO_OTYPER_IDR_11 GPIO_IDR_IDR_11
+#define GPIO_OTYPER_IDR_12 GPIO_IDR_IDR_12
+#define GPIO_OTYPER_IDR_13 GPIO_IDR_IDR_13
+#define GPIO_OTYPER_IDR_14 GPIO_IDR_IDR_14
+#define GPIO_OTYPER_IDR_15 GPIO_IDR_IDR_15
+
+
+#define GPIO_ODR_ODR_0 ((uint32_t)0x00000001)
+#define GPIO_ODR_ODR_1 ((uint32_t)0x00000002)
+#define GPIO_ODR_ODR_2 ((uint32_t)0x00000004)
+#define GPIO_ODR_ODR_3 ((uint32_t)0x00000008)
+#define GPIO_ODR_ODR_4 ((uint32_t)0x00000010)
+#define GPIO_ODR_ODR_5 ((uint32_t)0x00000020)
+#define GPIO_ODR_ODR_6 ((uint32_t)0x00000040)
+#define GPIO_ODR_ODR_7 ((uint32_t)0x00000080)
+#define GPIO_ODR_ODR_8 ((uint32_t)0x00000100)
+#define GPIO_ODR_ODR_9 ((uint32_t)0x00000200)
+#define GPIO_ODR_ODR_10 ((uint32_t)0x00000400)
+#define GPIO_ODR_ODR_11 ((uint32_t)0x00000800)
+#define GPIO_ODR_ODR_12 ((uint32_t)0x00001000)
+#define GPIO_ODR_ODR_13 ((uint32_t)0x00002000)
+#define GPIO_ODR_ODR_14 ((uint32_t)0x00004000)
+#define GPIO_ODR_ODR_15 ((uint32_t)0x00008000)
+
+#define GPIO_OTYPER_ODR_0 GPIO_ODR_ODR_0
+#define GPIO_OTYPER_ODR_1 GPIO_ODR_ODR_1
+#define GPIO_OTYPER_ODR_2 GPIO_ODR_ODR_2
+#define GPIO_OTYPER_ODR_3 GPIO_ODR_ODR_3
+#define GPIO_OTYPER_ODR_4 GPIO_ODR_ODR_4
+#define GPIO_OTYPER_ODR_5 GPIO_ODR_ODR_5
+#define GPIO_OTYPER_ODR_6 GPIO_ODR_ODR_6
+#define GPIO_OTYPER_ODR_7 GPIO_ODR_ODR_7
+#define GPIO_OTYPER_ODR_8 GPIO_ODR_ODR_8
+#define GPIO_OTYPER_ODR_9 GPIO_ODR_ODR_9
+#define GPIO_OTYPER_ODR_10 GPIO_ODR_ODR_10
+#define GPIO_OTYPER_ODR_11 GPIO_ODR_ODR_11
+#define GPIO_OTYPER_ODR_12 GPIO_ODR_ODR_12
+#define GPIO_OTYPER_ODR_13 GPIO_ODR_ODR_13
+#define GPIO_OTYPER_ODR_14 GPIO_ODR_ODR_14
+#define GPIO_OTYPER_ODR_15 GPIO_ODR_ODR_15
+
+
+#define GPIO_BSRR_BS_0 ((uint32_t)0x00000001)
+#define GPIO_BSRR_BS_1 ((uint32_t)0x00000002)
+#define GPIO_BSRR_BS_2 ((uint32_t)0x00000004)
+#define GPIO_BSRR_BS_3 ((uint32_t)0x00000008)
+#define GPIO_BSRR_BS_4 ((uint32_t)0x00000010)
+#define GPIO_BSRR_BS_5 ((uint32_t)0x00000020)
+#define GPIO_BSRR_BS_6 ((uint32_t)0x00000040)
+#define GPIO_BSRR_BS_7 ((uint32_t)0x00000080)
+#define GPIO_BSRR_BS_8 ((uint32_t)0x00000100)
+#define GPIO_BSRR_BS_9 ((uint32_t)0x00000200)
+#define GPIO_BSRR_BS_10 ((uint32_t)0x00000400)
+#define GPIO_BSRR_BS_11 ((uint32_t)0x00000800)
+#define GPIO_BSRR_BS_12 ((uint32_t)0x00001000)
+#define GPIO_BSRR_BS_13 ((uint32_t)0x00002000)
+#define GPIO_BSRR_BS_14 ((uint32_t)0x00004000)
+#define GPIO_BSRR_BS_15 ((uint32_t)0x00008000)
+#define GPIO_BSRR_BR_0 ((uint32_t)0x00010000)
+#define GPIO_BSRR_BR_1 ((uint32_t)0x00020000)
+#define GPIO_BSRR_BR_2 ((uint32_t)0x00040000)
+#define GPIO_BSRR_BR_3 ((uint32_t)0x00080000)
+#define GPIO_BSRR_BR_4 ((uint32_t)0x00100000)
+#define GPIO_BSRR_BR_5 ((uint32_t)0x00200000)
+#define GPIO_BSRR_BR_6 ((uint32_t)0x00400000)
+#define GPIO_BSRR_BR_7 ((uint32_t)0x00800000)
+#define GPIO_BSRR_BR_8 ((uint32_t)0x01000000)
+#define GPIO_BSRR_BR_9 ((uint32_t)0x02000000)
+#define GPIO_BSRR_BR_10 ((uint32_t)0x04000000)
+#define GPIO_BSRR_BR_11 ((uint32_t)0x08000000)
+#define GPIO_BSRR_BR_12 ((uint32_t)0x10000000)
+#define GPIO_BSRR_BR_13 ((uint32_t)0x20000000)
+#define GPIO_BSRR_BR_14 ((uint32_t)0x40000000)
+#define GPIO_BSRR_BR_15 ((uint32_t)0x80000000)
+
+
+
+
+
+
+
+#define HASH_CR_INIT ((uint32_t)0x00000004)
+#define HASH_CR_DMAE ((uint32_t)0x00000008)
+#define HASH_CR_DATATYPE ((uint32_t)0x00000030)
+#define HASH_CR_DATATYPE_0 ((uint32_t)0x00000010)
+#define HASH_CR_DATATYPE_1 ((uint32_t)0x00000020)
+#define HASH_CR_MODE ((uint32_t)0x00000040)
+#define HASH_CR_ALGO ((uint32_t)0x00040080)
+#define HASH_CR_ALGO_0 ((uint32_t)0x00000080)
+#define HASH_CR_ALGO_1 ((uint32_t)0x00040000)
+#define HASH_CR_NBW ((uint32_t)0x00000F00)
+#define HASH_CR_NBW_0 ((uint32_t)0x00000100)
+#define HASH_CR_NBW_1 ((uint32_t)0x00000200)
+#define HASH_CR_NBW_2 ((uint32_t)0x00000400)
+#define HASH_CR_NBW_3 ((uint32_t)0x00000800)
+#define HASH_CR_DINNE ((uint32_t)0x00001000)
+#define HASH_CR_MDMAT ((uint32_t)0x00002000)
+#define HASH_CR_LKEY ((uint32_t)0x00010000)
+
+
+#define HASH_STR_NBW ((uint32_t)0x0000001F)
+#define HASH_STR_NBW_0 ((uint32_t)0x00000001)
+#define HASH_STR_NBW_1 ((uint32_t)0x00000002)
+#define HASH_STR_NBW_2 ((uint32_t)0x00000004)
+#define HASH_STR_NBW_3 ((uint32_t)0x00000008)
+#define HASH_STR_NBW_4 ((uint32_t)0x00000010)
+#define HASH_STR_DCAL ((uint32_t)0x00000100)
+
+
+#define HASH_IMR_DINIM ((uint32_t)0x00000001)
+#define HASH_IMR_DCIM ((uint32_t)0x00000002)
+
+
+#define HASH_SR_DINIS ((uint32_t)0x00000001)
+#define HASH_SR_DCIS ((uint32_t)0x00000002)
+#define HASH_SR_DMAS ((uint32_t)0x00000004)
+#define HASH_SR_BUSY ((uint32_t)0x00000008)
+
+
+
+
+
+
+
+#define I2C_CR1_PE ((uint16_t)0x0001)
+#define I2C_CR1_SMBUS ((uint16_t)0x0002)
+#define I2C_CR1_SMBTYPE ((uint16_t)0x0008)
+#define I2C_CR1_ENARP ((uint16_t)0x0010)
+#define I2C_CR1_ENPEC ((uint16_t)0x0020)
+#define I2C_CR1_ENGC ((uint16_t)0x0040)
+#define I2C_CR1_NOSTRETCH ((uint16_t)0x0080)
+#define I2C_CR1_START ((uint16_t)0x0100)
+#define I2C_CR1_STOP ((uint16_t)0x0200)
+#define I2C_CR1_ACK ((uint16_t)0x0400)
+#define I2C_CR1_POS ((uint16_t)0x0800)
+#define I2C_CR1_PEC ((uint16_t)0x1000)
+#define I2C_CR1_ALERT ((uint16_t)0x2000)
+#define I2C_CR1_SWRST ((uint16_t)0x8000)
+
+
+#define I2C_CR2_FREQ ((uint16_t)0x003F)
+#define I2C_CR2_FREQ_0 ((uint16_t)0x0001)
+#define I2C_CR2_FREQ_1 ((uint16_t)0x0002)
+#define I2C_CR2_FREQ_2 ((uint16_t)0x0004)
+#define I2C_CR2_FREQ_3 ((uint16_t)0x0008)
+#define I2C_CR2_FREQ_4 ((uint16_t)0x0010)
+#define I2C_CR2_FREQ_5 ((uint16_t)0x0020)
+
+#define I2C_CR2_ITERREN ((uint16_t)0x0100)
+#define I2C_CR2_ITEVTEN ((uint16_t)0x0200)
+#define I2C_CR2_ITBUFEN ((uint16_t)0x0400)
+#define I2C_CR2_DMAEN ((uint16_t)0x0800)
+#define I2C_CR2_LAST ((uint16_t)0x1000)
+
+
+#define I2C_OAR1_ADD1_7 ((uint16_t)0x00FE)
+#define I2C_OAR1_ADD8_9 ((uint16_t)0x0300)
+
+#define I2C_OAR1_ADD0 ((uint16_t)0x0001)
+#define I2C_OAR1_ADD1 ((uint16_t)0x0002)
+#define I2C_OAR1_ADD2 ((uint16_t)0x0004)
+#define I2C_OAR1_ADD3 ((uint16_t)0x0008)
+#define I2C_OAR1_ADD4 ((uint16_t)0x0010)
+#define I2C_OAR1_ADD5 ((uint16_t)0x0020)
+#define I2C_OAR1_ADD6 ((uint16_t)0x0040)
+#define I2C_OAR1_ADD7 ((uint16_t)0x0080)
+#define I2C_OAR1_ADD8 ((uint16_t)0x0100)
+#define I2C_OAR1_ADD9 ((uint16_t)0x0200)
+
+#define I2C_OAR1_ADDMODE ((uint16_t)0x8000)
+
+
+#define I2C_OAR2_ENDUAL ((uint8_t)0x01)
+#define I2C_OAR2_ADD2 ((uint8_t)0xFE)
+
+
+#define I2C_DR_DR ((uint8_t)0xFF)
+
+
+#define I2C_SR1_SB ((uint16_t)0x0001)
+#define I2C_SR1_ADDR ((uint16_t)0x0002)
+#define I2C_SR1_BTF ((uint16_t)0x0004)
+#define I2C_SR1_ADD10 ((uint16_t)0x0008)
+#define I2C_SR1_STOPF ((uint16_t)0x0010)
+#define I2C_SR1_RXNE ((uint16_t)0x0040)
+#define I2C_SR1_TXE ((uint16_t)0x0080)
+#define I2C_SR1_BERR ((uint16_t)0x0100)
+#define I2C_SR1_ARLO ((uint16_t)0x0200)
+#define I2C_SR1_AF ((uint16_t)0x0400)
+#define I2C_SR1_OVR ((uint16_t)0x0800)
+#define I2C_SR1_PECERR ((uint16_t)0x1000)
+#define I2C_SR1_TIMEOUT ((uint16_t)0x4000)
+#define I2C_SR1_SMBALERT ((uint16_t)0x8000)
+
+
+#define I2C_SR2_MSL ((uint16_t)0x0001)
+#define I2C_SR2_BUSY ((uint16_t)0x0002)
+#define I2C_SR2_TRA ((uint16_t)0x0004)
+#define I2C_SR2_GENCALL ((uint16_t)0x0010)
+#define I2C_SR2_SMBDEFAULT ((uint16_t)0x0020)
+#define I2C_SR2_SMBHOST ((uint16_t)0x0040)
+#define I2C_SR2_DUALF ((uint16_t)0x0080)
+#define I2C_SR2_PEC ((uint16_t)0xFF00)
+
+
+#define I2C_CCR_CCR ((uint16_t)0x0FFF)
+#define I2C_CCR_DUTY ((uint16_t)0x4000)
+#define I2C_CCR_FS ((uint16_t)0x8000)
+
+
+#define I2C_TRISE_TRISE ((uint8_t)0x3F)
+
+
+#define I2C_FLTR_DNF ((uint8_t)0x0F)
+#define I2C_FLTR_ANOFF ((uint8_t)0x10)
+
+
+
+
+
+
+
+#define IWDG_KR_KEY ((uint16_t)0xFFFF)
+
+
+#define IWDG_PR_PR ((uint8_t)0x07)
+#define IWDG_PR_PR_0 ((uint8_t)0x01)
+#define IWDG_PR_PR_1 ((uint8_t)0x02)
+#define IWDG_PR_PR_2 ((uint8_t)0x04)
+
+
+#define IWDG_RLR_RL ((uint16_t)0x0FFF)
+
+
+#define IWDG_SR_PVU ((uint8_t)0x01)
+#define IWDG_SR_RVU ((uint8_t)0x02)
+# 4830 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define PWR_CR_LPDS ((uint32_t)0x00000001)
+#define PWR_CR_PDDS ((uint32_t)0x00000002)
+#define PWR_CR_CWUF ((uint32_t)0x00000004)
+#define PWR_CR_CSBF ((uint32_t)0x00000008)
+#define PWR_CR_PVDE ((uint32_t)0x00000010)
+
+#define PWR_CR_PLS ((uint32_t)0x000000E0)
+#define PWR_CR_PLS_0 ((uint32_t)0x00000020)
+#define PWR_CR_PLS_1 ((uint32_t)0x00000040)
+#define PWR_CR_PLS_2 ((uint32_t)0x00000080)
+
+
+#define PWR_CR_PLS_LEV0 ((uint32_t)0x00000000)
+#define PWR_CR_PLS_LEV1 ((uint32_t)0x00000020)
+#define PWR_CR_PLS_LEV2 ((uint32_t)0x00000040)
+#define PWR_CR_PLS_LEV3 ((uint32_t)0x00000060)
+#define PWR_CR_PLS_LEV4 ((uint32_t)0x00000080)
+#define PWR_CR_PLS_LEV5 ((uint32_t)0x000000A0)
+#define PWR_CR_PLS_LEV6 ((uint32_t)0x000000C0)
+#define PWR_CR_PLS_LEV7 ((uint32_t)0x000000E0)
+
+#define PWR_CR_DBP ((uint32_t)0x00000100)
+#define PWR_CR_FPDS ((uint32_t)0x00000200)
+#define PWR_CR_LPLVDS ((uint32_t)0x00000400)
+#define PWR_CR_MRLVDS ((uint32_t)0x00000800)
+
+#define PWR_CR_VOS ((uint32_t)0x0000C000)
+#define PWR_CR_VOS_0 ((uint32_t)0x00004000)
+#define PWR_CR_VOS_1 ((uint32_t)0x00008000)
+
+
+#define PWR_CR_PMODE PWR_CR_VOS
+
+
+#define PWR_CSR_WUF ((uint32_t)0x00000001)
+#define PWR_CSR_SBF ((uint32_t)0x00000002)
+#define PWR_CSR_PVDO ((uint32_t)0x00000004)
+#define PWR_CSR_BRR ((uint32_t)0x00000008)
+#define PWR_CSR_EWUP ((uint32_t)0x00000100)
+#define PWR_CSR_BRE ((uint32_t)0x00000200)
+#define PWR_CSR_VOSRDY ((uint32_t)0x00004000)
+
+
+#define PWR_CSR_REGRDY PWR_CSR_VOSRDY
+
+
+
+
+
+
+
+#define RCC_CR_HSION ((uint32_t)0x00000001)
+#define RCC_CR_HSIRDY ((uint32_t)0x00000002)
+
+#define RCC_CR_HSITRIM ((uint32_t)0x000000F8)
+#define RCC_CR_HSITRIM_0 ((uint32_t)0x00000008)
+#define RCC_CR_HSITRIM_1 ((uint32_t)0x00000010)
+#define RCC_CR_HSITRIM_2 ((uint32_t)0x00000020)
+#define RCC_CR_HSITRIM_3 ((uint32_t)0x00000040)
+#define RCC_CR_HSITRIM_4 ((uint32_t)0x00000080)
+
+#define RCC_CR_HSICAL ((uint32_t)0x0000FF00)
+#define RCC_CR_HSICAL_0 ((uint32_t)0x00000100)
+#define RCC_CR_HSICAL_1 ((uint32_t)0x00000200)
+#define RCC_CR_HSICAL_2 ((uint32_t)0x00000400)
+#define RCC_CR_HSICAL_3 ((uint32_t)0x00000800)
+#define RCC_CR_HSICAL_4 ((uint32_t)0x00001000)
+#define RCC_CR_HSICAL_5 ((uint32_t)0x00002000)
+#define RCC_CR_HSICAL_6 ((uint32_t)0x00004000)
+#define RCC_CR_HSICAL_7 ((uint32_t)0x00008000)
+
+#define RCC_CR_HSEON ((uint32_t)0x00010000)
+#define RCC_CR_HSERDY ((uint32_t)0x00020000)
+#define RCC_CR_HSEBYP ((uint32_t)0x00040000)
+#define RCC_CR_CSSON ((uint32_t)0x00080000)
+#define RCC_CR_PLLON ((uint32_t)0x01000000)
+#define RCC_CR_PLLRDY ((uint32_t)0x02000000)
+#define RCC_CR_PLLI2SON ((uint32_t)0x04000000)
+#define RCC_CR_PLLI2SRDY ((uint32_t)0x08000000)
+
+
+
+#define RCC_PLLCFGR_PLLM ((uint32_t)0x0000003F)
+#define RCC_PLLCFGR_PLLM_0 ((uint32_t)0x00000001)
+#define RCC_PLLCFGR_PLLM_1 ((uint32_t)0x00000002)
+#define RCC_PLLCFGR_PLLM_2 ((uint32_t)0x00000004)
+#define RCC_PLLCFGR_PLLM_3 ((uint32_t)0x00000008)
+#define RCC_PLLCFGR_PLLM_4 ((uint32_t)0x00000010)
+#define RCC_PLLCFGR_PLLM_5 ((uint32_t)0x00000020)
+
+#define RCC_PLLCFGR_PLLN ((uint32_t)0x00007FC0)
+#define RCC_PLLCFGR_PLLN_0 ((uint32_t)0x00000040)
+#define RCC_PLLCFGR_PLLN_1 ((uint32_t)0x00000080)
+#define RCC_PLLCFGR_PLLN_2 ((uint32_t)0x00000100)
+#define RCC_PLLCFGR_PLLN_3 ((uint32_t)0x00000200)
+#define RCC_PLLCFGR_PLLN_4 ((uint32_t)0x00000400)
+#define RCC_PLLCFGR_PLLN_5 ((uint32_t)0x00000800)
+#define RCC_PLLCFGR_PLLN_6 ((uint32_t)0x00001000)
+#define RCC_PLLCFGR_PLLN_7 ((uint32_t)0x00002000)
+#define RCC_PLLCFGR_PLLN_8 ((uint32_t)0x00004000)
+
+#define RCC_PLLCFGR_PLLP ((uint32_t)0x00030000)
+#define RCC_PLLCFGR_PLLP_0 ((uint32_t)0x00010000)
+#define RCC_PLLCFGR_PLLP_1 ((uint32_t)0x00020000)
+
+#define RCC_PLLCFGR_PLLSRC ((uint32_t)0x00400000)
+#define RCC_PLLCFGR_PLLSRC_HSE ((uint32_t)0x00400000)
+#define RCC_PLLCFGR_PLLSRC_HSI ((uint32_t)0x00000000)
+
+#define RCC_PLLCFGR_PLLQ ((uint32_t)0x0F000000)
+#define RCC_PLLCFGR_PLLQ_0 ((uint32_t)0x01000000)
+#define RCC_PLLCFGR_PLLQ_1 ((uint32_t)0x02000000)
+#define RCC_PLLCFGR_PLLQ_2 ((uint32_t)0x04000000)
+#define RCC_PLLCFGR_PLLQ_3 ((uint32_t)0x08000000)
+
+
+
+#define RCC_CFGR_SW ((uint32_t)0x00000003)
+#define RCC_CFGR_SW_0 ((uint32_t)0x00000001)
+#define RCC_CFGR_SW_1 ((uint32_t)0x00000002)
+
+#define RCC_CFGR_SW_HSI ((uint32_t)0x00000000)
+#define RCC_CFGR_SW_HSE ((uint32_t)0x00000001)
+#define RCC_CFGR_SW_PLL ((uint32_t)0x00000002)
+
+
+#define RCC_CFGR_SWS ((uint32_t)0x0000000C)
+#define RCC_CFGR_SWS_0 ((uint32_t)0x00000004)
+#define RCC_CFGR_SWS_1 ((uint32_t)0x00000008)
+
+#define RCC_CFGR_SWS_HSI ((uint32_t)0x00000000)
+#define RCC_CFGR_SWS_HSE ((uint32_t)0x00000004)
+#define RCC_CFGR_SWS_PLL ((uint32_t)0x00000008)
+
+
+#define RCC_CFGR_HPRE ((uint32_t)0x000000F0)
+#define RCC_CFGR_HPRE_0 ((uint32_t)0x00000010)
+#define RCC_CFGR_HPRE_1 ((uint32_t)0x00000020)
+#define RCC_CFGR_HPRE_2 ((uint32_t)0x00000040)
+#define RCC_CFGR_HPRE_3 ((uint32_t)0x00000080)
+
+#define RCC_CFGR_HPRE_DIV1 ((uint32_t)0x00000000)
+#define RCC_CFGR_HPRE_DIV2 ((uint32_t)0x00000080)
+#define RCC_CFGR_HPRE_DIV4 ((uint32_t)0x00000090)
+#define RCC_CFGR_HPRE_DIV8 ((uint32_t)0x000000A0)
+#define RCC_CFGR_HPRE_DIV16 ((uint32_t)0x000000B0)
+#define RCC_CFGR_HPRE_DIV64 ((uint32_t)0x000000C0)
+#define RCC_CFGR_HPRE_DIV128 ((uint32_t)0x000000D0)
+#define RCC_CFGR_HPRE_DIV256 ((uint32_t)0x000000E0)
+#define RCC_CFGR_HPRE_DIV512 ((uint32_t)0x000000F0)
+
+
+#define RCC_CFGR_PPRE1 ((uint32_t)0x00001C00)
+#define RCC_CFGR_PPRE1_0 ((uint32_t)0x00000400)
+#define RCC_CFGR_PPRE1_1 ((uint32_t)0x00000800)
+#define RCC_CFGR_PPRE1_2 ((uint32_t)0x00001000)
+
+#define RCC_CFGR_PPRE1_DIV1 ((uint32_t)0x00000000)
+#define RCC_CFGR_PPRE1_DIV2 ((uint32_t)0x00001000)
+#define RCC_CFGR_PPRE1_DIV4 ((uint32_t)0x00001400)
+#define RCC_CFGR_PPRE1_DIV8 ((uint32_t)0x00001800)
+#define RCC_CFGR_PPRE1_DIV16 ((uint32_t)0x00001C00)
+
+
+#define RCC_CFGR_PPRE2 ((uint32_t)0x0000E000)
+#define RCC_CFGR_PPRE2_0 ((uint32_t)0x00002000)
+#define RCC_CFGR_PPRE2_1 ((uint32_t)0x00004000)
+#define RCC_CFGR_PPRE2_2 ((uint32_t)0x00008000)
+
+#define RCC_CFGR_PPRE2_DIV1 ((uint32_t)0x00000000)
+#define RCC_CFGR_PPRE2_DIV2 ((uint32_t)0x00008000)
+#define RCC_CFGR_PPRE2_DIV4 ((uint32_t)0x0000A000)
+#define RCC_CFGR_PPRE2_DIV8 ((uint32_t)0x0000C000)
+#define RCC_CFGR_PPRE2_DIV16 ((uint32_t)0x0000E000)
+
+
+#define RCC_CFGR_RTCPRE ((uint32_t)0x001F0000)
+#define RCC_CFGR_RTCPRE_0 ((uint32_t)0x00010000)
+#define RCC_CFGR_RTCPRE_1 ((uint32_t)0x00020000)
+#define RCC_CFGR_RTCPRE_2 ((uint32_t)0x00040000)
+#define RCC_CFGR_RTCPRE_3 ((uint32_t)0x00080000)
+#define RCC_CFGR_RTCPRE_4 ((uint32_t)0x00100000)
+
+
+#define RCC_CFGR_MCO1 ((uint32_t)0x00600000)
+#define RCC_CFGR_MCO1_0 ((uint32_t)0x00200000)
+#define RCC_CFGR_MCO1_1 ((uint32_t)0x00400000)
+
+#define RCC_CFGR_I2SSRC ((uint32_t)0x00800000)
+
+#define RCC_CFGR_MCO1PRE ((uint32_t)0x07000000)
+#define RCC_CFGR_MCO1PRE_0 ((uint32_t)0x01000000)
+#define RCC_CFGR_MCO1PRE_1 ((uint32_t)0x02000000)
+#define RCC_CFGR_MCO1PRE_2 ((uint32_t)0x04000000)
+
+#define RCC_CFGR_MCO2PRE ((uint32_t)0x38000000)
+#define RCC_CFGR_MCO2PRE_0 ((uint32_t)0x08000000)
+#define RCC_CFGR_MCO2PRE_1 ((uint32_t)0x10000000)
+#define RCC_CFGR_MCO2PRE_2 ((uint32_t)0x20000000)
+
+#define RCC_CFGR_MCO2 ((uint32_t)0xC0000000)
+#define RCC_CFGR_MCO2_0 ((uint32_t)0x40000000)
+#define RCC_CFGR_MCO2_1 ((uint32_t)0x80000000)
+
+
+#define RCC_CIR_LSIRDYF ((uint32_t)0x00000001)
+#define RCC_CIR_LSERDYF ((uint32_t)0x00000002)
+#define RCC_CIR_HSIRDYF ((uint32_t)0x00000004)
+#define RCC_CIR_HSERDYF ((uint32_t)0x00000008)
+#define RCC_CIR_PLLRDYF ((uint32_t)0x00000010)
+#define RCC_CIR_PLLI2SRDYF ((uint32_t)0x00000020)
+#define RCC_CIR_CSSF ((uint32_t)0x00000080)
+#define RCC_CIR_LSIRDYIE ((uint32_t)0x00000100)
+#define RCC_CIR_LSERDYIE ((uint32_t)0x00000200)
+#define RCC_CIR_HSIRDYIE ((uint32_t)0x00000400)
+#define RCC_CIR_HSERDYIE ((uint32_t)0x00000800)
+#define RCC_CIR_PLLRDYIE ((uint32_t)0x00001000)
+#define RCC_CIR_PLLI2SRDYIE ((uint32_t)0x00002000)
+#define RCC_CIR_LSIRDYC ((uint32_t)0x00010000)
+#define RCC_CIR_LSERDYC ((uint32_t)0x00020000)
+#define RCC_CIR_HSIRDYC ((uint32_t)0x00040000)
+#define RCC_CIR_HSERDYC ((uint32_t)0x00080000)
+#define RCC_CIR_PLLRDYC ((uint32_t)0x00100000)
+#define RCC_CIR_PLLI2SRDYC ((uint32_t)0x00200000)
+#define RCC_CIR_CSSC ((uint32_t)0x00800000)
+
+
+#define RCC_AHB1RSTR_GPIOARST ((uint32_t)0x00000001)
+#define RCC_AHB1RSTR_GPIOBRST ((uint32_t)0x00000002)
+#define RCC_AHB1RSTR_GPIOCRST ((uint32_t)0x00000004)
+#define RCC_AHB1RSTR_GPIODRST ((uint32_t)0x00000008)
+#define RCC_AHB1RSTR_GPIOERST ((uint32_t)0x00000010)
+#define RCC_AHB1RSTR_GPIOFRST ((uint32_t)0x00000020)
+#define RCC_AHB1RSTR_GPIOGRST ((uint32_t)0x00000040)
+#define RCC_AHB1RSTR_GPIOHRST ((uint32_t)0x00000080)
+#define RCC_AHB1RSTR_GPIOIRST ((uint32_t)0x00000100)
+#define RCC_AHB1RSTR_CRCRST ((uint32_t)0x00001000)
+#define RCC_AHB1RSTR_DMA1RST ((uint32_t)0x00200000)
+#define RCC_AHB1RSTR_DMA2RST ((uint32_t)0x00400000)
+#define RCC_AHB1RSTR_ETHMACRST ((uint32_t)0x02000000)
+#define RCC_AHB1RSTR_OTGHRST ((uint32_t)0x10000000)
+
+
+#define RCC_AHB2RSTR_DCMIRST ((uint32_t)0x00000001)
+#define RCC_AHB2RSTR_CRYPRST ((uint32_t)0x00000010)
+#define RCC_AHB2RSTR_HASHRST ((uint32_t)0x00000020)
+
+#define RCC_AHB2RSTR_HSAHRST RCC_AHB2RSTR_HASHRST
+#define RCC_AHB2RSTR_RNGRST ((uint32_t)0x00000040)
+#define RCC_AHB2RSTR_OTGFSRST ((uint32_t)0x00000080)
+
+
+#define RCC_AHB3RSTR_FSMCRST ((uint32_t)0x00000001)
+
+
+#define RCC_APB1RSTR_TIM2RST ((uint32_t)0x00000001)
+#define RCC_APB1RSTR_TIM3RST ((uint32_t)0x00000002)
+#define RCC_APB1RSTR_TIM4RST ((uint32_t)0x00000004)
+#define RCC_APB1RSTR_TIM5RST ((uint32_t)0x00000008)
+#define RCC_APB1RSTR_TIM6RST ((uint32_t)0x00000010)
+#define RCC_APB1RSTR_TIM7RST ((uint32_t)0x00000020)
+#define RCC_APB1RSTR_TIM12RST ((uint32_t)0x00000040)
+#define RCC_APB1RSTR_TIM13RST ((uint32_t)0x00000080)
+#define RCC_APB1RSTR_TIM14RST ((uint32_t)0x00000100)
+#define RCC_APB1RSTR_WWDGRST ((uint32_t)0x00000800)
+#define RCC_APB1RSTR_SPI2RST ((uint32_t)0x00004000)
+#define RCC_APB1RSTR_SPI3RST ((uint32_t)0x00008000)
+#define RCC_APB1RSTR_USART2RST ((uint32_t)0x00020000)
+#define RCC_APB1RSTR_USART3RST ((uint32_t)0x00040000)
+#define RCC_APB1RSTR_UART4RST ((uint32_t)0x00080000)
+#define RCC_APB1RSTR_UART5RST ((uint32_t)0x00100000)
+#define RCC_APB1RSTR_I2C1RST ((uint32_t)0x00200000)
+#define RCC_APB1RSTR_I2C2RST ((uint32_t)0x00400000)
+#define RCC_APB1RSTR_I2C3RST ((uint32_t)0x00800000)
+#define RCC_APB1RSTR_CAN1RST ((uint32_t)0x02000000)
+#define RCC_APB1RSTR_CAN2RST ((uint32_t)0x04000000)
+#define RCC_APB1RSTR_PWRRST ((uint32_t)0x10000000)
+#define RCC_APB1RSTR_DACRST ((uint32_t)0x20000000)
+#define RCC_APB1RSTR_UART7RST ((uint32_t)0x40000000)
+#define RCC_APB1RSTR_UART8RST ((uint32_t)0x80000000)
+
+
+#define RCC_APB2RSTR_TIM1RST ((uint32_t)0x00000001)
+#define RCC_APB2RSTR_TIM8RST ((uint32_t)0x00000002)
+#define RCC_APB2RSTR_USART1RST ((uint32_t)0x00000010)
+#define RCC_APB2RSTR_USART6RST ((uint32_t)0x00000020)
+#define RCC_APB2RSTR_ADCRST ((uint32_t)0x00000100)
+#define RCC_APB2RSTR_SDIORST ((uint32_t)0x00000800)
+#define RCC_APB2RSTR_SPI1RST ((uint32_t)0x00001000)
+#define RCC_APB2RSTR_SPI4RST ((uint32_t)0x00002000)
+#define RCC_APB2RSTR_SYSCFGRST ((uint32_t)0x00004000)
+#define RCC_APB2RSTR_TIM9RST ((uint32_t)0x00010000)
+#define RCC_APB2RSTR_TIM10RST ((uint32_t)0x00020000)
+#define RCC_APB2RSTR_TIM11RST ((uint32_t)0x00040000)
+#define RCC_APB2RSTR_SPI5RST ((uint32_t)0x00100000)
+#define RCC_APB2RSTR_SPI6RST ((uint32_t)0x00200000)
+
+
+#define RCC_APB2RSTR_SPI1 RCC_APB2RSTR_SPI1RST
+
+
+#define RCC_AHB1ENR_GPIOAEN ((uint32_t)0x00000001)
+#define RCC_AHB1ENR_GPIOBEN ((uint32_t)0x00000002)
+#define RCC_AHB1ENR_GPIOCEN ((uint32_t)0x00000004)
+#define RCC_AHB1ENR_GPIODEN ((uint32_t)0x00000008)
+#define RCC_AHB1ENR_GPIOEEN ((uint32_t)0x00000010)
+#define RCC_AHB1ENR_GPIOFEN ((uint32_t)0x00000020)
+#define RCC_AHB1ENR_GPIOGEN ((uint32_t)0x00000040)
+#define RCC_AHB1ENR_GPIOHEN ((uint32_t)0x00000080)
+#define RCC_AHB1ENR_GPIOIEN ((uint32_t)0x00000100)
+#define RCC_AHB1ENR_CRCEN ((uint32_t)0x00001000)
+#define RCC_AHB1ENR_BKPSRAMEN ((uint32_t)0x00040000)
+#define RCC_AHB1ENR_CCMDATARAMEN ((uint32_t)0x00100000)
+#define RCC_AHB1ENR_DMA1EN ((uint32_t)0x00200000)
+#define RCC_AHB1ENR_DMA2EN ((uint32_t)0x00400000)
+#define RCC_AHB1ENR_ETHMACEN ((uint32_t)0x02000000)
+#define RCC_AHB1ENR_ETHMACTXEN ((uint32_t)0x04000000)
+#define RCC_AHB1ENR_ETHMACRXEN ((uint32_t)0x08000000)
+#define RCC_AHB1ENR_ETHMACPTPEN ((uint32_t)0x10000000)
+#define RCC_AHB1ENR_OTGHSEN ((uint32_t)0x20000000)
+#define RCC_AHB1ENR_OTGHSULPIEN ((uint32_t)0x40000000)
+
+
+#define RCC_AHB2ENR_DCMIEN ((uint32_t)0x00000001)
+#define RCC_AHB2ENR_CRYPEN ((uint32_t)0x00000010)
+#define RCC_AHB2ENR_HASHEN ((uint32_t)0x00000020)
+#define RCC_AHB2ENR_RNGEN ((uint32_t)0x00000040)
+#define RCC_AHB2ENR_OTGFSEN ((uint32_t)0x00000080)
+
+
+#define RCC_AHB3ENR_FSMCEN ((uint32_t)0x00000001)
+
+
+#define RCC_APB1ENR_TIM2EN ((uint32_t)0x00000001)
+#define RCC_APB1ENR_TIM3EN ((uint32_t)0x00000002)
+#define RCC_APB1ENR_TIM4EN ((uint32_t)0x00000004)
+#define RCC_APB1ENR_TIM5EN ((uint32_t)0x00000008)
+#define RCC_APB1ENR_TIM6EN ((uint32_t)0x00000010)
+#define RCC_APB1ENR_TIM7EN ((uint32_t)0x00000020)
+#define RCC_APB1ENR_TIM12EN ((uint32_t)0x00000040)
+#define RCC_APB1ENR_TIM13EN ((uint32_t)0x00000080)
+#define RCC_APB1ENR_TIM14EN ((uint32_t)0x00000100)
+#define RCC_APB1ENR_WWDGEN ((uint32_t)0x00000800)
+#define RCC_APB1ENR_SPI2EN ((uint32_t)0x00004000)
+#define RCC_APB1ENR_SPI3EN ((uint32_t)0x00008000)
+#define RCC_APB1ENR_USART2EN ((uint32_t)0x00020000)
+#define RCC_APB1ENR_USART3EN ((uint32_t)0x00040000)
+#define RCC_APB1ENR_UART4EN ((uint32_t)0x00080000)
+#define RCC_APB1ENR_UART5EN ((uint32_t)0x00100000)
+#define RCC_APB1ENR_I2C1EN ((uint32_t)0x00200000)
+#define RCC_APB1ENR_I2C2EN ((uint32_t)0x00400000)
+#define RCC_APB1ENR_I2C3EN ((uint32_t)0x00800000)
+#define RCC_APB1ENR_CAN1EN ((uint32_t)0x02000000)
+#define RCC_APB1ENR_CAN2EN ((uint32_t)0x04000000)
+#define RCC_APB1ENR_PWREN ((uint32_t)0x10000000)
+#define RCC_APB1ENR_DACEN ((uint32_t)0x20000000)
+#define RCC_APB1ENR_UART7EN ((uint32_t)0x40000000)
+#define RCC_APB1ENR_UART8EN ((uint32_t)0x80000000)
+
+
+#define RCC_APB2ENR_TIM1EN ((uint32_t)0x00000001)
+#define RCC_APB2ENR_TIM8EN ((uint32_t)0x00000002)
+#define RCC_APB2ENR_USART1EN ((uint32_t)0x00000010)
+#define RCC_APB2ENR_USART6EN ((uint32_t)0x00000020)
+#define RCC_APB2ENR_ADC1EN ((uint32_t)0x00000100)
+#define RCC_APB2ENR_ADC2EN ((uint32_t)0x00000200)
+#define RCC_APB2ENR_ADC3EN ((uint32_t)0x00000400)
+#define RCC_APB2ENR_SDIOEN ((uint32_t)0x00000800)
+#define RCC_APB2ENR_SPI1EN ((uint32_t)0x00001000)
+#define RCC_APB2ENR_SPI4EN ((uint32_t)0x00002000)
+#define RCC_APB2ENR_SYSCFGEN ((uint32_t)0x00004000)
+#define RCC_APB2ENR_TIM9EN ((uint32_t)0x00010000)
+#define RCC_APB2ENR_TIM10EN ((uint32_t)0x00020000)
+#define RCC_APB2ENR_TIM11EN ((uint32_t)0x00040000)
+#define RCC_APB2ENR_SPI5EN ((uint32_t)0x00100000)
+#define RCC_APB2ENR_SPI6EN ((uint32_t)0x00200000)
+
+
+#define RCC_AHB1LPENR_GPIOALPEN ((uint32_t)0x00000001)
+#define RCC_AHB1LPENR_GPIOBLPEN ((uint32_t)0x00000002)
+#define RCC_AHB1LPENR_GPIOCLPEN ((uint32_t)0x00000004)
+#define RCC_AHB1LPENR_GPIODLPEN ((uint32_t)0x00000008)
+#define RCC_AHB1LPENR_GPIOELPEN ((uint32_t)0x00000010)
+#define RCC_AHB1LPENR_GPIOFLPEN ((uint32_t)0x00000020)
+#define RCC_AHB1LPENR_GPIOGLPEN ((uint32_t)0x00000040)
+#define RCC_AHB1LPENR_GPIOHLPEN ((uint32_t)0x00000080)
+#define RCC_AHB1LPENR_GPIOILPEN ((uint32_t)0x00000100)
+#define RCC_AHB1LPENR_CRCLPEN ((uint32_t)0x00001000)
+#define RCC_AHB1LPENR_FLITFLPEN ((uint32_t)0x00008000)
+#define RCC_AHB1LPENR_SRAM1LPEN ((uint32_t)0x00010000)
+#define RCC_AHB1LPENR_SRAM2LPEN ((uint32_t)0x00020000)
+#define RCC_AHB1LPENR_BKPSRAMLPEN ((uint32_t)0x00040000)
+#define RCC_AHB1LPENR_SRAM3LPEN ((uint32_t)0x00080000)
+#define RCC_AHB1LPENR_DMA1LPEN ((uint32_t)0x00200000)
+#define RCC_AHB1LPENR_DMA2LPEN ((uint32_t)0x00400000)
+#define RCC_AHB1LPENR_ETHMACLPEN ((uint32_t)0x02000000)
+#define RCC_AHB1LPENR_ETHMACTXLPEN ((uint32_t)0x04000000)
+#define RCC_AHB1LPENR_ETHMACRXLPEN ((uint32_t)0x08000000)
+#define RCC_AHB1LPENR_ETHMACPTPLPEN ((uint32_t)0x10000000)
+#define RCC_AHB1LPENR_OTGHSLPEN ((uint32_t)0x20000000)
+#define RCC_AHB1LPENR_OTGHSULPILPEN ((uint32_t)0x40000000)
+
+
+#define RCC_AHB2LPENR_DCMILPEN ((uint32_t)0x00000001)
+#define RCC_AHB2LPENR_CRYPLPEN ((uint32_t)0x00000010)
+#define RCC_AHB2LPENR_HASHLPEN ((uint32_t)0x00000020)
+#define RCC_AHB2LPENR_RNGLPEN ((uint32_t)0x00000040)
+#define RCC_AHB2LPENR_OTGFSLPEN ((uint32_t)0x00000080)
+
+
+#define RCC_AHB3LPENR_FSMCLPEN ((uint32_t)0x00000001)
+
+
+#define RCC_APB1LPENR_TIM2LPEN ((uint32_t)0x00000001)
+#define RCC_APB1LPENR_TIM3LPEN ((uint32_t)0x00000002)
+#define RCC_APB1LPENR_TIM4LPEN ((uint32_t)0x00000004)
+#define RCC_APB1LPENR_TIM5LPEN ((uint32_t)0x00000008)
+#define RCC_APB1LPENR_TIM6LPEN ((uint32_t)0x00000010)
+#define RCC_APB1LPENR_TIM7LPEN ((uint32_t)0x00000020)
+#define RCC_APB1LPENR_TIM12LPEN ((uint32_t)0x00000040)
+#define RCC_APB1LPENR_TIM13LPEN ((uint32_t)0x00000080)
+#define RCC_APB1LPENR_TIM14LPEN ((uint32_t)0x00000100)
+#define RCC_APB1LPENR_WWDGLPEN ((uint32_t)0x00000800)
+#define RCC_APB1LPENR_SPI2LPEN ((uint32_t)0x00004000)
+#define RCC_APB1LPENR_SPI3LPEN ((uint32_t)0x00008000)
+#define RCC_APB1LPENR_USART2LPEN ((uint32_t)0x00020000)
+#define RCC_APB1LPENR_USART3LPEN ((uint32_t)0x00040000)
+#define RCC_APB1LPENR_UART4LPEN ((uint32_t)0x00080000)
+#define RCC_APB1LPENR_UART5LPEN ((uint32_t)0x00100000)
+#define RCC_APB1LPENR_I2C1LPEN ((uint32_t)0x00200000)
+#define RCC_APB1LPENR_I2C2LPEN ((uint32_t)0x00400000)
+#define RCC_APB1LPENR_I2C3LPEN ((uint32_t)0x00800000)
+#define RCC_APB1LPENR_CAN1LPEN ((uint32_t)0x02000000)
+#define RCC_APB1LPENR_CAN2LPEN ((uint32_t)0x04000000)
+#define RCC_APB1LPENR_PWRLPEN ((uint32_t)0x10000000)
+#define RCC_APB1LPENR_DACLPEN ((uint32_t)0x20000000)
+#define RCC_APB1LPENR_UART7LPEN ((uint32_t)0x40000000)
+#define RCC_APB1LPENR_UART8LPEN ((uint32_t)0x80000000)
+
+
+#define RCC_APB2LPENR_TIM1LPEN ((uint32_t)0x00000001)
+#define RCC_APB2LPENR_TIM8LPEN ((uint32_t)0x00000002)
+#define RCC_APB2LPENR_USART1LPEN ((uint32_t)0x00000010)
+#define RCC_APB2LPENR_USART6LPEN ((uint32_t)0x00000020)
+#define RCC_APB2LPENR_ADC1LPEN ((uint32_t)0x00000100)
+#define RCC_APB2LPENR_ADC2PEN ((uint32_t)0x00000200)
+#define RCC_APB2LPENR_ADC3LPEN ((uint32_t)0x00000400)
+#define RCC_APB2LPENR_SDIOLPEN ((uint32_t)0x00000800)
+#define RCC_APB2LPENR_SPI1LPEN ((uint32_t)0x00001000)
+#define RCC_APB2LPENR_SPI4LPEN ((uint32_t)0x00002000)
+#define RCC_APB2LPENR_SYSCFGLPEN ((uint32_t)0x00004000)
+#define RCC_APB2LPENR_TIM9LPEN ((uint32_t)0x00010000)
+#define RCC_APB2LPENR_TIM10LPEN ((uint32_t)0x00020000)
+#define RCC_APB2LPENR_TIM11LPEN ((uint32_t)0x00040000)
+#define RCC_APB2LPENR_SPI5LPEN ((uint32_t)0x00100000)
+#define RCC_APB2LPENR_SPI6LPEN ((uint32_t)0x00200000)
+
+
+#define RCC_BDCR_LSEON ((uint32_t)0x00000001)
+#define RCC_BDCR_LSERDY ((uint32_t)0x00000002)
+#define RCC_BDCR_LSEBYP ((uint32_t)0x00000004)
+
+#define RCC_BDCR_RTCSEL ((uint32_t)0x00000300)
+#define RCC_BDCR_RTCSEL_0 ((uint32_t)0x00000100)
+#define RCC_BDCR_RTCSEL_1 ((uint32_t)0x00000200)
+
+#define RCC_BDCR_RTCEN ((uint32_t)0x00008000)
+#define RCC_BDCR_BDRST ((uint32_t)0x00010000)
+
+
+#define RCC_CSR_LSION ((uint32_t)0x00000001)
+#define RCC_CSR_LSIRDY ((uint32_t)0x00000002)
+#define RCC_CSR_RMVF ((uint32_t)0x01000000)
+#define RCC_CSR_BORRSTF ((uint32_t)0x02000000)
+#define RCC_CSR_PADRSTF ((uint32_t)0x04000000)
+#define RCC_CSR_PORRSTF ((uint32_t)0x08000000)
+#define RCC_CSR_SFTRSTF ((uint32_t)0x10000000)
+#define RCC_CSR_WDGRSTF ((uint32_t)0x20000000)
+#define RCC_CSR_WWDGRSTF ((uint32_t)0x40000000)
+#define RCC_CSR_LPWRRSTF ((uint32_t)0x80000000)
+
+
+#define RCC_SSCGR_MODPER ((uint32_t)0x00001FFF)
+#define RCC_SSCGR_INCSTEP ((uint32_t)0x0FFFE000)
+#define RCC_SSCGR_SPREADSEL ((uint32_t)0x40000000)
+#define RCC_SSCGR_SSCGEN ((uint32_t)0x80000000)
+
+
+#define RCC_PLLI2SCFGR_PLLI2SN ((uint32_t)0x00007FC0)
+#define RCC_PLLI2SCFGR_PLLI2SR ((uint32_t)0x70000000)
+
+
+#define RCC_DCKCFGR_TIMPRE ((uint32_t)0x01000000)
+# 5331 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define RNG_CR_RNGEN ((uint32_t)0x00000004)
+#define RNG_CR_IE ((uint32_t)0x00000008)
+
+
+#define RNG_SR_DRDY ((uint32_t)0x00000001)
+#define RNG_SR_CECS ((uint32_t)0x00000002)
+#define RNG_SR_SECS ((uint32_t)0x00000004)
+#define RNG_SR_CEIS ((uint32_t)0x00000020)
+#define RNG_SR_SEIS ((uint32_t)0x00000040)
+
+
+
+
+
+
+
+#define RTC_TR_PM ((uint32_t)0x00400000)
+#define RTC_TR_HT ((uint32_t)0x00300000)
+#define RTC_TR_HT_0 ((uint32_t)0x00100000)
+#define RTC_TR_HT_1 ((uint32_t)0x00200000)
+#define RTC_TR_HU ((uint32_t)0x000F0000)
+#define RTC_TR_HU_0 ((uint32_t)0x00010000)
+#define RTC_TR_HU_1 ((uint32_t)0x00020000)
+#define RTC_TR_HU_2 ((uint32_t)0x00040000)
+#define RTC_TR_HU_3 ((uint32_t)0x00080000)
+#define RTC_TR_MNT ((uint32_t)0x00007000)
+#define RTC_TR_MNT_0 ((uint32_t)0x00001000)
+#define RTC_TR_MNT_1 ((uint32_t)0x00002000)
+#define RTC_TR_MNT_2 ((uint32_t)0x00004000)
+#define RTC_TR_MNU ((uint32_t)0x00000F00)
+#define RTC_TR_MNU_0 ((uint32_t)0x00000100)
+#define RTC_TR_MNU_1 ((uint32_t)0x00000200)
+#define RTC_TR_MNU_2 ((uint32_t)0x00000400)
+#define RTC_TR_MNU_3 ((uint32_t)0x00000800)
+#define RTC_TR_ST ((uint32_t)0x00000070)
+#define RTC_TR_ST_0 ((uint32_t)0x00000010)
+#define RTC_TR_ST_1 ((uint32_t)0x00000020)
+#define RTC_TR_ST_2 ((uint32_t)0x00000040)
+#define RTC_TR_SU ((uint32_t)0x0000000F)
+#define RTC_TR_SU_0 ((uint32_t)0x00000001)
+#define RTC_TR_SU_1 ((uint32_t)0x00000002)
+#define RTC_TR_SU_2 ((uint32_t)0x00000004)
+#define RTC_TR_SU_3 ((uint32_t)0x00000008)
+
+
+#define RTC_DR_YT ((uint32_t)0x00F00000)
+#define RTC_DR_YT_0 ((uint32_t)0x00100000)
+#define RTC_DR_YT_1 ((uint32_t)0x00200000)
+#define RTC_DR_YT_2 ((uint32_t)0x00400000)
+#define RTC_DR_YT_3 ((uint32_t)0x00800000)
+#define RTC_DR_YU ((uint32_t)0x000F0000)
+#define RTC_DR_YU_0 ((uint32_t)0x00010000)
+#define RTC_DR_YU_1 ((uint32_t)0x00020000)
+#define RTC_DR_YU_2 ((uint32_t)0x00040000)
+#define RTC_DR_YU_3 ((uint32_t)0x00080000)
+#define RTC_DR_WDU ((uint32_t)0x0000E000)
+#define RTC_DR_WDU_0 ((uint32_t)0x00002000)
+#define RTC_DR_WDU_1 ((uint32_t)0x00004000)
+#define RTC_DR_WDU_2 ((uint32_t)0x00008000)
+#define RTC_DR_MT ((uint32_t)0x00001000)
+#define RTC_DR_MU ((uint32_t)0x00000F00)
+#define RTC_DR_MU_0 ((uint32_t)0x00000100)
+#define RTC_DR_MU_1 ((uint32_t)0x00000200)
+#define RTC_DR_MU_2 ((uint32_t)0x00000400)
+#define RTC_DR_MU_3 ((uint32_t)0x00000800)
+#define RTC_DR_DT ((uint32_t)0x00000030)
+#define RTC_DR_DT_0 ((uint32_t)0x00000010)
+#define RTC_DR_DT_1 ((uint32_t)0x00000020)
+#define RTC_DR_DU ((uint32_t)0x0000000F)
+#define RTC_DR_DU_0 ((uint32_t)0x00000001)
+#define RTC_DR_DU_1 ((uint32_t)0x00000002)
+#define RTC_DR_DU_2 ((uint32_t)0x00000004)
+#define RTC_DR_DU_3 ((uint32_t)0x00000008)
+
+
+#define RTC_CR_COE ((uint32_t)0x00800000)
+#define RTC_CR_OSEL ((uint32_t)0x00600000)
+#define RTC_CR_OSEL_0 ((uint32_t)0x00200000)
+#define RTC_CR_OSEL_1 ((uint32_t)0x00400000)
+#define RTC_CR_POL ((uint32_t)0x00100000)
+#define RTC_CR_COSEL ((uint32_t)0x00080000)
+#define RTC_CR_BCK ((uint32_t)0x00040000)
+#define RTC_CR_SUB1H ((uint32_t)0x00020000)
+#define RTC_CR_ADD1H ((uint32_t)0x00010000)
+#define RTC_CR_TSIE ((uint32_t)0x00008000)
+#define RTC_CR_WUTIE ((uint32_t)0x00004000)
+#define RTC_CR_ALRBIE ((uint32_t)0x00002000)
+#define RTC_CR_ALRAIE ((uint32_t)0x00001000)
+#define RTC_CR_TSE ((uint32_t)0x00000800)
+#define RTC_CR_WUTE ((uint32_t)0x00000400)
+#define RTC_CR_ALRBE ((uint32_t)0x00000200)
+#define RTC_CR_ALRAE ((uint32_t)0x00000100)
+#define RTC_CR_DCE ((uint32_t)0x00000080)
+#define RTC_CR_FMT ((uint32_t)0x00000040)
+#define RTC_CR_BYPSHAD ((uint32_t)0x00000020)
+#define RTC_CR_REFCKON ((uint32_t)0x00000010)
+#define RTC_CR_TSEDGE ((uint32_t)0x00000008)
+#define RTC_CR_WUCKSEL ((uint32_t)0x00000007)
+#define RTC_CR_WUCKSEL_0 ((uint32_t)0x00000001)
+#define RTC_CR_WUCKSEL_1 ((uint32_t)0x00000002)
+#define RTC_CR_WUCKSEL_2 ((uint32_t)0x00000004)
+
+
+#define RTC_ISR_RECALPF ((uint32_t)0x00010000)
+#define RTC_ISR_TAMP1F ((uint32_t)0x00002000)
+#define RTC_ISR_TSOVF ((uint32_t)0x00001000)
+#define RTC_ISR_TSF ((uint32_t)0x00000800)
+#define RTC_ISR_WUTF ((uint32_t)0x00000400)
+#define RTC_ISR_ALRBF ((uint32_t)0x00000200)
+#define RTC_ISR_ALRAF ((uint32_t)0x00000100)
+#define RTC_ISR_INIT ((uint32_t)0x00000080)
+#define RTC_ISR_INITF ((uint32_t)0x00000040)
+#define RTC_ISR_RSF ((uint32_t)0x00000020)
+#define RTC_ISR_INITS ((uint32_t)0x00000010)
+#define RTC_ISR_SHPF ((uint32_t)0x00000008)
+#define RTC_ISR_WUTWF ((uint32_t)0x00000004)
+#define RTC_ISR_ALRBWF ((uint32_t)0x00000002)
+#define RTC_ISR_ALRAWF ((uint32_t)0x00000001)
+
+
+#define RTC_PRER_PREDIV_A ((uint32_t)0x007F0000)
+#define RTC_PRER_PREDIV_S ((uint32_t)0x00001FFF)
+
+
+#define RTC_WUTR_WUT ((uint32_t)0x0000FFFF)
+
+
+#define RTC_CALIBR_DCS ((uint32_t)0x00000080)
+#define RTC_CALIBR_DC ((uint32_t)0x0000001F)
+
+
+#define RTC_ALRMAR_MSK4 ((uint32_t)0x80000000)
+#define RTC_ALRMAR_WDSEL ((uint32_t)0x40000000)
+#define RTC_ALRMAR_DT ((uint32_t)0x30000000)
+#define RTC_ALRMAR_DT_0 ((uint32_t)0x10000000)
+#define RTC_ALRMAR_DT_1 ((uint32_t)0x20000000)
+#define RTC_ALRMAR_DU ((uint32_t)0x0F000000)
+#define RTC_ALRMAR_DU_0 ((uint32_t)0x01000000)
+#define RTC_ALRMAR_DU_1 ((uint32_t)0x02000000)
+#define RTC_ALRMAR_DU_2 ((uint32_t)0x04000000)
+#define RTC_ALRMAR_DU_3 ((uint32_t)0x08000000)
+#define RTC_ALRMAR_MSK3 ((uint32_t)0x00800000)
+#define RTC_ALRMAR_PM ((uint32_t)0x00400000)
+#define RTC_ALRMAR_HT ((uint32_t)0x00300000)
+#define RTC_ALRMAR_HT_0 ((uint32_t)0x00100000)
+#define RTC_ALRMAR_HT_1 ((uint32_t)0x00200000)
+#define RTC_ALRMAR_HU ((uint32_t)0x000F0000)
+#define RTC_ALRMAR_HU_0 ((uint32_t)0x00010000)
+#define RTC_ALRMAR_HU_1 ((uint32_t)0x00020000)
+#define RTC_ALRMAR_HU_2 ((uint32_t)0x00040000)
+#define RTC_ALRMAR_HU_3 ((uint32_t)0x00080000)
+#define RTC_ALRMAR_MSK2 ((uint32_t)0x00008000)
+#define RTC_ALRMAR_MNT ((uint32_t)0x00007000)
+#define RTC_ALRMAR_MNT_0 ((uint32_t)0x00001000)
+#define RTC_ALRMAR_MNT_1 ((uint32_t)0x00002000)
+#define RTC_ALRMAR_MNT_2 ((uint32_t)0x00004000)
+#define RTC_ALRMAR_MNU ((uint32_t)0x00000F00)
+#define RTC_ALRMAR_MNU_0 ((uint32_t)0x00000100)
+#define RTC_ALRMAR_MNU_1 ((uint32_t)0x00000200)
+#define RTC_ALRMAR_MNU_2 ((uint32_t)0x00000400)
+#define RTC_ALRMAR_MNU_3 ((uint32_t)0x00000800)
+#define RTC_ALRMAR_MSK1 ((uint32_t)0x00000080)
+#define RTC_ALRMAR_ST ((uint32_t)0x00000070)
+#define RTC_ALRMAR_ST_0 ((uint32_t)0x00000010)
+#define RTC_ALRMAR_ST_1 ((uint32_t)0x00000020)
+#define RTC_ALRMAR_ST_2 ((uint32_t)0x00000040)
+#define RTC_ALRMAR_SU ((uint32_t)0x0000000F)
+#define RTC_ALRMAR_SU_0 ((uint32_t)0x00000001)
+#define RTC_ALRMAR_SU_1 ((uint32_t)0x00000002)
+#define RTC_ALRMAR_SU_2 ((uint32_t)0x00000004)
+#define RTC_ALRMAR_SU_3 ((uint32_t)0x00000008)
+
+
+#define RTC_ALRMBR_MSK4 ((uint32_t)0x80000000)
+#define RTC_ALRMBR_WDSEL ((uint32_t)0x40000000)
+#define RTC_ALRMBR_DT ((uint32_t)0x30000000)
+#define RTC_ALRMBR_DT_0 ((uint32_t)0x10000000)
+#define RTC_ALRMBR_DT_1 ((uint32_t)0x20000000)
+#define RTC_ALRMBR_DU ((uint32_t)0x0F000000)
+#define RTC_ALRMBR_DU_0 ((uint32_t)0x01000000)
+#define RTC_ALRMBR_DU_1 ((uint32_t)0x02000000)
+#define RTC_ALRMBR_DU_2 ((uint32_t)0x04000000)
+#define RTC_ALRMBR_DU_3 ((uint32_t)0x08000000)
+#define RTC_ALRMBR_MSK3 ((uint32_t)0x00800000)
+#define RTC_ALRMBR_PM ((uint32_t)0x00400000)
+#define RTC_ALRMBR_HT ((uint32_t)0x00300000)
+#define RTC_ALRMBR_HT_0 ((uint32_t)0x00100000)
+#define RTC_ALRMBR_HT_1 ((uint32_t)0x00200000)
+#define RTC_ALRMBR_HU ((uint32_t)0x000F0000)
+#define RTC_ALRMBR_HU_0 ((uint32_t)0x00010000)
+#define RTC_ALRMBR_HU_1 ((uint32_t)0x00020000)
+#define RTC_ALRMBR_HU_2 ((uint32_t)0x00040000)
+#define RTC_ALRMBR_HU_3 ((uint32_t)0x00080000)
+#define RTC_ALRMBR_MSK2 ((uint32_t)0x00008000)
+#define RTC_ALRMBR_MNT ((uint32_t)0x00007000)
+#define RTC_ALRMBR_MNT_0 ((uint32_t)0x00001000)
+#define RTC_ALRMBR_MNT_1 ((uint32_t)0x00002000)
+#define RTC_ALRMBR_MNT_2 ((uint32_t)0x00004000)
+#define RTC_ALRMBR_MNU ((uint32_t)0x00000F00)
+#define RTC_ALRMBR_MNU_0 ((uint32_t)0x00000100)
+#define RTC_ALRMBR_MNU_1 ((uint32_t)0x00000200)
+#define RTC_ALRMBR_MNU_2 ((uint32_t)0x00000400)
+#define RTC_ALRMBR_MNU_3 ((uint32_t)0x00000800)
+#define RTC_ALRMBR_MSK1 ((uint32_t)0x00000080)
+#define RTC_ALRMBR_ST ((uint32_t)0x00000070)
+#define RTC_ALRMBR_ST_0 ((uint32_t)0x00000010)
+#define RTC_ALRMBR_ST_1 ((uint32_t)0x00000020)
+#define RTC_ALRMBR_ST_2 ((uint32_t)0x00000040)
+#define RTC_ALRMBR_SU ((uint32_t)0x0000000F)
+#define RTC_ALRMBR_SU_0 ((uint32_t)0x00000001)
+#define RTC_ALRMBR_SU_1 ((uint32_t)0x00000002)
+#define RTC_ALRMBR_SU_2 ((uint32_t)0x00000004)
+#define RTC_ALRMBR_SU_3 ((uint32_t)0x00000008)
+
+
+#define RTC_WPR_KEY ((uint32_t)0x000000FF)
+
+
+#define RTC_SSR_SS ((uint32_t)0x0000FFFF)
+
+
+#define RTC_SHIFTR_SUBFS ((uint32_t)0x00007FFF)
+#define RTC_SHIFTR_ADD1S ((uint32_t)0x80000000)
+
+
+#define RTC_TSTR_PM ((uint32_t)0x00400000)
+#define RTC_TSTR_HT ((uint32_t)0x00300000)
+#define RTC_TSTR_HT_0 ((uint32_t)0x00100000)
+#define RTC_TSTR_HT_1 ((uint32_t)0x00200000)
+#define RTC_TSTR_HU ((uint32_t)0x000F0000)
+#define RTC_TSTR_HU_0 ((uint32_t)0x00010000)
+#define RTC_TSTR_HU_1 ((uint32_t)0x00020000)
+#define RTC_TSTR_HU_2 ((uint32_t)0x00040000)
+#define RTC_TSTR_HU_3 ((uint32_t)0x00080000)
+#define RTC_TSTR_MNT ((uint32_t)0x00007000)
+#define RTC_TSTR_MNT_0 ((uint32_t)0x00001000)
+#define RTC_TSTR_MNT_1 ((uint32_t)0x00002000)
+#define RTC_TSTR_MNT_2 ((uint32_t)0x00004000)
+#define RTC_TSTR_MNU ((uint32_t)0x00000F00)
+#define RTC_TSTR_MNU_0 ((uint32_t)0x00000100)
+#define RTC_TSTR_MNU_1 ((uint32_t)0x00000200)
+#define RTC_TSTR_MNU_2 ((uint32_t)0x00000400)
+#define RTC_TSTR_MNU_3 ((uint32_t)0x00000800)
+#define RTC_TSTR_ST ((uint32_t)0x00000070)
+#define RTC_TSTR_ST_0 ((uint32_t)0x00000010)
+#define RTC_TSTR_ST_1 ((uint32_t)0x00000020)
+#define RTC_TSTR_ST_2 ((uint32_t)0x00000040)
+#define RTC_TSTR_SU ((uint32_t)0x0000000F)
+#define RTC_TSTR_SU_0 ((uint32_t)0x00000001)
+#define RTC_TSTR_SU_1 ((uint32_t)0x00000002)
+#define RTC_TSTR_SU_2 ((uint32_t)0x00000004)
+#define RTC_TSTR_SU_3 ((uint32_t)0x00000008)
+
+
+#define RTC_TSDR_WDU ((uint32_t)0x0000E000)
+#define RTC_TSDR_WDU_0 ((uint32_t)0x00002000)
+#define RTC_TSDR_WDU_1 ((uint32_t)0x00004000)
+#define RTC_TSDR_WDU_2 ((uint32_t)0x00008000)
+#define RTC_TSDR_MT ((uint32_t)0x00001000)
+#define RTC_TSDR_MU ((uint32_t)0x00000F00)
+#define RTC_TSDR_MU_0 ((uint32_t)0x00000100)
+#define RTC_TSDR_MU_1 ((uint32_t)0x00000200)
+#define RTC_TSDR_MU_2 ((uint32_t)0x00000400)
+#define RTC_TSDR_MU_3 ((uint32_t)0x00000800)
+#define RTC_TSDR_DT ((uint32_t)0x00000030)
+#define RTC_TSDR_DT_0 ((uint32_t)0x00000010)
+#define RTC_TSDR_DT_1 ((uint32_t)0x00000020)
+#define RTC_TSDR_DU ((uint32_t)0x0000000F)
+#define RTC_TSDR_DU_0 ((uint32_t)0x00000001)
+#define RTC_TSDR_DU_1 ((uint32_t)0x00000002)
+#define RTC_TSDR_DU_2 ((uint32_t)0x00000004)
+#define RTC_TSDR_DU_3 ((uint32_t)0x00000008)
+
+
+#define RTC_TSSSR_SS ((uint32_t)0x0000FFFF)
+
+
+#define RTC_CALR_CALP ((uint32_t)0x00008000)
+#define RTC_CALR_CALW8 ((uint32_t)0x00004000)
+#define RTC_CALR_CALW16 ((uint32_t)0x00002000)
+#define RTC_CALR_CALM ((uint32_t)0x000001FF)
+#define RTC_CALR_CALM_0 ((uint32_t)0x00000001)
+#define RTC_CALR_CALM_1 ((uint32_t)0x00000002)
+#define RTC_CALR_CALM_2 ((uint32_t)0x00000004)
+#define RTC_CALR_CALM_3 ((uint32_t)0x00000008)
+#define RTC_CALR_CALM_4 ((uint32_t)0x00000010)
+#define RTC_CALR_CALM_5 ((uint32_t)0x00000020)
+#define RTC_CALR_CALM_6 ((uint32_t)0x00000040)
+#define RTC_CALR_CALM_7 ((uint32_t)0x00000080)
+#define RTC_CALR_CALM_8 ((uint32_t)0x00000100)
+
+
+#define RTC_TAFCR_ALARMOUTTYPE ((uint32_t)0x00040000)
+#define RTC_TAFCR_TSINSEL ((uint32_t)0x00020000)
+#define RTC_TAFCR_TAMPINSEL ((uint32_t)0x00010000)
+#define RTC_TAFCR_TAMPPUDIS ((uint32_t)0x00008000)
+#define RTC_TAFCR_TAMPPRCH ((uint32_t)0x00006000)
+#define RTC_TAFCR_TAMPPRCH_0 ((uint32_t)0x00002000)
+#define RTC_TAFCR_TAMPPRCH_1 ((uint32_t)0x00004000)
+#define RTC_TAFCR_TAMPFLT ((uint32_t)0x00001800)
+#define RTC_TAFCR_TAMPFLT_0 ((uint32_t)0x00000800)
+#define RTC_TAFCR_TAMPFLT_1 ((uint32_t)0x00001000)
+#define RTC_TAFCR_TAMPFREQ ((uint32_t)0x00000700)
+#define RTC_TAFCR_TAMPFREQ_0 ((uint32_t)0x00000100)
+#define RTC_TAFCR_TAMPFREQ_1 ((uint32_t)0x00000200)
+#define RTC_TAFCR_TAMPFREQ_2 ((uint32_t)0x00000400)
+#define RTC_TAFCR_TAMPTS ((uint32_t)0x00000080)
+#define RTC_TAFCR_TAMPIE ((uint32_t)0x00000004)
+#define RTC_TAFCR_TAMP1TRG ((uint32_t)0x00000002)
+#define RTC_TAFCR_TAMP1E ((uint32_t)0x00000001)
+
+
+#define RTC_ALRMASSR_MASKSS ((uint32_t)0x0F000000)
+#define RTC_ALRMASSR_MASKSS_0 ((uint32_t)0x01000000)
+#define RTC_ALRMASSR_MASKSS_1 ((uint32_t)0x02000000)
+#define RTC_ALRMASSR_MASKSS_2 ((uint32_t)0x04000000)
+#define RTC_ALRMASSR_MASKSS_3 ((uint32_t)0x08000000)
+#define RTC_ALRMASSR_SS ((uint32_t)0x00007FFF)
+
+
+#define RTC_ALRMBSSR_MASKSS ((uint32_t)0x0F000000)
+#define RTC_ALRMBSSR_MASKSS_0 ((uint32_t)0x01000000)
+#define RTC_ALRMBSSR_MASKSS_1 ((uint32_t)0x02000000)
+#define RTC_ALRMBSSR_MASKSS_2 ((uint32_t)0x04000000)
+#define RTC_ALRMBSSR_MASKSS_3 ((uint32_t)0x08000000)
+#define RTC_ALRMBSSR_SS ((uint32_t)0x00007FFF)
+
+
+#define RTC_BKP0R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP1R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP2R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP3R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP4R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP5R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP6R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP7R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP8R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP9R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP10R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP11R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP12R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP13R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP14R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP15R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP16R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP17R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP18R ((uint32_t)0xFFFFFFFF)
+
+
+#define RTC_BKP19R ((uint32_t)0xFFFFFFFF)
+# 5725 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define SDIO_POWER_PWRCTRL ((uint8_t)0x03)
+#define SDIO_POWER_PWRCTRL_0 ((uint8_t)0x01)
+#define SDIO_POWER_PWRCTRL_1 ((uint8_t)0x02)
+
+
+#define SDIO_CLKCR_CLKDIV ((uint16_t)0x00FF)
+#define SDIO_CLKCR_CLKEN ((uint16_t)0x0100)
+#define SDIO_CLKCR_PWRSAV ((uint16_t)0x0200)
+#define SDIO_CLKCR_BYPASS ((uint16_t)0x0400)
+
+#define SDIO_CLKCR_WIDBUS ((uint16_t)0x1800)
+#define SDIO_CLKCR_WIDBUS_0 ((uint16_t)0x0800)
+#define SDIO_CLKCR_WIDBUS_1 ((uint16_t)0x1000)
+
+#define SDIO_CLKCR_NEGEDGE ((uint16_t)0x2000)
+#define SDIO_CLKCR_HWFC_EN ((uint16_t)0x4000)
+
+
+#define SDIO_ARG_CMDARG ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_CMD_CMDINDEX ((uint16_t)0x003F)
+
+#define SDIO_CMD_WAITRESP ((uint16_t)0x00C0)
+#define SDIO_CMD_WAITRESP_0 ((uint16_t)0x0040)
+#define SDIO_CMD_WAITRESP_1 ((uint16_t)0x0080)
+
+#define SDIO_CMD_WAITINT ((uint16_t)0x0100)
+#define SDIO_CMD_WAITPEND ((uint16_t)0x0200)
+#define SDIO_CMD_CPSMEN ((uint16_t)0x0400)
+#define SDIO_CMD_SDIOSUSPEND ((uint16_t)0x0800)
+#define SDIO_CMD_ENCMDCOMPL ((uint16_t)0x1000)
+#define SDIO_CMD_NIEN ((uint16_t)0x2000)
+#define SDIO_CMD_CEATACMD ((uint16_t)0x4000)
+
+
+#define SDIO_RESPCMD_RESPCMD ((uint8_t)0x3F)
+
+
+#define SDIO_RESP0_CARDSTATUS0 ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_RESP1_CARDSTATUS1 ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_RESP2_CARDSTATUS2 ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_RESP3_CARDSTATUS3 ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_RESP4_CARDSTATUS4 ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_DTIMER_DATATIME ((uint32_t)0xFFFFFFFF)
+
+
+#define SDIO_DLEN_DATALENGTH ((uint32_t)0x01FFFFFF)
+
+
+#define SDIO_DCTRL_DTEN ((uint16_t)0x0001)
+#define SDIO_DCTRL_DTDIR ((uint16_t)0x0002)
+#define SDIO_DCTRL_DTMODE ((uint16_t)0x0004)
+#define SDIO_DCTRL_DMAEN ((uint16_t)0x0008)
+
+#define SDIO_DCTRL_DBLOCKSIZE ((uint16_t)0x00F0)
+#define SDIO_DCTRL_DBLOCKSIZE_0 ((uint16_t)0x0010)
+#define SDIO_DCTRL_DBLOCKSIZE_1 ((uint16_t)0x0020)
+#define SDIO_DCTRL_DBLOCKSIZE_2 ((uint16_t)0x0040)
+#define SDIO_DCTRL_DBLOCKSIZE_3 ((uint16_t)0x0080)
+
+#define SDIO_DCTRL_RWSTART ((uint16_t)0x0100)
+#define SDIO_DCTRL_RWSTOP ((uint16_t)0x0200)
+#define SDIO_DCTRL_RWMOD ((uint16_t)0x0400)
+#define SDIO_DCTRL_SDIOEN ((uint16_t)0x0800)
+
+
+#define SDIO_DCOUNT_DATACOUNT ((uint32_t)0x01FFFFFF)
+
+
+#define SDIO_STA_CCRCFAIL ((uint32_t)0x00000001)
+#define SDIO_STA_DCRCFAIL ((uint32_t)0x00000002)
+#define SDIO_STA_CTIMEOUT ((uint32_t)0x00000004)
+#define SDIO_STA_DTIMEOUT ((uint32_t)0x00000008)
+#define SDIO_STA_TXUNDERR ((uint32_t)0x00000010)
+#define SDIO_STA_RXOVERR ((uint32_t)0x00000020)
+#define SDIO_STA_CMDREND ((uint32_t)0x00000040)
+#define SDIO_STA_CMDSENT ((uint32_t)0x00000080)
+#define SDIO_STA_DATAEND ((uint32_t)0x00000100)
+#define SDIO_STA_STBITERR ((uint32_t)0x00000200)
+#define SDIO_STA_DBCKEND ((uint32_t)0x00000400)
+#define SDIO_STA_CMDACT ((uint32_t)0x00000800)
+#define SDIO_STA_TXACT ((uint32_t)0x00001000)
+#define SDIO_STA_RXACT ((uint32_t)0x00002000)
+#define SDIO_STA_TXFIFOHE ((uint32_t)0x00004000)
+#define SDIO_STA_RXFIFOHF ((uint32_t)0x00008000)
+#define SDIO_STA_TXFIFOF ((uint32_t)0x00010000)
+#define SDIO_STA_RXFIFOF ((uint32_t)0x00020000)
+#define SDIO_STA_TXFIFOE ((uint32_t)0x00040000)
+#define SDIO_STA_RXFIFOE ((uint32_t)0x00080000)
+#define SDIO_STA_TXDAVL ((uint32_t)0x00100000)
+#define SDIO_STA_RXDAVL ((uint32_t)0x00200000)
+#define SDIO_STA_SDIOIT ((uint32_t)0x00400000)
+#define SDIO_STA_CEATAEND ((uint32_t)0x00800000)
+
+
+#define SDIO_ICR_CCRCFAILC ((uint32_t)0x00000001)
+#define SDIO_ICR_DCRCFAILC ((uint32_t)0x00000002)
+#define SDIO_ICR_CTIMEOUTC ((uint32_t)0x00000004)
+#define SDIO_ICR_DTIMEOUTC ((uint32_t)0x00000008)
+#define SDIO_ICR_TXUNDERRC ((uint32_t)0x00000010)
+#define SDIO_ICR_RXOVERRC ((uint32_t)0x00000020)
+#define SDIO_ICR_CMDRENDC ((uint32_t)0x00000040)
+#define SDIO_ICR_CMDSENTC ((uint32_t)0x00000080)
+#define SDIO_ICR_DATAENDC ((uint32_t)0x00000100)
+#define SDIO_ICR_STBITERRC ((uint32_t)0x00000200)
+#define SDIO_ICR_DBCKENDC ((uint32_t)0x00000400)
+#define SDIO_ICR_SDIOITC ((uint32_t)0x00400000)
+#define SDIO_ICR_CEATAENDC ((uint32_t)0x00800000)
+
+
+#define SDIO_MASK_CCRCFAILIE ((uint32_t)0x00000001)
+#define SDIO_MASK_DCRCFAILIE ((uint32_t)0x00000002)
+#define SDIO_MASK_CTIMEOUTIE ((uint32_t)0x00000004)
+#define SDIO_MASK_DTIMEOUTIE ((uint32_t)0x00000008)
+#define SDIO_MASK_TXUNDERRIE ((uint32_t)0x00000010)
+#define SDIO_MASK_RXOVERRIE ((uint32_t)0x00000020)
+#define SDIO_MASK_CMDRENDIE ((uint32_t)0x00000040)
+#define SDIO_MASK_CMDSENTIE ((uint32_t)0x00000080)
+#define SDIO_MASK_DATAENDIE ((uint32_t)0x00000100)
+#define SDIO_MASK_STBITERRIE ((uint32_t)0x00000200)
+#define SDIO_MASK_DBCKENDIE ((uint32_t)0x00000400)
+#define SDIO_MASK_CMDACTIE ((uint32_t)0x00000800)
+#define SDIO_MASK_TXACTIE ((uint32_t)0x00001000)
+#define SDIO_MASK_RXACTIE ((uint32_t)0x00002000)
+#define SDIO_MASK_TXFIFOHEIE ((uint32_t)0x00004000)
+#define SDIO_MASK_RXFIFOHFIE ((uint32_t)0x00008000)
+#define SDIO_MASK_TXFIFOFIE ((uint32_t)0x00010000)
+#define SDIO_MASK_RXFIFOFIE ((uint32_t)0x00020000)
+#define SDIO_MASK_TXFIFOEIE ((uint32_t)0x00040000)
+#define SDIO_MASK_RXFIFOEIE ((uint32_t)0x00080000)
+#define SDIO_MASK_TXDAVLIE ((uint32_t)0x00100000)
+#define SDIO_MASK_RXDAVLIE ((uint32_t)0x00200000)
+#define SDIO_MASK_SDIOITIE ((uint32_t)0x00400000)
+#define SDIO_MASK_CEATAENDIE ((uint32_t)0x00800000)
+
+
+#define SDIO_FIFOCNT_FIFOCOUNT ((uint32_t)0x00FFFFFF)
+
+
+#define SDIO_FIFO_FIFODATA ((uint32_t)0xFFFFFFFF)
+
+
+
+
+
+
+
+#define SPI_CR1_CPHA ((uint16_t)0x0001)
+#define SPI_CR1_CPOL ((uint16_t)0x0002)
+#define SPI_CR1_MSTR ((uint16_t)0x0004)
+
+#define SPI_CR1_BR ((uint16_t)0x0038)
+#define SPI_CR1_BR_0 ((uint16_t)0x0008)
+#define SPI_CR1_BR_1 ((uint16_t)0x0010)
+#define SPI_CR1_BR_2 ((uint16_t)0x0020)
+
+#define SPI_CR1_SPE ((uint16_t)0x0040)
+#define SPI_CR1_LSBFIRST ((uint16_t)0x0080)
+#define SPI_CR1_SSI ((uint16_t)0x0100)
+#define SPI_CR1_SSM ((uint16_t)0x0200)
+#define SPI_CR1_RXONLY ((uint16_t)0x0400)
+#define SPI_CR1_DFF ((uint16_t)0x0800)
+#define SPI_CR1_CRCNEXT ((uint16_t)0x1000)
+#define SPI_CR1_CRCEN ((uint16_t)0x2000)
+#define SPI_CR1_BIDIOE ((uint16_t)0x4000)
+#define SPI_CR1_BIDIMODE ((uint16_t)0x8000)
+
+
+#define SPI_CR2_RXDMAEN ((uint8_t)0x01)
+#define SPI_CR2_TXDMAEN ((uint8_t)0x02)
+#define SPI_CR2_SSOE ((uint8_t)0x04)
+#define SPI_CR2_ERRIE ((uint8_t)0x20)
+#define SPI_CR2_RXNEIE ((uint8_t)0x40)
+#define SPI_CR2_TXEIE ((uint8_t)0x80)
+
+
+#define SPI_SR_RXNE ((uint8_t)0x01)
+#define SPI_SR_TXE ((uint8_t)0x02)
+#define SPI_SR_CHSIDE ((uint8_t)0x04)
+#define SPI_SR_UDR ((uint8_t)0x08)
+#define SPI_SR_CRCERR ((uint8_t)0x10)
+#define SPI_SR_MODF ((uint8_t)0x20)
+#define SPI_SR_OVR ((uint8_t)0x40)
+#define SPI_SR_BSY ((uint8_t)0x80)
+
+
+#define SPI_DR_DR ((uint16_t)0xFFFF)
+
+
+#define SPI_CRCPR_CRCPOLY ((uint16_t)0xFFFF)
+
+
+#define SPI_RXCRCR_RXCRC ((uint16_t)0xFFFF)
+
+
+#define SPI_TXCRCR_TXCRC ((uint16_t)0xFFFF)
+
+
+#define SPI_I2SCFGR_CHLEN ((uint16_t)0x0001)
+
+#define SPI_I2SCFGR_DATLEN ((uint16_t)0x0006)
+#define SPI_I2SCFGR_DATLEN_0 ((uint16_t)0x0002)
+#define SPI_I2SCFGR_DATLEN_1 ((uint16_t)0x0004)
+
+#define SPI_I2SCFGR_CKPOL ((uint16_t)0x0008)
+
+#define SPI_I2SCFGR_I2SSTD ((uint16_t)0x0030)
+#define SPI_I2SCFGR_I2SSTD_0 ((uint16_t)0x0010)
+#define SPI_I2SCFGR_I2SSTD_1 ((uint16_t)0x0020)
+
+#define SPI_I2SCFGR_PCMSYNC ((uint16_t)0x0080)
+
+#define SPI_I2SCFGR_I2SCFG ((uint16_t)0x0300)
+#define SPI_I2SCFGR_I2SCFG_0 ((uint16_t)0x0100)
+#define SPI_I2SCFGR_I2SCFG_1 ((uint16_t)0x0200)
+
+#define SPI_I2SCFGR_I2SE ((uint16_t)0x0400)
+#define SPI_I2SCFGR_I2SMOD ((uint16_t)0x0800)
+
+
+#define SPI_I2SPR_I2SDIV ((uint16_t)0x00FF)
+#define SPI_I2SPR_ODD ((uint16_t)0x0100)
+#define SPI_I2SPR_MCKOE ((uint16_t)0x0200)
+
+
+
+
+
+
+
+#define SYSCFG_MEMRMP_MEM_MODE ((uint32_t)0x00000007)
+#define SYSCFG_MEMRMP_MEM_MODE_0 ((uint32_t)0x00000001)
+#define SYSCFG_MEMRMP_MEM_MODE_1 ((uint32_t)0x00000002)
+#define SYSCFG_MEMRMP_MEM_MODE_2 ((uint32_t)0x00000004)
+
+#define SYSCFG_MEMRMP_UFB_MODE ((uint32_t)0x00000100)
+
+
+#define SYSCFG_PMC_MII_RMII_SEL ((uint32_t)0x00800000)
+
+#define SYSCFG_PMC_MII_RMII SYSCFG_PMC_MII_RMII_SEL
+
+
+#define SYSCFG_EXTICR1_EXTI0 ((uint16_t)0x000F)
+#define SYSCFG_EXTICR1_EXTI1 ((uint16_t)0x00F0)
+#define SYSCFG_EXTICR1_EXTI2 ((uint16_t)0x0F00)
+#define SYSCFG_EXTICR1_EXTI3 ((uint16_t)0xF000)
+
+
+
+#define SYSCFG_EXTICR1_EXTI0_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR1_EXTI0_PB ((uint16_t)0x0001)
+#define SYSCFG_EXTICR1_EXTI0_PC ((uint16_t)0x0002)
+#define SYSCFG_EXTICR1_EXTI0_PD ((uint16_t)0x0003)
+#define SYSCFG_EXTICR1_EXTI0_PE ((uint16_t)0x0004)
+#define SYSCFG_EXTICR1_EXTI0_PF ((uint16_t)0x0005)
+#define SYSCFG_EXTICR1_EXTI0_PG ((uint16_t)0x0006)
+#define SYSCFG_EXTICR1_EXTI0_PH ((uint16_t)0x0007)
+#define SYSCFG_EXTICR1_EXTI0_PI ((uint16_t)0x0008)
+
+
+
+
+#define SYSCFG_EXTICR1_EXTI1_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR1_EXTI1_PB ((uint16_t)0x0010)
+#define SYSCFG_EXTICR1_EXTI1_PC ((uint16_t)0x0020)
+#define SYSCFG_EXTICR1_EXTI1_PD ((uint16_t)0x0030)
+#define SYSCFG_EXTICR1_EXTI1_PE ((uint16_t)0x0040)
+#define SYSCFG_EXTICR1_EXTI1_PF ((uint16_t)0x0050)
+#define SYSCFG_EXTICR1_EXTI1_PG ((uint16_t)0x0060)
+#define SYSCFG_EXTICR1_EXTI1_PH ((uint16_t)0x0070)
+#define SYSCFG_EXTICR1_EXTI1_PI ((uint16_t)0x0080)
+
+
+
+
+#define SYSCFG_EXTICR1_EXTI2_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR1_EXTI2_PB ((uint16_t)0x0100)
+#define SYSCFG_EXTICR1_EXTI2_PC ((uint16_t)0x0200)
+#define SYSCFG_EXTICR1_EXTI2_PD ((uint16_t)0x0300)
+#define SYSCFG_EXTICR1_EXTI2_PE ((uint16_t)0x0400)
+#define SYSCFG_EXTICR1_EXTI2_PF ((uint16_t)0x0500)
+#define SYSCFG_EXTICR1_EXTI2_PG ((uint16_t)0x0600)
+#define SYSCFG_EXTICR1_EXTI2_PH ((uint16_t)0x0700)
+#define SYSCFG_EXTICR1_EXTI2_PI ((uint16_t)0x0800)
+
+
+
+
+#define SYSCFG_EXTICR1_EXTI3_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR1_EXTI3_PB ((uint16_t)0x1000)
+#define SYSCFG_EXTICR1_EXTI3_PC ((uint16_t)0x2000)
+#define SYSCFG_EXTICR1_EXTI3_PD ((uint16_t)0x3000)
+#define SYSCFG_EXTICR1_EXTI3_PE ((uint16_t)0x4000)
+#define SYSCFG_EXTICR1_EXTI3_PF ((uint16_t)0x5000)
+#define SYSCFG_EXTICR1_EXTI3_PG ((uint16_t)0x6000)
+#define SYSCFG_EXTICR1_EXTI3_PH ((uint16_t)0x7000)
+#define SYSCFG_EXTICR1_EXTI3_PI ((uint16_t)0x8000)
+
+
+#define SYSCFG_EXTICR2_EXTI4 ((uint16_t)0x000F)
+#define SYSCFG_EXTICR2_EXTI5 ((uint16_t)0x00F0)
+#define SYSCFG_EXTICR2_EXTI6 ((uint16_t)0x0F00)
+#define SYSCFG_EXTICR2_EXTI7 ((uint16_t)0xF000)
+
+
+
+#define SYSCFG_EXTICR2_EXTI4_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR2_EXTI4_PB ((uint16_t)0x0001)
+#define SYSCFG_EXTICR2_EXTI4_PC ((uint16_t)0x0002)
+#define SYSCFG_EXTICR2_EXTI4_PD ((uint16_t)0x0003)
+#define SYSCFG_EXTICR2_EXTI4_PE ((uint16_t)0x0004)
+#define SYSCFG_EXTICR2_EXTI4_PF ((uint16_t)0x0005)
+#define SYSCFG_EXTICR2_EXTI4_PG ((uint16_t)0x0006)
+#define SYSCFG_EXTICR2_EXTI4_PH ((uint16_t)0x0007)
+#define SYSCFG_EXTICR2_EXTI4_PI ((uint16_t)0x0008)
+
+
+
+
+#define SYSCFG_EXTICR2_EXTI5_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR2_EXTI5_PB ((uint16_t)0x0010)
+#define SYSCFG_EXTICR2_EXTI5_PC ((uint16_t)0x0020)
+#define SYSCFG_EXTICR2_EXTI5_PD ((uint16_t)0x0030)
+#define SYSCFG_EXTICR2_EXTI5_PE ((uint16_t)0x0040)
+#define SYSCFG_EXTICR2_EXTI5_PF ((uint16_t)0x0050)
+#define SYSCFG_EXTICR2_EXTI5_PG ((uint16_t)0x0060)
+#define SYSCFG_EXTICR2_EXTI5_PH ((uint16_t)0x0070)
+#define SYSCFG_EXTICR2_EXTI5_PI ((uint16_t)0x0080)
+
+
+
+
+#define SYSCFG_EXTICR2_EXTI6_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR2_EXTI6_PB ((uint16_t)0x0100)
+#define SYSCFG_EXTICR2_EXTI6_PC ((uint16_t)0x0200)
+#define SYSCFG_EXTICR2_EXTI6_PD ((uint16_t)0x0300)
+#define SYSCFG_EXTICR2_EXTI6_PE ((uint16_t)0x0400)
+#define SYSCFG_EXTICR2_EXTI6_PF ((uint16_t)0x0500)
+#define SYSCFG_EXTICR2_EXTI6_PG ((uint16_t)0x0600)
+#define SYSCFG_EXTICR2_EXTI6_PH ((uint16_t)0x0700)
+#define SYSCFG_EXTICR2_EXTI6_PI ((uint16_t)0x0800)
+
+
+
+
+#define SYSCFG_EXTICR2_EXTI7_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR2_EXTI7_PB ((uint16_t)0x1000)
+#define SYSCFG_EXTICR2_EXTI7_PC ((uint16_t)0x2000)
+#define SYSCFG_EXTICR2_EXTI7_PD ((uint16_t)0x3000)
+#define SYSCFG_EXTICR2_EXTI7_PE ((uint16_t)0x4000)
+#define SYSCFG_EXTICR2_EXTI7_PF ((uint16_t)0x5000)
+#define SYSCFG_EXTICR2_EXTI7_PG ((uint16_t)0x6000)
+#define SYSCFG_EXTICR2_EXTI7_PH ((uint16_t)0x7000)
+#define SYSCFG_EXTICR2_EXTI7_PI ((uint16_t)0x8000)
+
+
+#define SYSCFG_EXTICR3_EXTI8 ((uint16_t)0x000F)
+#define SYSCFG_EXTICR3_EXTI9 ((uint16_t)0x00F0)
+#define SYSCFG_EXTICR3_EXTI10 ((uint16_t)0x0F00)
+#define SYSCFG_EXTICR3_EXTI11 ((uint16_t)0xF000)
+
+
+
+
+#define SYSCFG_EXTICR3_EXTI8_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR3_EXTI8_PB ((uint16_t)0x0001)
+#define SYSCFG_EXTICR3_EXTI8_PC ((uint16_t)0x0002)
+#define SYSCFG_EXTICR3_EXTI8_PD ((uint16_t)0x0003)
+#define SYSCFG_EXTICR3_EXTI8_PE ((uint16_t)0x0004)
+#define SYSCFG_EXTICR3_EXTI8_PF ((uint16_t)0x0005)
+#define SYSCFG_EXTICR3_EXTI8_PG ((uint16_t)0x0006)
+#define SYSCFG_EXTICR3_EXTI8_PH ((uint16_t)0x0007)
+#define SYSCFG_EXTICR3_EXTI8_PI ((uint16_t)0x0008)
+
+
+
+
+#define SYSCFG_EXTICR3_EXTI9_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR3_EXTI9_PB ((uint16_t)0x0010)
+#define SYSCFG_EXTICR3_EXTI9_PC ((uint16_t)0x0020)
+#define SYSCFG_EXTICR3_EXTI9_PD ((uint16_t)0x0030)
+#define SYSCFG_EXTICR3_EXTI9_PE ((uint16_t)0x0040)
+#define SYSCFG_EXTICR3_EXTI9_PF ((uint16_t)0x0050)
+#define SYSCFG_EXTICR3_EXTI9_PG ((uint16_t)0x0060)
+#define SYSCFG_EXTICR3_EXTI9_PH ((uint16_t)0x0070)
+#define SYSCFG_EXTICR3_EXTI9_PI ((uint16_t)0x0080)
+
+
+
+
+#define SYSCFG_EXTICR3_EXTI10_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR3_EXTI10_PB ((uint16_t)0x0100)
+#define SYSCFG_EXTICR3_EXTI10_PC ((uint16_t)0x0200)
+#define SYSCFG_EXTICR3_EXTI10_PD ((uint16_t)0x0300)
+#define SYSCFG_EXTICR3_EXTI10_PE ((uint16_t)0x0400)
+#define SYSCFG_EXTICR3_EXTI10_PF ((uint16_t)0x0500)
+#define SYSCFG_EXTICR3_EXTI10_PG ((uint16_t)0x0600)
+#define SYSCFG_EXTICR3_EXTI10_PH ((uint16_t)0x0700)
+#define SYSCFG_EXTICR3_EXTI10_PI ((uint16_t)0x0800)
+
+
+
+
+#define SYSCFG_EXTICR3_EXTI11_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR3_EXTI11_PB ((uint16_t)0x1000)
+#define SYSCFG_EXTICR3_EXTI11_PC ((uint16_t)0x2000)
+#define SYSCFG_EXTICR3_EXTI11_PD ((uint16_t)0x3000)
+#define SYSCFG_EXTICR3_EXTI11_PE ((uint16_t)0x4000)
+#define SYSCFG_EXTICR3_EXTI11_PF ((uint16_t)0x5000)
+#define SYSCFG_EXTICR3_EXTI11_PG ((uint16_t)0x6000)
+#define SYSCFG_EXTICR3_EXTI11_PH ((uint16_t)0x7000)
+#define SYSCFG_EXTICR3_EXTI11_PI ((uint16_t)0x8000)
+
+
+#define SYSCFG_EXTICR4_EXTI12 ((uint16_t)0x000F)
+#define SYSCFG_EXTICR4_EXTI13 ((uint16_t)0x00F0)
+#define SYSCFG_EXTICR4_EXTI14 ((uint16_t)0x0F00)
+#define SYSCFG_EXTICR4_EXTI15 ((uint16_t)0xF000)
+
+
+
+#define SYSCFG_EXTICR4_EXTI12_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR4_EXTI12_PB ((uint16_t)0x0001)
+#define SYSCFG_EXTICR4_EXTI12_PC ((uint16_t)0x0002)
+#define SYSCFG_EXTICR4_EXTI12_PD ((uint16_t)0x0003)
+#define SYSCFG_EXTICR4_EXTI12_PE ((uint16_t)0x0004)
+#define SYSCFG_EXTICR4_EXTI12_PF ((uint16_t)0x0005)
+#define SYSCFG_EXTICR4_EXTI12_PG ((uint16_t)0x0006)
+#define SYSCFG_EXTICR4_EXTI12_PH ((uint16_t)0x0007)
+
+
+
+
+#define SYSCFG_EXTICR4_EXTI13_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR4_EXTI13_PB ((uint16_t)0x0010)
+#define SYSCFG_EXTICR4_EXTI13_PC ((uint16_t)0x0020)
+#define SYSCFG_EXTICR4_EXTI13_PD ((uint16_t)0x0030)
+#define SYSCFG_EXTICR4_EXTI13_PE ((uint16_t)0x0040)
+#define SYSCFG_EXTICR4_EXTI13_PF ((uint16_t)0x0050)
+#define SYSCFG_EXTICR4_EXTI13_PG ((uint16_t)0x0060)
+#define SYSCFG_EXTICR4_EXTI13_PH ((uint16_t)0x0070)
+
+
+
+
+#define SYSCFG_EXTICR4_EXTI14_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR4_EXTI14_PB ((uint16_t)0x0100)
+#define SYSCFG_EXTICR4_EXTI14_PC ((uint16_t)0x0200)
+#define SYSCFG_EXTICR4_EXTI14_PD ((uint16_t)0x0300)
+#define SYSCFG_EXTICR4_EXTI14_PE ((uint16_t)0x0400)
+#define SYSCFG_EXTICR4_EXTI14_PF ((uint16_t)0x0500)
+#define SYSCFG_EXTICR4_EXTI14_PG ((uint16_t)0x0600)
+#define SYSCFG_EXTICR4_EXTI14_PH ((uint16_t)0x0700)
+
+
+
+
+#define SYSCFG_EXTICR4_EXTI15_PA ((uint16_t)0x0000)
+#define SYSCFG_EXTICR4_EXTI15_PB ((uint16_t)0x1000)
+#define SYSCFG_EXTICR4_EXTI15_PC ((uint16_t)0x2000)
+#define SYSCFG_EXTICR4_EXTI15_PD ((uint16_t)0x3000)
+#define SYSCFG_EXTICR4_EXTI15_PE ((uint16_t)0x4000)
+#define SYSCFG_EXTICR4_EXTI15_PF ((uint16_t)0x5000)
+#define SYSCFG_EXTICR4_EXTI15_PG ((uint16_t)0x6000)
+#define SYSCFG_EXTICR4_EXTI15_PH ((uint16_t)0x7000)
+
+
+#define SYSCFG_CMPCR_CMP_PD ((uint32_t)0x00000001)
+#define SYSCFG_CMPCR_READY ((uint32_t)0x00000100)
+
+
+
+
+
+
+
+#define TIM_CR1_CEN ((uint16_t)0x0001)
+#define TIM_CR1_UDIS ((uint16_t)0x0002)
+#define TIM_CR1_URS ((uint16_t)0x0004)
+#define TIM_CR1_OPM ((uint16_t)0x0008)
+#define TIM_CR1_DIR ((uint16_t)0x0010)
+
+#define TIM_CR1_CMS ((uint16_t)0x0060)
+#define TIM_CR1_CMS_0 ((uint16_t)0x0020)
+#define TIM_CR1_CMS_1 ((uint16_t)0x0040)
+
+#define TIM_CR1_ARPE ((uint16_t)0x0080)
+
+#define TIM_CR1_CKD ((uint16_t)0x0300)
+#define TIM_CR1_CKD_0 ((uint16_t)0x0100)
+#define TIM_CR1_CKD_1 ((uint16_t)0x0200)
+
+
+#define TIM_CR2_CCPC ((uint16_t)0x0001)
+#define TIM_CR2_CCUS ((uint16_t)0x0004)
+#define TIM_CR2_CCDS ((uint16_t)0x0008)
+
+#define TIM_CR2_MMS ((uint16_t)0x0070)
+#define TIM_CR2_MMS_0 ((uint16_t)0x0010)
+#define TIM_CR2_MMS_1 ((uint16_t)0x0020)
+#define TIM_CR2_MMS_2 ((uint16_t)0x0040)
+
+#define TIM_CR2_TI1S ((uint16_t)0x0080)
+#define TIM_CR2_OIS1 ((uint16_t)0x0100)
+#define TIM_CR2_OIS1N ((uint16_t)0x0200)
+#define TIM_CR2_OIS2 ((uint16_t)0x0400)
+#define TIM_CR2_OIS2N ((uint16_t)0x0800)
+#define TIM_CR2_OIS3 ((uint16_t)0x1000)
+#define TIM_CR2_OIS3N ((uint16_t)0x2000)
+#define TIM_CR2_OIS4 ((uint16_t)0x4000)
+
+
+#define TIM_SMCR_SMS ((uint16_t)0x0007)
+#define TIM_SMCR_SMS_0 ((uint16_t)0x0001)
+#define TIM_SMCR_SMS_1 ((uint16_t)0x0002)
+#define TIM_SMCR_SMS_2 ((uint16_t)0x0004)
+
+#define TIM_SMCR_TS ((uint16_t)0x0070)
+#define TIM_SMCR_TS_0 ((uint16_t)0x0010)
+#define TIM_SMCR_TS_1 ((uint16_t)0x0020)
+#define TIM_SMCR_TS_2 ((uint16_t)0x0040)
+
+#define TIM_SMCR_MSM ((uint16_t)0x0080)
+
+#define TIM_SMCR_ETF ((uint16_t)0x0F00)
+#define TIM_SMCR_ETF_0 ((uint16_t)0x0100)
+#define TIM_SMCR_ETF_1 ((uint16_t)0x0200)
+#define TIM_SMCR_ETF_2 ((uint16_t)0x0400)
+#define TIM_SMCR_ETF_3 ((uint16_t)0x0800)
+
+#define TIM_SMCR_ETPS ((uint16_t)0x3000)
+#define TIM_SMCR_ETPS_0 ((uint16_t)0x1000)
+#define TIM_SMCR_ETPS_1 ((uint16_t)0x2000)
+
+#define TIM_SMCR_ECE ((uint16_t)0x4000)
+#define TIM_SMCR_ETP ((uint16_t)0x8000)
+
+
+#define TIM_DIER_UIE ((uint16_t)0x0001)
+#define TIM_DIER_CC1IE ((uint16_t)0x0002)
+#define TIM_DIER_CC2IE ((uint16_t)0x0004)
+#define TIM_DIER_CC3IE ((uint16_t)0x0008)
+#define TIM_DIER_CC4IE ((uint16_t)0x0010)
+#define TIM_DIER_COMIE ((uint16_t)0x0020)
+#define TIM_DIER_TIE ((uint16_t)0x0040)
+#define TIM_DIER_BIE ((uint16_t)0x0080)
+#define TIM_DIER_UDE ((uint16_t)0x0100)
+#define TIM_DIER_CC1DE ((uint16_t)0x0200)
+#define TIM_DIER_CC2DE ((uint16_t)0x0400)
+#define TIM_DIER_CC3DE ((uint16_t)0x0800)
+#define TIM_DIER_CC4DE ((uint16_t)0x1000)
+#define TIM_DIER_COMDE ((uint16_t)0x2000)
+#define TIM_DIER_TDE ((uint16_t)0x4000)
+
+
+#define TIM_SR_UIF ((uint16_t)0x0001)
+#define TIM_SR_CC1IF ((uint16_t)0x0002)
+#define TIM_SR_CC2IF ((uint16_t)0x0004)
+#define TIM_SR_CC3IF ((uint16_t)0x0008)
+#define TIM_SR_CC4IF ((uint16_t)0x0010)
+#define TIM_SR_COMIF ((uint16_t)0x0020)
+#define TIM_SR_TIF ((uint16_t)0x0040)
+#define TIM_SR_BIF ((uint16_t)0x0080)
+#define TIM_SR_CC1OF ((uint16_t)0x0200)
+#define TIM_SR_CC2OF ((uint16_t)0x0400)
+#define TIM_SR_CC3OF ((uint16_t)0x0800)
+#define TIM_SR_CC4OF ((uint16_t)0x1000)
+
+
+#define TIM_EGR_UG ((uint8_t)0x01)
+#define TIM_EGR_CC1G ((uint8_t)0x02)
+#define TIM_EGR_CC2G ((uint8_t)0x04)
+#define TIM_EGR_CC3G ((uint8_t)0x08)
+#define TIM_EGR_CC4G ((uint8_t)0x10)
+#define TIM_EGR_COMG ((uint8_t)0x20)
+#define TIM_EGR_TG ((uint8_t)0x40)
+#define TIM_EGR_BG ((uint8_t)0x80)
+
+
+#define TIM_CCMR1_CC1S ((uint16_t)0x0003)
+#define TIM_CCMR1_CC1S_0 ((uint16_t)0x0001)
+#define TIM_CCMR1_CC1S_1 ((uint16_t)0x0002)
+
+#define TIM_CCMR1_OC1FE ((uint16_t)0x0004)
+#define TIM_CCMR1_OC1PE ((uint16_t)0x0008)
+
+#define TIM_CCMR1_OC1M ((uint16_t)0x0070)
+#define TIM_CCMR1_OC1M_0 ((uint16_t)0x0010)
+#define TIM_CCMR1_OC1M_1 ((uint16_t)0x0020)
+#define TIM_CCMR1_OC1M_2 ((uint16_t)0x0040)
+
+#define TIM_CCMR1_OC1CE ((uint16_t)0x0080)
+
+#define TIM_CCMR1_CC2S ((uint16_t)0x0300)
+#define TIM_CCMR1_CC2S_0 ((uint16_t)0x0100)
+#define TIM_CCMR1_CC2S_1 ((uint16_t)0x0200)
+
+#define TIM_CCMR1_OC2FE ((uint16_t)0x0400)
+#define TIM_CCMR1_OC2PE ((uint16_t)0x0800)
+
+#define TIM_CCMR1_OC2M ((uint16_t)0x7000)
+#define TIM_CCMR1_OC2M_0 ((uint16_t)0x1000)
+#define TIM_CCMR1_OC2M_1 ((uint16_t)0x2000)
+#define TIM_CCMR1_OC2M_2 ((uint16_t)0x4000)
+
+#define TIM_CCMR1_OC2CE ((uint16_t)0x8000)
+
+
+
+#define TIM_CCMR1_IC1PSC ((uint16_t)0x000C)
+#define TIM_CCMR1_IC1PSC_0 ((uint16_t)0x0004)
+#define TIM_CCMR1_IC1PSC_1 ((uint16_t)0x0008)
+
+#define TIM_CCMR1_IC1F ((uint16_t)0x00F0)
+#define TIM_CCMR1_IC1F_0 ((uint16_t)0x0010)
+#define TIM_CCMR1_IC1F_1 ((uint16_t)0x0020)
+#define TIM_CCMR1_IC1F_2 ((uint16_t)0x0040)
+#define TIM_CCMR1_IC1F_3 ((uint16_t)0x0080)
+
+#define TIM_CCMR1_IC2PSC ((uint16_t)0x0C00)
+#define TIM_CCMR1_IC2PSC_0 ((uint16_t)0x0400)
+#define TIM_CCMR1_IC2PSC_1 ((uint16_t)0x0800)
+
+#define TIM_CCMR1_IC2F ((uint16_t)0xF000)
+#define TIM_CCMR1_IC2F_0 ((uint16_t)0x1000)
+#define TIM_CCMR1_IC2F_1 ((uint16_t)0x2000)
+#define TIM_CCMR1_IC2F_2 ((uint16_t)0x4000)
+#define TIM_CCMR1_IC2F_3 ((uint16_t)0x8000)
+
+
+#define TIM_CCMR2_CC3S ((uint16_t)0x0003)
+#define TIM_CCMR2_CC3S_0 ((uint16_t)0x0001)
+#define TIM_CCMR2_CC3S_1 ((uint16_t)0x0002)
+
+#define TIM_CCMR2_OC3FE ((uint16_t)0x0004)
+#define TIM_CCMR2_OC3PE ((uint16_t)0x0008)
+
+#define TIM_CCMR2_OC3M ((uint16_t)0x0070)
+#define TIM_CCMR2_OC3M_0 ((uint16_t)0x0010)
+#define TIM_CCMR2_OC3M_1 ((uint16_t)0x0020)
+#define TIM_CCMR2_OC3M_2 ((uint16_t)0x0040)
+
+#define TIM_CCMR2_OC3CE ((uint16_t)0x0080)
+
+#define TIM_CCMR2_CC4S ((uint16_t)0x0300)
+#define TIM_CCMR2_CC4S_0 ((uint16_t)0x0100)
+#define TIM_CCMR2_CC4S_1 ((uint16_t)0x0200)
+
+#define TIM_CCMR2_OC4FE ((uint16_t)0x0400)
+#define TIM_CCMR2_OC4PE ((uint16_t)0x0800)
+
+#define TIM_CCMR2_OC4M ((uint16_t)0x7000)
+#define TIM_CCMR2_OC4M_0 ((uint16_t)0x1000)
+#define TIM_CCMR2_OC4M_1 ((uint16_t)0x2000)
+#define TIM_CCMR2_OC4M_2 ((uint16_t)0x4000)
+
+#define TIM_CCMR2_OC4CE ((uint16_t)0x8000)
+
+
+
+#define TIM_CCMR2_IC3PSC ((uint16_t)0x000C)
+#define TIM_CCMR2_IC3PSC_0 ((uint16_t)0x0004)
+#define TIM_CCMR2_IC3PSC_1 ((uint16_t)0x0008)
+
+#define TIM_CCMR2_IC3F ((uint16_t)0x00F0)
+#define TIM_CCMR2_IC3F_0 ((uint16_t)0x0010)
+#define TIM_CCMR2_IC3F_1 ((uint16_t)0x0020)
+#define TIM_CCMR2_IC3F_2 ((uint16_t)0x0040)
+#define TIM_CCMR2_IC3F_3 ((uint16_t)0x0080)
+
+#define TIM_CCMR2_IC4PSC ((uint16_t)0x0C00)
+#define TIM_CCMR2_IC4PSC_0 ((uint16_t)0x0400)
+#define TIM_CCMR2_IC4PSC_1 ((uint16_t)0x0800)
+
+#define TIM_CCMR2_IC4F ((uint16_t)0xF000)
+#define TIM_CCMR2_IC4F_0 ((uint16_t)0x1000)
+#define TIM_CCMR2_IC4F_1 ((uint16_t)0x2000)
+#define TIM_CCMR2_IC4F_2 ((uint16_t)0x4000)
+#define TIM_CCMR2_IC4F_3 ((uint16_t)0x8000)
+
+
+#define TIM_CCER_CC1E ((uint16_t)0x0001)
+#define TIM_CCER_CC1P ((uint16_t)0x0002)
+#define TIM_CCER_CC1NE ((uint16_t)0x0004)
+#define TIM_CCER_CC1NP ((uint16_t)0x0008)
+#define TIM_CCER_CC2E ((uint16_t)0x0010)
+#define TIM_CCER_CC2P ((uint16_t)0x0020)
+#define TIM_CCER_CC2NE ((uint16_t)0x0040)
+#define TIM_CCER_CC2NP ((uint16_t)0x0080)
+#define TIM_CCER_CC3E ((uint16_t)0x0100)
+#define TIM_CCER_CC3P ((uint16_t)0x0200)
+#define TIM_CCER_CC3NE ((uint16_t)0x0400)
+#define TIM_CCER_CC3NP ((uint16_t)0x0800)
+#define TIM_CCER_CC4E ((uint16_t)0x1000)
+#define TIM_CCER_CC4P ((uint16_t)0x2000)
+#define TIM_CCER_CC4NP ((uint16_t)0x8000)
+
+
+#define TIM_CNT_CNT ((uint16_t)0xFFFF)
+
+
+#define TIM_PSC_PSC ((uint16_t)0xFFFF)
+
+
+#define TIM_ARR_ARR ((uint16_t)0xFFFF)
+
+
+#define TIM_RCR_REP ((uint8_t)0xFF)
+
+
+#define TIM_CCR1_CCR1 ((uint16_t)0xFFFF)
+
+
+#define TIM_CCR2_CCR2 ((uint16_t)0xFFFF)
+
+
+#define TIM_CCR3_CCR3 ((uint16_t)0xFFFF)
+
+
+#define TIM_CCR4_CCR4 ((uint16_t)0xFFFF)
+
+
+#define TIM_BDTR_DTG ((uint16_t)0x00FF)
+#define TIM_BDTR_DTG_0 ((uint16_t)0x0001)
+#define TIM_BDTR_DTG_1 ((uint16_t)0x0002)
+#define TIM_BDTR_DTG_2 ((uint16_t)0x0004)
+#define TIM_BDTR_DTG_3 ((uint16_t)0x0008)
+#define TIM_BDTR_DTG_4 ((uint16_t)0x0010)
+#define TIM_BDTR_DTG_5 ((uint16_t)0x0020)
+#define TIM_BDTR_DTG_6 ((uint16_t)0x0040)
+#define TIM_BDTR_DTG_7 ((uint16_t)0x0080)
+
+#define TIM_BDTR_LOCK ((uint16_t)0x0300)
+#define TIM_BDTR_LOCK_0 ((uint16_t)0x0100)
+#define TIM_BDTR_LOCK_1 ((uint16_t)0x0200)
+
+#define TIM_BDTR_OSSI ((uint16_t)0x0400)
+#define TIM_BDTR_OSSR ((uint16_t)0x0800)
+#define TIM_BDTR_BKE ((uint16_t)0x1000)
+#define TIM_BDTR_BKP ((uint16_t)0x2000)
+#define TIM_BDTR_AOE ((uint16_t)0x4000)
+#define TIM_BDTR_MOE ((uint16_t)0x8000)
+
+
+#define TIM_DCR_DBA ((uint16_t)0x001F)
+#define TIM_DCR_DBA_0 ((uint16_t)0x0001)
+#define TIM_DCR_DBA_1 ((uint16_t)0x0002)
+#define TIM_DCR_DBA_2 ((uint16_t)0x0004)
+#define TIM_DCR_DBA_3 ((uint16_t)0x0008)
+#define TIM_DCR_DBA_4 ((uint16_t)0x0010)
+
+#define TIM_DCR_DBL ((uint16_t)0x1F00)
+#define TIM_DCR_DBL_0 ((uint16_t)0x0100)
+#define TIM_DCR_DBL_1 ((uint16_t)0x0200)
+#define TIM_DCR_DBL_2 ((uint16_t)0x0400)
+#define TIM_DCR_DBL_3 ((uint16_t)0x0800)
+#define TIM_DCR_DBL_4 ((uint16_t)0x1000)
+
+
+#define TIM_DMAR_DMAB ((uint16_t)0xFFFF)
+
+
+#define TIM_OR_TI4_RMP ((uint16_t)0x00C0)
+#define TIM_OR_TI4_RMP_0 ((uint16_t)0x0040)
+#define TIM_OR_TI4_RMP_1 ((uint16_t)0x0080)
+#define TIM_OR_ITR1_RMP ((uint16_t)0x0C00)
+#define TIM_OR_ITR1_RMP_0 ((uint16_t)0x0400)
+#define TIM_OR_ITR1_RMP_1 ((uint16_t)0x0800)
+# 6513 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define USART_SR_PE ((uint16_t)0x0001)
+#define USART_SR_FE ((uint16_t)0x0002)
+#define USART_SR_NE ((uint16_t)0x0004)
+#define USART_SR_ORE ((uint16_t)0x0008)
+#define USART_SR_IDLE ((uint16_t)0x0010)
+#define USART_SR_RXNE ((uint16_t)0x0020)
+#define USART_SR_TC ((uint16_t)0x0040)
+#define USART_SR_TXE ((uint16_t)0x0080)
+#define USART_SR_LBD ((uint16_t)0x0100)
+#define USART_SR_CTS ((uint16_t)0x0200)
+
+
+#define USART_DR_DR ((uint16_t)0x01FF)
+
+
+#define USART_BRR_DIV_Fraction ((uint16_t)0x000F)
+#define USART_BRR_DIV_Mantissa ((uint16_t)0xFFF0)
+
+
+#define USART_CR1_SBK ((uint16_t)0x0001)
+#define USART_CR1_RWU ((uint16_t)0x0002)
+#define USART_CR1_RE ((uint16_t)0x0004)
+#define USART_CR1_TE ((uint16_t)0x0008)
+#define USART_CR1_IDLEIE ((uint16_t)0x0010)
+#define USART_CR1_RXNEIE ((uint16_t)0x0020)
+#define USART_CR1_TCIE ((uint16_t)0x0040)
+#define USART_CR1_TXEIE ((uint16_t)0x0080)
+#define USART_CR1_PEIE ((uint16_t)0x0100)
+#define USART_CR1_PS ((uint16_t)0x0200)
+#define USART_CR1_PCE ((uint16_t)0x0400)
+#define USART_CR1_WAKE ((uint16_t)0x0800)
+#define USART_CR1_M ((uint16_t)0x1000)
+#define USART_CR1_UE ((uint16_t)0x2000)
+#define USART_CR1_OVER8 ((uint16_t)0x8000)
+
+
+#define USART_CR2_ADD ((uint16_t)0x000F)
+#define USART_CR2_LBDL ((uint16_t)0x0020)
+#define USART_CR2_LBDIE ((uint16_t)0x0040)
+#define USART_CR2_LBCL ((uint16_t)0x0100)
+#define USART_CR2_CPHA ((uint16_t)0x0200)
+#define USART_CR2_CPOL ((uint16_t)0x0400)
+#define USART_CR2_CLKEN ((uint16_t)0x0800)
+
+#define USART_CR2_STOP ((uint16_t)0x3000)
+#define USART_CR2_STOP_0 ((uint16_t)0x1000)
+#define USART_CR2_STOP_1 ((uint16_t)0x2000)
+
+#define USART_CR2_LINEN ((uint16_t)0x4000)
+
+
+#define USART_CR3_EIE ((uint16_t)0x0001)
+#define USART_CR3_IREN ((uint16_t)0x0002)
+#define USART_CR3_IRLP ((uint16_t)0x0004)
+#define USART_CR3_HDSEL ((uint16_t)0x0008)
+#define USART_CR3_NACK ((uint16_t)0x0010)
+#define USART_CR3_SCEN ((uint16_t)0x0020)
+#define USART_CR3_DMAR ((uint16_t)0x0040)
+#define USART_CR3_DMAT ((uint16_t)0x0080)
+#define USART_CR3_RTSE ((uint16_t)0x0100)
+#define USART_CR3_CTSE ((uint16_t)0x0200)
+#define USART_CR3_CTSIE ((uint16_t)0x0400)
+#define USART_CR3_ONEBIT ((uint16_t)0x0800)
+
+
+#define USART_GTPR_PSC ((uint16_t)0x00FF)
+#define USART_GTPR_PSC_0 ((uint16_t)0x0001)
+#define USART_GTPR_PSC_1 ((uint16_t)0x0002)
+#define USART_GTPR_PSC_2 ((uint16_t)0x0004)
+#define USART_GTPR_PSC_3 ((uint16_t)0x0008)
+#define USART_GTPR_PSC_4 ((uint16_t)0x0010)
+#define USART_GTPR_PSC_5 ((uint16_t)0x0020)
+#define USART_GTPR_PSC_6 ((uint16_t)0x0040)
+#define USART_GTPR_PSC_7 ((uint16_t)0x0080)
+
+#define USART_GTPR_GT ((uint16_t)0xFF00)
+
+
+
+
+
+
+
+#define WWDG_CR_T ((uint8_t)0x7F)
+#define WWDG_CR_T0 ((uint8_t)0x01)
+#define WWDG_CR_T1 ((uint8_t)0x02)
+#define WWDG_CR_T2 ((uint8_t)0x04)
+#define WWDG_CR_T3 ((uint8_t)0x08)
+#define WWDG_CR_T4 ((uint8_t)0x10)
+#define WWDG_CR_T5 ((uint8_t)0x20)
+#define WWDG_CR_T6 ((uint8_t)0x40)
+
+#define WWDG_CR_WDGA ((uint8_t)0x80)
+
+
+#define WWDG_CFR_W ((uint16_t)0x007F)
+#define WWDG_CFR_W0 ((uint16_t)0x0001)
+#define WWDG_CFR_W1 ((uint16_t)0x0002)
+#define WWDG_CFR_W2 ((uint16_t)0x0004)
+#define WWDG_CFR_W3 ((uint16_t)0x0008)
+#define WWDG_CFR_W4 ((uint16_t)0x0010)
+#define WWDG_CFR_W5 ((uint16_t)0x0020)
+#define WWDG_CFR_W6 ((uint16_t)0x0040)
+
+#define WWDG_CFR_WDGTB ((uint16_t)0x0180)
+#define WWDG_CFR_WDGTB0 ((uint16_t)0x0080)
+#define WWDG_CFR_WDGTB1 ((uint16_t)0x0100)
+
+#define WWDG_CFR_EWI ((uint16_t)0x0200)
+
+
+#define WWDG_SR_EWIF ((uint8_t)0x01)
+# 6633 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define DBGMCU_IDCODE_DEV_ID ((uint32_t)0x00000FFF)
+#define DBGMCU_IDCODE_REV_ID ((uint32_t)0xFFFF0000)
+
+
+#define DBGMCU_CR_DBG_SLEEP ((uint32_t)0x00000001)
+#define DBGMCU_CR_DBG_STOP ((uint32_t)0x00000002)
+#define DBGMCU_CR_DBG_STANDBY ((uint32_t)0x00000004)
+#define DBGMCU_CR_TRACE_IOEN ((uint32_t)0x00000020)
+
+#define DBGMCU_CR_TRACE_MODE ((uint32_t)0x000000C0)
+#define DBGMCU_CR_TRACE_MODE_0 ((uint32_t)0x00000040)
+#define DBGMCU_CR_TRACE_MODE_1 ((uint32_t)0x00000080)
+
+
+#define DBGMCU_APB1_FZ_DBG_TIM2_STOP ((uint32_t)0x00000001)
+#define DBGMCU_APB1_FZ_DBG_TIM3_STOP ((uint32_t)0x00000002)
+#define DBGMCU_APB1_FZ_DBG_TIM4_STOP ((uint32_t)0x00000004)
+#define DBGMCU_APB1_FZ_DBG_TIM5_STOP ((uint32_t)0x00000008)
+#define DBGMCU_APB1_FZ_DBG_TIM6_STOP ((uint32_t)0x00000010)
+#define DBGMCU_APB1_FZ_DBG_TIM7_STOP ((uint32_t)0x00000020)
+#define DBGMCU_APB1_FZ_DBG_TIM12_STOP ((uint32_t)0x00000040)
+#define DBGMCU_APB1_FZ_DBG_TIM13_STOP ((uint32_t)0x00000080)
+#define DBGMCU_APB1_FZ_DBG_TIM14_STOP ((uint32_t)0x00000100)
+#define DBGMCU_APB1_FZ_DBG_RTC_STOP ((uint32_t)0x00000400)
+#define DBGMCU_APB1_FZ_DBG_WWDG_STOP ((uint32_t)0x00000800)
+#define DBGMCU_APB1_FZ_DBG_IWDG_STOP ((uint32_t)0x00001000)
+#define DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT ((uint32_t)0x00200000)
+#define DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT ((uint32_t)0x00400000)
+#define DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT ((uint32_t)0x00800000)
+#define DBGMCU_APB1_FZ_DBG_CAN1_STOP ((uint32_t)0x02000000)
+#define DBGMCU_APB1_FZ_DBG_CAN2_STOP ((uint32_t)0x04000000)
+
+#define DBGMCU_APB1_FZ_DBG_IWDEG_STOP DBGMCU_APB1_FZ_DBG_IWDG_STOP
+
+
+#define DBGMCU_APB1_FZ_DBG_TIM1_STOP ((uint32_t)0x00000001)
+#define DBGMCU_APB1_FZ_DBG_TIM8_STOP ((uint32_t)0x00000002)
+#define DBGMCU_APB1_FZ_DBG_TIM9_STOP ((uint32_t)0x00010000)
+#define DBGMCU_APB1_FZ_DBG_TIM10_STOP ((uint32_t)0x00020000)
+#define DBGMCU_APB1_FZ_DBG_TIM11_STOP ((uint32_t)0x00040000)
+
+
+
+
+
+
+
+#define ETH_MACCR_WD ((uint32_t)0x00800000)
+#define ETH_MACCR_JD ((uint32_t)0x00400000)
+#define ETH_MACCR_IFG ((uint32_t)0x000E0000)
+#define ETH_MACCR_IFG_96Bit ((uint32_t)0x00000000)
+#define ETH_MACCR_IFG_88Bit ((uint32_t)0x00020000)
+#define ETH_MACCR_IFG_80Bit ((uint32_t)0x00040000)
+#define ETH_MACCR_IFG_72Bit ((uint32_t)0x00060000)
+#define ETH_MACCR_IFG_64Bit ((uint32_t)0x00080000)
+#define ETH_MACCR_IFG_56Bit ((uint32_t)0x000A0000)
+#define ETH_MACCR_IFG_48Bit ((uint32_t)0x000C0000)
+#define ETH_MACCR_IFG_40Bit ((uint32_t)0x000E0000)
+#define ETH_MACCR_CSD ((uint32_t)0x00010000)
+#define ETH_MACCR_FES ((uint32_t)0x00004000)
+#define ETH_MACCR_ROD ((uint32_t)0x00002000)
+#define ETH_MACCR_LM ((uint32_t)0x00001000)
+#define ETH_MACCR_DM ((uint32_t)0x00000800)
+#define ETH_MACCR_IPCO ((uint32_t)0x00000400)
+#define ETH_MACCR_RD ((uint32_t)0x00000200)
+#define ETH_MACCR_APCS ((uint32_t)0x00000080)
+#define ETH_MACCR_BL ((uint32_t)0x00000060)
+
+#define ETH_MACCR_BL_10 ((uint32_t)0x00000000)
+#define ETH_MACCR_BL_8 ((uint32_t)0x00000020)
+#define ETH_MACCR_BL_4 ((uint32_t)0x00000040)
+#define ETH_MACCR_BL_1 ((uint32_t)0x00000060)
+#define ETH_MACCR_DC ((uint32_t)0x00000010)
+#define ETH_MACCR_TE ((uint32_t)0x00000008)
+#define ETH_MACCR_RE ((uint32_t)0x00000004)
+
+
+#define ETH_MACFFR_RA ((uint32_t)0x80000000)
+#define ETH_MACFFR_HPF ((uint32_t)0x00000400)
+#define ETH_MACFFR_SAF ((uint32_t)0x00000200)
+#define ETH_MACFFR_SAIF ((uint32_t)0x00000100)
+#define ETH_MACFFR_PCF ((uint32_t)0x000000C0)
+#define ETH_MACFFR_PCF_BlockAll ((uint32_t)0x00000040)
+#define ETH_MACFFR_PCF_ForwardAll ((uint32_t)0x00000080)
+#define ETH_MACFFR_PCF_ForwardPassedAddrFilter ((uint32_t)0x000000C0)
+#define ETH_MACFFR_BFD ((uint32_t)0x00000020)
+#define ETH_MACFFR_PAM ((uint32_t)0x00000010)
+#define ETH_MACFFR_DAIF ((uint32_t)0x00000008)
+#define ETH_MACFFR_HM ((uint32_t)0x00000004)
+#define ETH_MACFFR_HU ((uint32_t)0x00000002)
+#define ETH_MACFFR_PM ((uint32_t)0x00000001)
+
+
+#define ETH_MACHTHR_HTH ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MACHTLR_HTL ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MACMIIAR_PA ((uint32_t)0x0000F800)
+#define ETH_MACMIIAR_MR ((uint32_t)0x000007C0)
+#define ETH_MACMIIAR_CR ((uint32_t)0x0000001C)
+#define ETH_MACMIIAR_CR_Div42 ((uint32_t)0x00000000)
+#define ETH_MACMIIAR_CR_Div62 ((uint32_t)0x00000004)
+#define ETH_MACMIIAR_CR_Div16 ((uint32_t)0x00000008)
+#define ETH_MACMIIAR_CR_Div26 ((uint32_t)0x0000000C)
+#define ETH_MACMIIAR_CR_Div102 ((uint32_t)0x00000010)
+#define ETH_MACMIIAR_MW ((uint32_t)0x00000002)
+#define ETH_MACMIIAR_MB ((uint32_t)0x00000001)
+
+
+#define ETH_MACMIIDR_MD ((uint32_t)0x0000FFFF)
+
+
+#define ETH_MACFCR_PT ((uint32_t)0xFFFF0000)
+#define ETH_MACFCR_ZQPD ((uint32_t)0x00000080)
+#define ETH_MACFCR_PLT ((uint32_t)0x00000030)
+#define ETH_MACFCR_PLT_Minus4 ((uint32_t)0x00000000)
+#define ETH_MACFCR_PLT_Minus28 ((uint32_t)0x00000010)
+#define ETH_MACFCR_PLT_Minus144 ((uint32_t)0x00000020)
+#define ETH_MACFCR_PLT_Minus256 ((uint32_t)0x00000030)
+#define ETH_MACFCR_UPFD ((uint32_t)0x00000008)
+#define ETH_MACFCR_RFCE ((uint32_t)0x00000004)
+#define ETH_MACFCR_TFCE ((uint32_t)0x00000002)
+#define ETH_MACFCR_FCBBPA ((uint32_t)0x00000001)
+
+
+#define ETH_MACVLANTR_VLANTC ((uint32_t)0x00010000)
+#define ETH_MACVLANTR_VLANTI ((uint32_t)0x0000FFFF)
+
+
+#define ETH_MACRWUFFR_D ((uint32_t)0xFFFFFFFF)
+# 6778 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+#define ETH_MACPMTCSR_WFFRPR ((uint32_t)0x80000000)
+#define ETH_MACPMTCSR_GU ((uint32_t)0x00000200)
+#define ETH_MACPMTCSR_WFR ((uint32_t)0x00000040)
+#define ETH_MACPMTCSR_MPR ((uint32_t)0x00000020)
+#define ETH_MACPMTCSR_WFE ((uint32_t)0x00000004)
+#define ETH_MACPMTCSR_MPE ((uint32_t)0x00000002)
+#define ETH_MACPMTCSR_PD ((uint32_t)0x00000001)
+
+
+#define ETH_MACSR_TSTS ((uint32_t)0x00000200)
+#define ETH_MACSR_MMCTS ((uint32_t)0x00000040)
+#define ETH_MACSR_MMMCRS ((uint32_t)0x00000020)
+#define ETH_MACSR_MMCS ((uint32_t)0x00000010)
+#define ETH_MACSR_PMTS ((uint32_t)0x00000008)
+
+
+#define ETH_MACIMR_TSTIM ((uint32_t)0x00000200)
+#define ETH_MACIMR_PMTIM ((uint32_t)0x00000008)
+
+
+#define ETH_MACA0HR_MACA0H ((uint32_t)0x0000FFFF)
+
+
+#define ETH_MACA0LR_MACA0L ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MACA1HR_AE ((uint32_t)0x80000000)
+#define ETH_MACA1HR_SA ((uint32_t)0x40000000)
+#define ETH_MACA1HR_MBC ((uint32_t)0x3F000000)
+#define ETH_MACA1HR_MBC_HBits15_8 ((uint32_t)0x20000000)
+#define ETH_MACA1HR_MBC_HBits7_0 ((uint32_t)0x10000000)
+#define ETH_MACA1HR_MBC_LBits31_24 ((uint32_t)0x08000000)
+#define ETH_MACA1HR_MBC_LBits23_16 ((uint32_t)0x04000000)
+#define ETH_MACA1HR_MBC_LBits15_8 ((uint32_t)0x02000000)
+#define ETH_MACA1HR_MBC_LBits7_0 ((uint32_t)0x01000000)
+#define ETH_MACA1HR_MACA1H ((uint32_t)0x0000FFFF)
+
+
+#define ETH_MACA1LR_MACA1L ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MACA2HR_AE ((uint32_t)0x80000000)
+#define ETH_MACA2HR_SA ((uint32_t)0x40000000)
+#define ETH_MACA2HR_MBC ((uint32_t)0x3F000000)
+#define ETH_MACA2HR_MBC_HBits15_8 ((uint32_t)0x20000000)
+#define ETH_MACA2HR_MBC_HBits7_0 ((uint32_t)0x10000000)
+#define ETH_MACA2HR_MBC_LBits31_24 ((uint32_t)0x08000000)
+#define ETH_MACA2HR_MBC_LBits23_16 ((uint32_t)0x04000000)
+#define ETH_MACA2HR_MBC_LBits15_8 ((uint32_t)0x02000000)
+#define ETH_MACA2HR_MBC_LBits7_0 ((uint32_t)0x01000000)
+#define ETH_MACA2HR_MACA2H ((uint32_t)0x0000FFFF)
+
+
+#define ETH_MACA2LR_MACA2L ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MACA3HR_AE ((uint32_t)0x80000000)
+#define ETH_MACA3HR_SA ((uint32_t)0x40000000)
+#define ETH_MACA3HR_MBC ((uint32_t)0x3F000000)
+#define ETH_MACA3HR_MBC_HBits15_8 ((uint32_t)0x20000000)
+#define ETH_MACA3HR_MBC_HBits7_0 ((uint32_t)0x10000000)
+#define ETH_MACA3HR_MBC_LBits31_24 ((uint32_t)0x08000000)
+#define ETH_MACA3HR_MBC_LBits23_16 ((uint32_t)0x04000000)
+#define ETH_MACA3HR_MBC_LBits15_8 ((uint32_t)0x02000000)
+#define ETH_MACA3HR_MBC_LBits7_0 ((uint32_t)0x01000000)
+#define ETH_MACA3HR_MACA3H ((uint32_t)0x0000FFFF)
+
+
+#define ETH_MACA3LR_MACA3L ((uint32_t)0xFFFFFFFF)
+
+
+
+
+
+
+#define ETH_MMCCR_MCFHP ((uint32_t)0x00000020)
+#define ETH_MMCCR_MCP ((uint32_t)0x00000010)
+#define ETH_MMCCR_MCF ((uint32_t)0x00000008)
+#define ETH_MMCCR_ROR ((uint32_t)0x00000004)
+#define ETH_MMCCR_CSR ((uint32_t)0x00000002)
+#define ETH_MMCCR_CR ((uint32_t)0x00000001)
+
+
+#define ETH_MMCRIR_RGUFS ((uint32_t)0x00020000)
+#define ETH_MMCRIR_RFAES ((uint32_t)0x00000040)
+#define ETH_MMCRIR_RFCES ((uint32_t)0x00000020)
+
+
+#define ETH_MMCTIR_TGFS ((uint32_t)0x00200000)
+#define ETH_MMCTIR_TGFMSCS ((uint32_t)0x00008000)
+#define ETH_MMCTIR_TGFSCS ((uint32_t)0x00004000)
+
+
+#define ETH_MMCRIMR_RGUFM ((uint32_t)0x00020000)
+#define ETH_MMCRIMR_RFAEM ((uint32_t)0x00000040)
+#define ETH_MMCRIMR_RFCEM ((uint32_t)0x00000020)
+
+
+#define ETH_MMCTIMR_TGFM ((uint32_t)0x00200000)
+#define ETH_MMCTIMR_TGFMSCM ((uint32_t)0x00008000)
+#define ETH_MMCTIMR_TGFSCM ((uint32_t)0x00004000)
+
+
+#define ETH_MMCTGFSCCR_TGFSCC ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MMCTGFMSCCR_TGFMSCC ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MMCTGFCR_TGFC ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MMCRFCECR_RFCEC ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MMCRFAECR_RFAEC ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_MMCRGUFCR_RGUFC ((uint32_t)0xFFFFFFFF)
+
+
+
+
+
+
+#define ETH_PTPTSCR_TSCNT ((uint32_t)0x00030000)
+#define ETH_PTPTSSR_TSSMRME ((uint32_t)0x00008000)
+#define ETH_PTPTSSR_TSSEME ((uint32_t)0x00004000)
+#define ETH_PTPTSSR_TSSIPV4FE ((uint32_t)0x00002000)
+#define ETH_PTPTSSR_TSSIPV6FE ((uint32_t)0x00001000)
+#define ETH_PTPTSSR_TSSPTPOEFE ((uint32_t)0x00000800)
+#define ETH_PTPTSSR_TSPTPPSV2E ((uint32_t)0x00000400)
+#define ETH_PTPTSSR_TSSSR ((uint32_t)0x00000200)
+#define ETH_PTPTSSR_TSSARFE ((uint32_t)0x00000100)
+
+#define ETH_PTPTSCR_TSARU ((uint32_t)0x00000020)
+#define ETH_PTPTSCR_TSITE ((uint32_t)0x00000010)
+#define ETH_PTPTSCR_TSSTU ((uint32_t)0x00000008)
+#define ETH_PTPTSCR_TSSTI ((uint32_t)0x00000004)
+#define ETH_PTPTSCR_TSFCU ((uint32_t)0x00000002)
+#define ETH_PTPTSCR_TSE ((uint32_t)0x00000001)
+
+
+#define ETH_PTPSSIR_STSSI ((uint32_t)0x000000FF)
+
+
+#define ETH_PTPTSHR_STS ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_PTPTSLR_STPNS ((uint32_t)0x80000000)
+#define ETH_PTPTSLR_STSS ((uint32_t)0x7FFFFFFF)
+
+
+#define ETH_PTPTSHUR_TSUS ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_PTPTSLUR_TSUPNS ((uint32_t)0x80000000)
+#define ETH_PTPTSLUR_TSUSS ((uint32_t)0x7FFFFFFF)
+
+
+#define ETH_PTPTSAR_TSA ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_PTPTTHR_TTSH ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_PTPTTLR_TTSL ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_PTPTSSR_TSTTR ((uint32_t)0x00000020)
+#define ETH_PTPTSSR_TSSO ((uint32_t)0x00000010)
+
+
+
+
+
+
+#define ETH_DMABMR_AAB ((uint32_t)0x02000000)
+#define ETH_DMABMR_FPM ((uint32_t)0x01000000)
+#define ETH_DMABMR_USP ((uint32_t)0x00800000)
+#define ETH_DMABMR_RDP ((uint32_t)0x007E0000)
+#define ETH_DMABMR_RDP_1Beat ((uint32_t)0x00020000)
+#define ETH_DMABMR_RDP_2Beat ((uint32_t)0x00040000)
+#define ETH_DMABMR_RDP_4Beat ((uint32_t)0x00080000)
+#define ETH_DMABMR_RDP_8Beat ((uint32_t)0x00100000)
+#define ETH_DMABMR_RDP_16Beat ((uint32_t)0x00200000)
+#define ETH_DMABMR_RDP_32Beat ((uint32_t)0x00400000)
+#define ETH_DMABMR_RDP_4xPBL_4Beat ((uint32_t)0x01020000)
+#define ETH_DMABMR_RDP_4xPBL_8Beat ((uint32_t)0x01040000)
+#define ETH_DMABMR_RDP_4xPBL_16Beat ((uint32_t)0x01080000)
+#define ETH_DMABMR_RDP_4xPBL_32Beat ((uint32_t)0x01100000)
+#define ETH_DMABMR_RDP_4xPBL_64Beat ((uint32_t)0x01200000)
+#define ETH_DMABMR_RDP_4xPBL_128Beat ((uint32_t)0x01400000)
+#define ETH_DMABMR_FB ((uint32_t)0x00010000)
+#define ETH_DMABMR_RTPR ((uint32_t)0x0000C000)
+#define ETH_DMABMR_RTPR_1_1 ((uint32_t)0x00000000)
+#define ETH_DMABMR_RTPR_2_1 ((uint32_t)0x00004000)
+#define ETH_DMABMR_RTPR_3_1 ((uint32_t)0x00008000)
+#define ETH_DMABMR_RTPR_4_1 ((uint32_t)0x0000C000)
+#define ETH_DMABMR_PBL ((uint32_t)0x00003F00)
+#define ETH_DMABMR_PBL_1Beat ((uint32_t)0x00000100)
+#define ETH_DMABMR_PBL_2Beat ((uint32_t)0x00000200)
+#define ETH_DMABMR_PBL_4Beat ((uint32_t)0x00000400)
+#define ETH_DMABMR_PBL_8Beat ((uint32_t)0x00000800)
+#define ETH_DMABMR_PBL_16Beat ((uint32_t)0x00001000)
+#define ETH_DMABMR_PBL_32Beat ((uint32_t)0x00002000)
+#define ETH_DMABMR_PBL_4xPBL_4Beat ((uint32_t)0x01000100)
+#define ETH_DMABMR_PBL_4xPBL_8Beat ((uint32_t)0x01000200)
+#define ETH_DMABMR_PBL_4xPBL_16Beat ((uint32_t)0x01000400)
+#define ETH_DMABMR_PBL_4xPBL_32Beat ((uint32_t)0x01000800)
+#define ETH_DMABMR_PBL_4xPBL_64Beat ((uint32_t)0x01001000)
+#define ETH_DMABMR_PBL_4xPBL_128Beat ((uint32_t)0x01002000)
+#define ETH_DMABMR_EDE ((uint32_t)0x00000080)
+#define ETH_DMABMR_DSL ((uint32_t)0x0000007C)
+#define ETH_DMABMR_DA ((uint32_t)0x00000002)
+#define ETH_DMABMR_SR ((uint32_t)0x00000001)
+
+
+#define ETH_DMATPDR_TPD ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMARPDR_RPD ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMARDLAR_SRL ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMATDLAR_STL ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMASR_TSTS ((uint32_t)0x20000000)
+#define ETH_DMASR_PMTS ((uint32_t)0x10000000)
+#define ETH_DMASR_MMCS ((uint32_t)0x08000000)
+#define ETH_DMASR_EBS ((uint32_t)0x03800000)
+
+#define ETH_DMASR_EBS_DescAccess ((uint32_t)0x02000000)
+#define ETH_DMASR_EBS_ReadTransf ((uint32_t)0x01000000)
+#define ETH_DMASR_EBS_DataTransfTx ((uint32_t)0x00800000)
+#define ETH_DMASR_TPS ((uint32_t)0x00700000)
+#define ETH_DMASR_TPS_Stopped ((uint32_t)0x00000000)
+#define ETH_DMASR_TPS_Fetching ((uint32_t)0x00100000)
+#define ETH_DMASR_TPS_Waiting ((uint32_t)0x00200000)
+#define ETH_DMASR_TPS_Reading ((uint32_t)0x00300000)
+#define ETH_DMASR_TPS_Suspended ((uint32_t)0x00600000)
+#define ETH_DMASR_TPS_Closing ((uint32_t)0x00700000)
+#define ETH_DMASR_RPS ((uint32_t)0x000E0000)
+#define ETH_DMASR_RPS_Stopped ((uint32_t)0x00000000)
+#define ETH_DMASR_RPS_Fetching ((uint32_t)0x00020000)
+#define ETH_DMASR_RPS_Waiting ((uint32_t)0x00060000)
+#define ETH_DMASR_RPS_Suspended ((uint32_t)0x00080000)
+#define ETH_DMASR_RPS_Closing ((uint32_t)0x000A0000)
+#define ETH_DMASR_RPS_Queuing ((uint32_t)0x000E0000)
+#define ETH_DMASR_NIS ((uint32_t)0x00010000)
+#define ETH_DMASR_AIS ((uint32_t)0x00008000)
+#define ETH_DMASR_ERS ((uint32_t)0x00004000)
+#define ETH_DMASR_FBES ((uint32_t)0x00002000)
+#define ETH_DMASR_ETS ((uint32_t)0x00000400)
+#define ETH_DMASR_RWTS ((uint32_t)0x00000200)
+#define ETH_DMASR_RPSS ((uint32_t)0x00000100)
+#define ETH_DMASR_RBUS ((uint32_t)0x00000080)
+#define ETH_DMASR_RS ((uint32_t)0x00000040)
+#define ETH_DMASR_TUS ((uint32_t)0x00000020)
+#define ETH_DMASR_ROS ((uint32_t)0x00000010)
+#define ETH_DMASR_TJTS ((uint32_t)0x00000008)
+#define ETH_DMASR_TBUS ((uint32_t)0x00000004)
+#define ETH_DMASR_TPSS ((uint32_t)0x00000002)
+#define ETH_DMASR_TS ((uint32_t)0x00000001)
+
+
+#define ETH_DMAOMR_DTCEFD ((uint32_t)0x04000000)
+#define ETH_DMAOMR_RSF ((uint32_t)0x02000000)
+#define ETH_DMAOMR_DFRF ((uint32_t)0x01000000)
+#define ETH_DMAOMR_TSF ((uint32_t)0x00200000)
+#define ETH_DMAOMR_FTF ((uint32_t)0x00100000)
+#define ETH_DMAOMR_TTC ((uint32_t)0x0001C000)
+#define ETH_DMAOMR_TTC_64Bytes ((uint32_t)0x00000000)
+#define ETH_DMAOMR_TTC_128Bytes ((uint32_t)0x00004000)
+#define ETH_DMAOMR_TTC_192Bytes ((uint32_t)0x00008000)
+#define ETH_DMAOMR_TTC_256Bytes ((uint32_t)0x0000C000)
+#define ETH_DMAOMR_TTC_40Bytes ((uint32_t)0x00010000)
+#define ETH_DMAOMR_TTC_32Bytes ((uint32_t)0x00014000)
+#define ETH_DMAOMR_TTC_24Bytes ((uint32_t)0x00018000)
+#define ETH_DMAOMR_TTC_16Bytes ((uint32_t)0x0001C000)
+#define ETH_DMAOMR_ST ((uint32_t)0x00002000)
+#define ETH_DMAOMR_FEF ((uint32_t)0x00000080)
+#define ETH_DMAOMR_FUGF ((uint32_t)0x00000040)
+#define ETH_DMAOMR_RTC ((uint32_t)0x00000018)
+#define ETH_DMAOMR_RTC_64Bytes ((uint32_t)0x00000000)
+#define ETH_DMAOMR_RTC_32Bytes ((uint32_t)0x00000008)
+#define ETH_DMAOMR_RTC_96Bytes ((uint32_t)0x00000010)
+#define ETH_DMAOMR_RTC_128Bytes ((uint32_t)0x00000018)
+#define ETH_DMAOMR_OSF ((uint32_t)0x00000004)
+#define ETH_DMAOMR_SR ((uint32_t)0x00000002)
+
+
+#define ETH_DMAIER_NISE ((uint32_t)0x00010000)
+#define ETH_DMAIER_AISE ((uint32_t)0x00008000)
+#define ETH_DMAIER_ERIE ((uint32_t)0x00004000)
+#define ETH_DMAIER_FBEIE ((uint32_t)0x00002000)
+#define ETH_DMAIER_ETIE ((uint32_t)0x00000400)
+#define ETH_DMAIER_RWTIE ((uint32_t)0x00000200)
+#define ETH_DMAIER_RPSIE ((uint32_t)0x00000100)
+#define ETH_DMAIER_RBUIE ((uint32_t)0x00000080)
+#define ETH_DMAIER_RIE ((uint32_t)0x00000040)
+#define ETH_DMAIER_TUIE ((uint32_t)0x00000020)
+#define ETH_DMAIER_ROIE ((uint32_t)0x00000010)
+#define ETH_DMAIER_TJTIE ((uint32_t)0x00000008)
+#define ETH_DMAIER_TBUIE ((uint32_t)0x00000004)
+#define ETH_DMAIER_TPSIE ((uint32_t)0x00000002)
+#define ETH_DMAIER_TIE ((uint32_t)0x00000001)
+
+
+#define ETH_DMAMFBOCR_OFOC ((uint32_t)0x10000000)
+#define ETH_DMAMFBOCR_MFA ((uint32_t)0x0FFE0000)
+#define ETH_DMAMFBOCR_OMFC ((uint32_t)0x00010000)
+#define ETH_DMAMFBOCR_MFC ((uint32_t)0x0000FFFF)
+
+
+#define ETH_DMACHTDR_HTDAP ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMACHRDR_HRDAP ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMACHTBAR_HTBAP ((uint32_t)0xFFFFFFFF)
+
+
+#define ETH_DMACHRBAR_HRBAP ((uint32_t)0xFFFFFFFF)
+# 7116 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 1
+# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h"
+#define __STM32F4xx_CONF_H 
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define __STM32F4xx_ADC_H 
+
+
+ extern "C" {
+
+
+
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h" 1
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h" 2
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+typedef struct
+{
+  uint32_t ADC_Resolution;
 
+  FunctionalState ADC_ScanConvMode;
 
-#define INTPTR_MIN PTR_MIN
-#define INTPTR_MAX PTR_MIN
-#define UINTPTR_MAX UPTR_MAX
 
 
+  FunctionalState ADC_ContinuousConvMode;
 
 
-#define INTMAX_MIN INT64_MIN
-#define INTMAX_MAX INT64_MAX
+  uint32_t ADC_ExternalTrigConvEdge;
 
-#define UINTMAX_MIN UINT64_MIN
-#define UINTMAX_MAX UINT64_MAX
-# 173 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h"
-#define INTMAX_C(x) x ## ll
-#define UINTMAX_C(x) x ## ull
-# 194 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h"
-#define SIZE_MAX UINT32_MAX
-#define RSIZE_MAX UINT32_MAX
-# 219 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h"
-typedef _int8_t int8_t;
-typedef _uint8_t uint8_t;
 
-typedef _int16_t int16_t;
-typedef _uint16_t uint16_t;
 
+  uint32_t ADC_ExternalTrigConv;
 
 
 
+  uint32_t ADC_DataAlign;
 
 
-typedef _int32_t int32_t;
-typedef _uint32_t uint32_t;
+  uint8_t ADC_NbrOfConversion;
 
 
-typedef _int64_t int64_t;
-typedef _uint64_t uint64_t;
 
+}ADC_InitTypeDef;
 
 
 
-typedef _int8_t int_least8_t;
-typedef _uint8_t uint_least8_t;
 
-typedef _int16_t int_least16_t;
-typedef _uint16_t uint_least16_t;
+typedef struct
+{
+  uint32_t ADC_Mode;
 
 
+  uint32_t ADC_Prescaler;
 
 
+  uint32_t ADC_DMAAccessMode;
 
-typedef _int32_t int_least24_t;
-typedef _uint32_t uint_least24_t;
 
 
-typedef _int32_t int_least32_t;
-typedef _uint32_t uint_least32_t;
+  uint32_t ADC_TwoSamplingDelay;
+
+
+
+}ADC_CommonInitTypeDef;
+
+
+
+
+
+
+
+#define IS_ADC_ALL_PERIPH(PERIPH) (((PERIPH) == ADC1) || ((PERIPH) == ADC2) || ((PERIPH) == ADC3))
+
+
+
+
+
+
+#define ADC_Mode_Independent ((uint32_t)0x00000000)
+#define ADC_DualMode_RegSimult_InjecSimult ((uint32_t)0x00000001)
+#define ADC_DualMode_RegSimult_AlterTrig ((uint32_t)0x00000002)
+#define ADC_DualMode_InjecSimult ((uint32_t)0x00000005)
+#define ADC_DualMode_RegSimult ((uint32_t)0x00000006)
+#define ADC_DualMode_Interl ((uint32_t)0x00000007)
+#define ADC_DualMode_AlterTrig ((uint32_t)0x00000009)
+#define ADC_TripleMode_RegSimult_InjecSimult ((uint32_t)0x00000011)
+#define ADC_TripleMode_RegSimult_AlterTrig ((uint32_t)0x00000012)
+#define ADC_TripleMode_InjecSimult ((uint32_t)0x00000015)
+#define ADC_TripleMode_RegSimult ((uint32_t)0x00000016)
+#define ADC_TripleMode_Interl ((uint32_t)0x00000017)
+#define ADC_TripleMode_AlterTrig ((uint32_t)0x00000019)
+#define IS_ADC_MODE(MODE) (((MODE) == ADC_Mode_Independent) || ((MODE) == ADC_DualMode_RegSimult_InjecSimult) || ((MODE) == ADC_DualMode_RegSimult_AlterTrig) || ((MODE) == ADC_DualMode_InjecSimult) || ((MODE) == ADC_DualMode_RegSimult) || ((MODE) == ADC_DualMode_Interl) || ((MODE) == ADC_DualMode_AlterTrig) || ((MODE) == ADC_TripleMode_RegSimult_InjecSimult) || ((MODE) == ADC_TripleMode_RegSimult_AlterTrig) || ((MODE) == ADC_TripleMode_InjecSimult) || ((MODE) == ADC_TripleMode_RegSimult) || ((MODE) == ADC_TripleMode_Interl) || ((MODE) == ADC_TripleMode_AlterTrig))
+# 149 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_Prescaler_Div2 ((uint32_t)0x00000000)
+#define ADC_Prescaler_Div4 ((uint32_t)0x00010000)
+#define ADC_Prescaler_Div6 ((uint32_t)0x00020000)
+#define ADC_Prescaler_Div8 ((uint32_t)0x00030000)
+#define IS_ADC_PRESCALER(PRESCALER) (((PRESCALER) == ADC_Prescaler_Div2) || ((PRESCALER) == ADC_Prescaler_Div4) || ((PRESCALER) == ADC_Prescaler_Div6) || ((PRESCALER) == ADC_Prescaler_Div8))
+# 165 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_DMAAccessMode_Disabled ((uint32_t)0x00000000)
+#define ADC_DMAAccessMode_1 ((uint32_t)0x00004000)
+#define ADC_DMAAccessMode_2 ((uint32_t)0x00008000)
+#define ADC_DMAAccessMode_3 ((uint32_t)0x0000C000)
+#define IS_ADC_DMA_ACCESS_MODE(MODE) (((MODE) == ADC_DMAAccessMode_Disabled) || ((MODE) == ADC_DMAAccessMode_1) || ((MODE) == ADC_DMAAccessMode_2) || ((MODE) == ADC_DMAAccessMode_3))
+# 182 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_TwoSamplingDelay_5Cycles ((uint32_t)0x00000000)
+#define ADC_TwoSamplingDelay_6Cycles ((uint32_t)0x00000100)
+#define ADC_TwoSamplingDelay_7Cycles ((uint32_t)0x00000200)
+#define ADC_TwoSamplingDelay_8Cycles ((uint32_t)0x00000300)
+#define ADC_TwoSamplingDelay_9Cycles ((uint32_t)0x00000400)
+#define ADC_TwoSamplingDelay_10Cycles ((uint32_t)0x00000500)
+#define ADC_TwoSamplingDelay_11Cycles ((uint32_t)0x00000600)
+#define ADC_TwoSamplingDelay_12Cycles ((uint32_t)0x00000700)
+#define ADC_TwoSamplingDelay_13Cycles ((uint32_t)0x00000800)
+#define ADC_TwoSamplingDelay_14Cycles ((uint32_t)0x00000900)
+#define ADC_TwoSamplingDelay_15Cycles ((uint32_t)0x00000A00)
+#define ADC_TwoSamplingDelay_16Cycles ((uint32_t)0x00000B00)
+#define ADC_TwoSamplingDelay_17Cycles ((uint32_t)0x00000C00)
+#define ADC_TwoSamplingDelay_18Cycles ((uint32_t)0x00000D00)
+#define ADC_TwoSamplingDelay_19Cycles ((uint32_t)0x00000E00)
+#define ADC_TwoSamplingDelay_20Cycles ((uint32_t)0x00000F00)
+#define IS_ADC_SAMPLING_DELAY(DELAY) (((DELAY) == ADC_TwoSamplingDelay_5Cycles) || ((DELAY) == ADC_TwoSamplingDelay_6Cycles) || ((DELAY) == ADC_TwoSamplingDelay_7Cycles) || ((DELAY) == ADC_TwoSamplingDelay_8Cycles) || ((DELAY) == ADC_TwoSamplingDelay_9Cycles) || ((DELAY) == ADC_TwoSamplingDelay_10Cycles) || ((DELAY) == ADC_TwoSamplingDelay_11Cycles) || ((DELAY) == ADC_TwoSamplingDelay_12Cycles) || ((DELAY) == ADC_TwoSamplingDelay_13Cycles) || ((DELAY) == ADC_TwoSamplingDelay_14Cycles) || ((DELAY) == ADC_TwoSamplingDelay_15Cycles) || ((DELAY) == ADC_TwoSamplingDelay_16Cycles) || ((DELAY) == ADC_TwoSamplingDelay_17Cycles) || ((DELAY) == ADC_TwoSamplingDelay_18Cycles) || ((DELAY) == ADC_TwoSamplingDelay_19Cycles) || ((DELAY) == ADC_TwoSamplingDelay_20Cycles))
+# 223 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_Resolution_12b ((uint32_t)0x00000000)
+#define ADC_Resolution_10b ((uint32_t)0x01000000)
+#define ADC_Resolution_8b ((uint32_t)0x02000000)
+#define ADC_Resolution_6b ((uint32_t)0x03000000)
+#define IS_ADC_RESOLUTION(RESOLUTION) (((RESOLUTION) == ADC_Resolution_12b) || ((RESOLUTION) == ADC_Resolution_10b) || ((RESOLUTION) == ADC_Resolution_8b) || ((RESOLUTION) == ADC_Resolution_6b))
+# 240 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_ExternalTrigConvEdge_None ((uint32_t)0x00000000)
+#define ADC_ExternalTrigConvEdge_Rising ((uint32_t)0x10000000)
+#define ADC_ExternalTrigConvEdge_Falling ((uint32_t)0x20000000)
+#define ADC_ExternalTrigConvEdge_RisingFalling ((uint32_t)0x30000000)
+#define IS_ADC_EXT_TRIG_EDGE(EDGE) (((EDGE) == ADC_ExternalTrigConvEdge_None) || ((EDGE) == ADC_ExternalTrigConvEdge_Rising) || ((EDGE) == ADC_ExternalTrigConvEdge_Falling) || ((EDGE) == ADC_ExternalTrigConvEdge_RisingFalling))
+# 256 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_ExternalTrigConv_T1_CC1 ((uint32_t)0x00000000)
+#define ADC_ExternalTrigConv_T1_CC2 ((uint32_t)0x01000000)
+#define ADC_ExternalTrigConv_T1_CC3 ((uint32_t)0x02000000)
+#define ADC_ExternalTrigConv_T2_CC2 ((uint32_t)0x03000000)
+#define ADC_ExternalTrigConv_T2_CC3 ((uint32_t)0x04000000)
+#define ADC_ExternalTrigConv_T2_CC4 ((uint32_t)0x05000000)
+#define ADC_ExternalTrigConv_T2_TRGO ((uint32_t)0x06000000)
+#define ADC_ExternalTrigConv_T3_CC1 ((uint32_t)0x07000000)
+#define ADC_ExternalTrigConv_T3_TRGO ((uint32_t)0x08000000)
+#define ADC_ExternalTrigConv_T4_CC4 ((uint32_t)0x09000000)
+#define ADC_ExternalTrigConv_T5_CC1 ((uint32_t)0x0A000000)
+#define ADC_ExternalTrigConv_T5_CC2 ((uint32_t)0x0B000000)
+#define ADC_ExternalTrigConv_T5_CC3 ((uint32_t)0x0C000000)
+#define ADC_ExternalTrigConv_T8_CC1 ((uint32_t)0x0D000000)
+#define ADC_ExternalTrigConv_T8_TRGO ((uint32_t)0x0E000000)
+#define ADC_ExternalTrigConv_Ext_IT11 ((uint32_t)0x0F000000)
+#define IS_ADC_EXT_TRIG(REGTRIG) (((REGTRIG) == ADC_ExternalTrigConv_T1_CC1) || ((REGTRIG) == ADC_ExternalTrigConv_T1_CC2) || ((REGTRIG) == ADC_ExternalTrigConv_T1_CC3) || ((REGTRIG) == ADC_ExternalTrigConv_T2_CC2) || ((REGTRIG) == ADC_ExternalTrigConv_T2_CC3) || ((REGTRIG) == ADC_ExternalTrigConv_T2_CC4) || ((REGTRIG) == ADC_ExternalTrigConv_T2_TRGO) || ((REGTRIG) == ADC_ExternalTrigConv_T3_CC1) || ((REGTRIG) == ADC_ExternalTrigConv_T3_TRGO) || ((REGTRIG) == ADC_ExternalTrigConv_T4_CC4) || ((REGTRIG) == ADC_ExternalTrigConv_T5_CC1) || ((REGTRIG) == ADC_ExternalTrigConv_T5_CC2) || ((REGTRIG) == ADC_ExternalTrigConv_T5_CC3) || ((REGTRIG) == ADC_ExternalTrigConv_T8_CC1) || ((REGTRIG) == ADC_ExternalTrigConv_T8_TRGO) || ((REGTRIG) == ADC_ExternalTrigConv_Ext_IT11))
+# 296 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_DataAlign_Right ((uint32_t)0x00000000)
+#define ADC_DataAlign_Left ((uint32_t)0x00000800)
+#define IS_ADC_DATA_ALIGN(ALIGN) (((ALIGN) == ADC_DataAlign_Right) || ((ALIGN) == ADC_DataAlign_Left))
+# 308 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_Channel_0 ((uint8_t)0x00)
+#define ADC_Channel_1 ((uint8_t)0x01)
+#define ADC_Channel_2 ((uint8_t)0x02)
+#define ADC_Channel_3 ((uint8_t)0x03)
+#define ADC_Channel_4 ((uint8_t)0x04)
+#define ADC_Channel_5 ((uint8_t)0x05)
+#define ADC_Channel_6 ((uint8_t)0x06)
+#define ADC_Channel_7 ((uint8_t)0x07)
+#define ADC_Channel_8 ((uint8_t)0x08)
+#define ADC_Channel_9 ((uint8_t)0x09)
+#define ADC_Channel_10 ((uint8_t)0x0A)
+#define ADC_Channel_11 ((uint8_t)0x0B)
+#define ADC_Channel_12 ((uint8_t)0x0C)
+#define ADC_Channel_13 ((uint8_t)0x0D)
+#define ADC_Channel_14 ((uint8_t)0x0E)
+#define ADC_Channel_15 ((uint8_t)0x0F)
+#define ADC_Channel_16 ((uint8_t)0x10)
+#define ADC_Channel_17 ((uint8_t)0x11)
+#define ADC_Channel_18 ((uint8_t)0x12)
+
+#define ADC_Channel_TempSensor ((uint8_t)ADC_Channel_16)
+#define ADC_Channel_Vrefint ((uint8_t)ADC_Channel_17)
+#define ADC_Channel_Vbat ((uint8_t)ADC_Channel_18)
+
+#define IS_ADC_CHANNEL(CHANNEL) (((CHANNEL) == ADC_Channel_0) || ((CHANNEL) == ADC_Channel_1) || ((CHANNEL) == ADC_Channel_2) || ((CHANNEL) == ADC_Channel_3) || ((CHANNEL) == ADC_Channel_4) || ((CHANNEL) == ADC_Channel_5) || ((CHANNEL) == ADC_Channel_6) || ((CHANNEL) == ADC_Channel_7) || ((CHANNEL) == ADC_Channel_8) || ((CHANNEL) == ADC_Channel_9) || ((CHANNEL) == ADC_Channel_10) || ((CHANNEL) == ADC_Channel_11) || ((CHANNEL) == ADC_Channel_12) || ((CHANNEL) == ADC_Channel_13) || ((CHANNEL) == ADC_Channel_14) || ((CHANNEL) == ADC_Channel_15) || ((CHANNEL) == ADC_Channel_16) || ((CHANNEL) == ADC_Channel_17) || ((CHANNEL) == ADC_Channel_18))
+# 359 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_SampleTime_3Cycles ((uint8_t)0x00)
+#define ADC_SampleTime_15Cycles ((uint8_t)0x01)
+#define ADC_SampleTime_28Cycles ((uint8_t)0x02)
+#define ADC_SampleTime_56Cycles ((uint8_t)0x03)
+#define ADC_SampleTime_84Cycles ((uint8_t)0x04)
+#define ADC_SampleTime_112Cycles ((uint8_t)0x05)
+#define ADC_SampleTime_144Cycles ((uint8_t)0x06)
+#define ADC_SampleTime_480Cycles ((uint8_t)0x07)
+#define IS_ADC_SAMPLE_TIME(TIME) (((TIME) == ADC_SampleTime_3Cycles) || ((TIME) == ADC_SampleTime_15Cycles) || ((TIME) == ADC_SampleTime_28Cycles) || ((TIME) == ADC_SampleTime_56Cycles) || ((TIME) == ADC_SampleTime_84Cycles) || ((TIME) == ADC_SampleTime_112Cycles) || ((TIME) == ADC_SampleTime_144Cycles) || ((TIME) == ADC_SampleTime_480Cycles))
+# 383 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_ExternalTrigInjecConvEdge_None ((uint32_t)0x00000000)
+#define ADC_ExternalTrigInjecConvEdge_Rising ((uint32_t)0x00100000)
+#define ADC_ExternalTrigInjecConvEdge_Falling ((uint32_t)0x00200000)
+#define ADC_ExternalTrigInjecConvEdge_RisingFalling ((uint32_t)0x00300000)
+#define IS_ADC_EXT_INJEC_TRIG_EDGE(EDGE) (((EDGE) == ADC_ExternalTrigInjecConvEdge_None) || ((EDGE) == ADC_ExternalTrigInjecConvEdge_Rising) || ((EDGE) == ADC_ExternalTrigInjecConvEdge_Falling) || ((EDGE) == ADC_ExternalTrigInjecConvEdge_RisingFalling))
+# 400 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_ExternalTrigInjecConv_T1_CC4 ((uint32_t)0x00000000)
+#define ADC_ExternalTrigInjecConv_T1_TRGO ((uint32_t)0x00010000)
+#define ADC_ExternalTrigInjecConv_T2_CC1 ((uint32_t)0x00020000)
+#define ADC_ExternalTrigInjecConv_T2_TRGO ((uint32_t)0x00030000)
+#define ADC_ExternalTrigInjecConv_T3_CC2 ((uint32_t)0x00040000)
+#define ADC_ExternalTrigInjecConv_T3_CC4 ((uint32_t)0x00050000)
+#define ADC_ExternalTrigInjecConv_T4_CC1 ((uint32_t)0x00060000)
+#define ADC_ExternalTrigInjecConv_T4_CC2 ((uint32_t)0x00070000)
+#define ADC_ExternalTrigInjecConv_T4_CC3 ((uint32_t)0x00080000)
+#define ADC_ExternalTrigInjecConv_T4_TRGO ((uint32_t)0x00090000)
+#define ADC_ExternalTrigInjecConv_T5_CC4 ((uint32_t)0x000A0000)
+#define ADC_ExternalTrigInjecConv_T5_TRGO ((uint32_t)0x000B0000)
+#define ADC_ExternalTrigInjecConv_T8_CC2 ((uint32_t)0x000C0000)
+#define ADC_ExternalTrigInjecConv_T8_CC3 ((uint32_t)0x000D0000)
+#define ADC_ExternalTrigInjecConv_T8_CC4 ((uint32_t)0x000E0000)
+#define ADC_ExternalTrigInjecConv_Ext_IT15 ((uint32_t)0x000F0000)
+#define IS_ADC_EXT_INJEC_TRIG(INJTRIG) (((INJTRIG) == ADC_ExternalTrigInjecConv_T1_CC4) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T1_TRGO) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T2_CC1) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T2_TRGO) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T3_CC2) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T3_CC4) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T4_CC1) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T4_CC2) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T4_CC3) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T4_TRGO) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T5_CC4) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T5_TRGO) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T8_CC2) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T8_CC3) || ((INJTRIG) == ADC_ExternalTrigInjecConv_T8_CC4) || ((INJTRIG) == ADC_ExternalTrigInjecConv_Ext_IT15))
+# 440 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_InjectedChannel_1 ((uint8_t)0x14)
+#define ADC_InjectedChannel_2 ((uint8_t)0x18)
+#define ADC_InjectedChannel_3 ((uint8_t)0x1C)
+#define ADC_InjectedChannel_4 ((uint8_t)0x20)
+#define IS_ADC_INJECTED_CHANNEL(CHANNEL) (((CHANNEL) == ADC_InjectedChannel_1) || ((CHANNEL) == ADC_InjectedChannel_2) || ((CHANNEL) == ADC_InjectedChannel_3) || ((CHANNEL) == ADC_InjectedChannel_4))
+# 456 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_AnalogWatchdog_SingleRegEnable ((uint32_t)0x00800200)
+#define ADC_AnalogWatchdog_SingleInjecEnable ((uint32_t)0x00400200)
+#define ADC_AnalogWatchdog_SingleRegOrInjecEnable ((uint32_t)0x00C00200)
+#define ADC_AnalogWatchdog_AllRegEnable ((uint32_t)0x00800000)
+#define ADC_AnalogWatchdog_AllInjecEnable ((uint32_t)0x00400000)
+#define ADC_AnalogWatchdog_AllRegAllInjecEnable ((uint32_t)0x00C00000)
+#define ADC_AnalogWatchdog_None ((uint32_t)0x00000000)
+#define IS_ADC_ANALOG_WATCHDOG(WATCHDOG) (((WATCHDOG) == ADC_AnalogWatchdog_SingleRegEnable) || ((WATCHDOG) == ADC_AnalogWatchdog_SingleInjecEnable) || ((WATCHDOG) == ADC_AnalogWatchdog_SingleRegOrInjecEnable) || ((WATCHDOG) == ADC_AnalogWatchdog_AllRegEnable) || ((WATCHDOG) == ADC_AnalogWatchdog_AllInjecEnable) || ((WATCHDOG) == ADC_AnalogWatchdog_AllRegAllInjecEnable) || ((WATCHDOG) == ADC_AnalogWatchdog_None))
+# 478 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_IT_EOC ((uint16_t)0x0205)
+#define ADC_IT_AWD ((uint16_t)0x0106)
+#define ADC_IT_JEOC ((uint16_t)0x0407)
+#define ADC_IT_OVR ((uint16_t)0x201A)
+#define IS_ADC_IT(IT) (((IT) == ADC_IT_EOC) || ((IT) == ADC_IT_AWD) || ((IT) == ADC_IT_JEOC)|| ((IT) == ADC_IT_OVR))
+# 492 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define ADC_FLAG_AWD ((uint8_t)0x01)
+#define ADC_FLAG_EOC ((uint8_t)0x02)
+#define ADC_FLAG_JEOC ((uint8_t)0x04)
+#define ADC_FLAG_JSTRT ((uint8_t)0x08)
+#define ADC_FLAG_STRT ((uint8_t)0x10)
+#define ADC_FLAG_OVR ((uint8_t)0x20)
+
+#define IS_ADC_CLEAR_FLAG(FLAG) ((((FLAG) & (uint8_t)0xC0) == 0x00) && ((FLAG) != 0x00))
+#define IS_ADC_GET_FLAG(FLAG) (((FLAG) == ADC_FLAG_AWD) || ((FLAG) == ADC_FLAG_EOC) || ((FLAG) == ADC_FLAG_JEOC) || ((FLAG)== ADC_FLAG_JSTRT) || ((FLAG) == ADC_FLAG_STRT) || ((FLAG)== ADC_FLAG_OVR))
+# 514 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_THRESHOLD(THRESHOLD) ((THRESHOLD) <= 0xFFF)
+# 523 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_OFFSET(OFFSET) ((OFFSET) <= 0xFFF)
+# 532 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_INJECTED_LENGTH(LENGTH) (((LENGTH) >= 0x1) && ((LENGTH) <= 0x4))
+# 541 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_INJECTED_RANK(RANK) (((RANK) >= 0x1) && ((RANK) <= 0x4))
+# 550 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_REGULAR_LENGTH(LENGTH) (((LENGTH) >= 0x1) && ((LENGTH) <= 0x10))
+# 559 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_REGULAR_RANK(RANK) (((RANK) >= 0x1) && ((RANK) <= 0x10))
+# 568 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+#define IS_ADC_REGULAR_DISC_NUMBER(NUMBER) (((NUMBER) >= 0x1) && ((NUMBER) <= 0x8))
+# 582 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
+void ADC_DeInit(void);
+
+
+void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct);
+void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct);
+void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct);
+void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct);
+void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+
+
+void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog);
+void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,uint16_t LowThreshold);
+void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel);
+
+
+void ADC_TempSensorVrefintCmd(FunctionalState NewState);
+void ADC_VBATCmd(FunctionalState NewState);
+
+
+void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime);
+void ADC_SoftwareStartConv(ADC_TypeDef* ADCx);
+FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx);
+void ADC_EOCOnEachRegularChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number);
+void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx);
+uint32_t ADC_GetMultiModeConversionValue(void);
+
+
+void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+void ADC_DMARequestAfterLastTransferCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+void ADC_MultiModeDMARequestAfterLastTransferCmd(FunctionalState NewState);
+
+
+void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime);
+void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length);
+void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset);
+void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv);
+void ADC_ExternalTrigInjectedConvEdgeConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConvEdge);
+void ADC_SoftwareStartInjectedConv(ADC_TypeDef* ADCx);
+FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx);
+void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
+uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel);
+
+
+void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState);
+FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG);
+void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG);
+ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT);
+void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT);
 
 
-typedef _int64_t int_least64_t;
-typedef _uint64_t uint_least64_t;
+}
+# 29 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define __STM32F4xx_CAN_H 
 
 
+ extern "C" {
+# 50 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define IS_CAN_ALL_PERIPH(PERIPH) (((PERIPH) == CAN1) || ((PERIPH) == CAN2))
 
 
-typedef _int8_t int_fast8_t;
-typedef _uint8_t uint_fast8_t;
 
-typedef int int_fast16_t;
-typedef unsigned int uint_fast16_t;
 
 
+typedef struct
+{
+  uint16_t CAN_Prescaler;
 
 
+  uint8_t CAN_Mode;
 
-typedef _int32_t int_fast24_t;
-typedef _uint32_t uint_fast24_t;
 
+  uint8_t CAN_SJW;
 
-typedef _int32_t int_fast32_t;
-typedef _uint32_t uint_fast32_t;
 
 
-typedef _int64_t int_fast64_t;
-typedef _uint64_t uint_fast64_t;
 
+  uint8_t CAN_BS1;
 
 
 
-typedef _intptr_t intptr_t;
-typedef _uintptr_t uintptr_t;
-# 303 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdint.h"
-typedef _int64_t intmax_t;
-typedef _uint64_t uintmax_t;
-# 6 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/type_traits" 1
+  uint8_t CAN_BS2;
        
 
+  FunctionalState CAN_TTCM;
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 1 3
-# 30 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-#define _GLIBCXX_TYPE_TRAITS 1
 
+  FunctionalState CAN_ABOM;
        
-# 33 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-# 42 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-namespace std
-{
-  typedef short unsigned int uint_least16_t;
-  typedef long unsigned int uint_least32_t;
-}
 
+  FunctionalState CAN_AWUM;
 
 
+  FunctionalState CAN_NART;
 
 
-namespace std __attribute__ ((__visibility__ ("default")))
-{
+  FunctionalState CAN_RFLM;
 
-# 68 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp, _Tp __v>
-    struct integral_constant
-    {
-      static constexpr _Tp value = __v;
-      typedef _Tp value_type;
-      typedef integral_constant<_Tp, __v> type;
-      constexpr operator value_type() const { return value; }
 
+  FunctionalState CAN_TXFP;
 
+} CAN_InitTypeDef;
 
-    };
 
-  template<typename _Tp, _Tp __v>
-    constexpr _Tp integral_constant<_Tp, __v>::value;
 
 
-  typedef integral_constant<bool, true> true_type;
+typedef struct
+{
+  uint16_t CAN_FilterIdHigh;
 
 
-  typedef integral_constant<bool, false> false_type;
 
+  uint16_t CAN_FilterIdLow;
 
 
-  template<bool, typename, typename>
-    struct conditional;
 
-  template<typename...>
-    struct __or_;
+  uint16_t CAN_FilterMaskIdHigh;
 
-  template<>
-    struct __or_<>
-    : public false_type
-    { };
 
-  template<typename _B1>
-    struct __or_<_B1>
-    : public _B1
-    { };
 
-  template<typename _B1, typename _B2>
-    struct __or_<_B1, _B2>
-    : public conditional<_B1::value, _B1, _B2>::type
-    { };
 
-  template<typename _B1, typename _B2, typename _B3, typename... _Bn>
-    struct __or_<_B1, _B2, _B3, _Bn...>
-    : public conditional<_B1::value, _B1, __or_<_B2, _B3, _Bn...>>::type
-    { };
+  uint16_t CAN_FilterMaskIdLow;
 
-  template<typename...>
-    struct __and_;
 
-  template<>
-    struct __and_<>
-    : public true_type
-    { };
 
-  template<typename _B1>
-    struct __and_<_B1>
-    : public _B1
-    { };
 
-  template<typename _B1, typename _B2>
-    struct __and_<_B1, _B2>
-    : public conditional<_B1::value, _B2, _B1>::type
-    { };
+  uint16_t CAN_FilterFIFOAssignment;
 
-  template<typename _B1, typename _B2, typename _B3, typename... _Bn>
-    struct __and_<_B1, _B2, _B3, _Bn...>
-    : public conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type
-    { };
 
-  template<typename _Pp>
-    struct __not_
-    : public integral_constant<bool, !_Pp::value>
-    { };
+  uint8_t CAN_FilterNumber;
 
+  uint8_t CAN_FilterMode;
 
 
+  uint8_t CAN_FilterScale;
 
 
+  FunctionalState CAN_FilterActivation;
 
-  template<typename _Tp>
-    struct __success_type
-    { typedef _Tp type; };
+} CAN_FilterInitTypeDef;
 
-  struct __failure_type
-  { };
 
 
 
-  template<typename>
-    struct remove_cv;
+typedef struct
+{
+  uint32_t StdId;
 
-  template<typename>
-    struct __is_void_helper
-    : public false_type { };
 
-  template<>
-    struct __is_void_helper<void>
-    : public true_type { };
+  uint32_t ExtId;
 
 
-  template<typename _Tp>
-    struct is_void
-    : public __is_void_helper<typename remove_cv<_Tp>::type>::type
-    { };
+  uint8_t IDE;
 
-  template<typename>
-    struct __is_integral_helper
-    : public false_type { };
 
-  template<>
-    struct __is_integral_helper<bool>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<char>
-    : public true_type { };
+  uint8_t RTR;
 
-  template<>
-    struct __is_integral_helper<signed char>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<unsigned char>
-    : public true_type { };
 
+  uint8_t DLC;
 
-  template<>
-    struct __is_integral_helper<wchar_t>
-    : public true_type { };
 
 
-  template<>
-    struct __is_integral_helper<char16_t>
-    : public true_type { };
+  uint8_t Data[8];
 
-  template<>
-    struct __is_integral_helper<char32_t>
-    : public true_type { };
+} CanTxMsg;
 
-  template<>
-    struct __is_integral_helper<short>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<unsigned short>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<int>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<unsigned int>
-    : public true_type { };
+typedef struct
+{
+  uint32_t StdId;
 
-  template<>
-    struct __is_integral_helper<long>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<unsigned long>
-    : public true_type { };
+  uint32_t ExtId;
 
-  template<>
-    struct __is_integral_helper<long long>
-    : public true_type { };
 
-  template<>
-    struct __is_integral_helper<unsigned long long>
-    : public true_type { };
-# 253 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp>
-    struct is_integral
-    : public __is_integral_helper<typename remove_cv<_Tp>::type>::type
-    { };
+  uint8_t IDE;
 
-  template<typename>
-    struct __is_floating_point_helper
-    : public false_type { };
 
-  template<>
-    struct __is_floating_point_helper<float>
-    : public true_type { };
 
-  template<>
-    struct __is_floating_point_helper<double>
-    : public true_type { };
+  uint8_t RTR;
 
-  template<>
-    struct __is_floating_point_helper<long double>
-    : public true_type { };
-# 281 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp>
-    struct is_floating_point
-    : public __is_floating_point_helper<typename remove_cv<_Tp>::type>::type
-    { };
 
 
-  template<typename>
-    struct is_array
-    : public false_type { };
+  uint8_t DLC;
 
-  template<typename _Tp, std::size_t _Size>
-    struct is_array<_Tp[_Size]>
-    : public true_type { };
 
-  template<typename _Tp>
-    struct is_array<_Tp[]>
-    : public true_type { };
+  uint8_t Data[8];
 
-  template<typename>
-    struct __is_pointer_helper
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_pointer_helper<_Tp*>
-    : public true_type { };
+  uint8_t FMI;
 
 
-  template<typename _Tp>
-    struct is_pointer
-    : public __is_pointer_helper<typename remove_cv<_Tp>::type>::type
-    { };
+} CanRxMsg;
+# 200 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_InitStatus_Failed ((uint8_t)0x00)
+#define CAN_InitStatus_Success ((uint8_t)0x01)
 
 
-  template<typename>
-    struct is_lvalue_reference
-    : public false_type { };
 
-  template<typename _Tp>
-    struct is_lvalue_reference<_Tp&>
-    : public true_type { };
+#define CANINITFAILED CAN_InitStatus_Failed
+#define CANINITOK CAN_InitStatus_Success
+# 215 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_Mode_Normal ((uint8_t)0x00)
+#define CAN_Mode_LoopBack ((uint8_t)0x01)
+#define CAN_Mode_Silent ((uint8_t)0x02)
+#define CAN_Mode_Silent_LoopBack ((uint8_t)0x03)
 
+#define IS_CAN_MODE(MODE) (((MODE) == CAN_Mode_Normal) || ((MODE) == CAN_Mode_LoopBack)|| ((MODE) == CAN_Mode_Silent) || ((MODE) == CAN_Mode_Silent_LoopBack))
+# 233 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_OperatingMode_Initialization ((uint8_t)0x00)
+#define CAN_OperatingMode_Normal ((uint8_t)0x01)
+#define CAN_OperatingMode_Sleep ((uint8_t)0x02)
 
-  template<typename>
-    struct is_rvalue_reference
-    : public false_type { };
 
-  template<typename _Tp>
-    struct is_rvalue_reference<_Tp&&>
-    : public true_type { };
+#define IS_CAN_OPERATING_MODE(MODE) (((MODE) == CAN_OperatingMode_Initialization) || ((MODE) == CAN_OperatingMode_Normal)|| ((MODE) == CAN_OperatingMode_Sleep))
+# 250 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_ModeStatus_Failed ((uint8_t)0x00)
+#define CAN_ModeStatus_Success ((uint8_t)!CAN_ModeStatus_Failed)
+
 
-  template<typename>
-    struct is_function;
 
-  template<typename>
-    struct __is_member_object_pointer_helper
-    : public false_type { };
 
-  template<typename _Tp, typename _Cp>
-    struct __is_member_object_pointer_helper<_Tp _Cp::*>
-    : public integral_constant<bool, !is_function<_Tp>::value> { };
 
 
-  template<typename _Tp>
-    struct is_member_object_pointer
-    : public __is_member_object_pointer_helper<
-    typename remove_cv<_Tp>::type>::type
-    { };
 
-  template<typename>
-    struct __is_member_function_pointer_helper
-    : public false_type { };
+#define CAN_SJW_1tq ((uint8_t)0x00)
+#define CAN_SJW_2tq ((uint8_t)0x01)
+#define CAN_SJW_3tq ((uint8_t)0x02)
+#define CAN_SJW_4tq ((uint8_t)0x03)
 
-  template<typename _Tp, typename _Cp>
-    struct __is_member_function_pointer_helper<_Tp _Cp::*>
-    : public integral_constant<bool, is_function<_Tp>::value> { };
+#define IS_CAN_SJW(SJW) (((SJW) == CAN_SJW_1tq) || ((SJW) == CAN_SJW_2tq)|| ((SJW) == CAN_SJW_3tq) || ((SJW) == CAN_SJW_4tq))
+# 273 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_BS1_1tq ((uint8_t)0x00)
+#define CAN_BS1_2tq ((uint8_t)0x01)
+#define CAN_BS1_3tq ((uint8_t)0x02)
+#define CAN_BS1_4tq ((uint8_t)0x03)
+#define CAN_BS1_5tq ((uint8_t)0x04)
+#define CAN_BS1_6tq ((uint8_t)0x05)
+#define CAN_BS1_7tq ((uint8_t)0x06)
+#define CAN_BS1_8tq ((uint8_t)0x07)
+#define CAN_BS1_9tq ((uint8_t)0x08)
+#define CAN_BS1_10tq ((uint8_t)0x09)
+#define CAN_BS1_11tq ((uint8_t)0x0A)
+#define CAN_BS1_12tq ((uint8_t)0x0B)
+#define CAN_BS1_13tq ((uint8_t)0x0C)
+#define CAN_BS1_14tq ((uint8_t)0x0D)
+#define CAN_BS1_15tq ((uint8_t)0x0E)
+#define CAN_BS1_16tq ((uint8_t)0x0F)
 
+#define IS_CAN_BS1(BS1) ((BS1) <= CAN_BS1_16tq)
 
-  template<typename _Tp>
-    struct is_member_function_pointer
-    : public __is_member_function_pointer_helper<
-    typename remove_cv<_Tp>::type>::type
-    { };
 
 
-  template<typename _Tp>
-    struct is_enum
-    : public integral_constant<bool, __is_enum(_Tp)>
-    { };
 
 
-  template<typename _Tp>
-    struct is_union
-    : public integral_constant<bool, __is_union(_Tp)>
-    { };
 
 
-  template<typename _Tp>
-    struct is_class
-    : public integral_constant<bool, __is_class(_Tp)>
-    { };
+#define CAN_BS2_1tq ((uint8_t)0x00)
+#define CAN_BS2_2tq ((uint8_t)0x01)
+#define CAN_BS2_3tq ((uint8_t)0x02)
+#define CAN_BS2_4tq ((uint8_t)0x03)
+#define CAN_BS2_5tq ((uint8_t)0x04)
+#define CAN_BS2_6tq ((uint8_t)0x05)
+#define CAN_BS2_7tq ((uint8_t)0x06)
+#define CAN_BS2_8tq ((uint8_t)0x07)
 
+#define IS_CAN_BS2(BS2) ((BS2) <= CAN_BS2_8tq)
 
-  template<typename>
-    struct is_function
-    : public false_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...)>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) &&>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......)>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) &&>
-    : public true_type { };
+#define IS_CAN_PRESCALER(PRESCALER) (((PRESCALER) >= 1) && ((PRESCALER) <= 1024))
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) const>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) const &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) const &&>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) const>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) const &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) const &&>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) volatile>
-    : public true_type { };
+#define IS_CAN_FILTER_NUMBER(NUMBER) ((NUMBER) <= 27)
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) volatile &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) volatile &&>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) volatile>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) volatile &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) volatile &&>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) const volatile>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) const volatile &>
-    : public true_type { };
+#define CAN_FilterMode_IdMask ((uint8_t)0x00)
+#define CAN_FilterMode_IdList ((uint8_t)0x01)
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes...) const volatile &&>
-    : public true_type { };
+#define IS_CAN_FILTER_MODE(MODE) (((MODE) == CAN_FilterMode_IdMask) || ((MODE) == CAN_FilterMode_IdList))
+# 343 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_FilterScale_16bit ((uint8_t)0x00)
+#define CAN_FilterScale_32bit ((uint8_t)0x01)
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) const volatile>
-    : public true_type { };
+#define IS_CAN_FILTER_SCALE(SCALE) (((SCALE) == CAN_FilterScale_16bit) || ((SCALE) == CAN_FilterScale_32bit))
+# 355 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_Filter_FIFO0 ((uint8_t)0x00)
+#define CAN_Filter_FIFO1 ((uint8_t)0x01)
+#define IS_CAN_FILTER_FIFO(FIFO) (((FIFO) == CAN_FilterFIFO0) || ((FIFO) == CAN_FilterFIFO1))
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) const volatile &>
-    : public true_type { };
 
-  template<typename _Res, typename... _ArgTypes>
-    struct is_function<_Res(_ArgTypes......) const volatile &&>
-    : public true_type { };
 
-  template<typename>
-    struct __is_null_pointer_helper
-    : public false_type { };
+#define CAN_FilterFIFO0 CAN_Filter_FIFO0
+#define CAN_FilterFIFO1 CAN_Filter_FIFO1
 
-  template<>
-    struct __is_null_pointer_helper<std::nullptr_t>
-    : public true_type { };
 
 
-  template<typename _Tp>
-    struct is_null_pointer
-    : public __is_null_pointer_helper<typename remove_cv<_Tp>::type>::type
-    { };
 
 
-  template<typename _Tp>
-    struct __is_nullptr_t
-    : public is_null_pointer<_Tp>
-    { };
 
 
+#define IS_CAN_BANKNUMBER(BANKNUMBER) (((BANKNUMBER) >= 1) && ((BANKNUMBER) <= 27))
 
 
-  template<typename _Tp>
-    struct is_reference
-    : public __or_<is_lvalue_reference<_Tp>,
-                   is_rvalue_reference<_Tp>>::type
-    { };
 
 
-  template<typename _Tp>
-    struct is_arithmetic
-    : public __or_<is_integral<_Tp>, is_floating_point<_Tp>>::type
-    { };
 
 
-  template<typename _Tp>
-    struct is_fundamental
-    : public __or_<is_arithmetic<_Tp>, is_void<_Tp>,
-     is_null_pointer<_Tp>>::type
-    { };
 
+#define IS_CAN_TRANSMITMAILBOX(TRANSMITMAILBOX) ((TRANSMITMAILBOX) <= ((uint8_t)0x02))
+#define IS_CAN_STDID(STDID) ((STDID) <= ((uint32_t)0x7FF))
+#define IS_CAN_EXTID(EXTID) ((EXTID) <= ((uint32_t)0x1FFFFFFF))
+#define IS_CAN_DLC(DLC) ((DLC) <= ((uint8_t)0x08))
 
-  template<typename _Tp>
-    struct is_object
-    : public __not_<__or_<is_function<_Tp>, is_reference<_Tp>,
-                          is_void<_Tp>>>::type
-    { };
 
-  template<typename>
-    struct is_member_pointer;
 
 
-  template<typename _Tp>
-    struct is_scalar
-    : public __or_<is_arithmetic<_Tp>, is_enum<_Tp>, is_pointer<_Tp>,
-                   is_member_pointer<_Tp>, is_null_pointer<_Tp>>::type
-    { };
 
 
-  template<typename _Tp>
-    struct is_compound
-    : public integral_constant<bool, !is_fundamental<_Tp>::value> { };
 
-  template<typename _Tp>
-    struct __is_member_pointer_helper
-    : public false_type { };
+#define CAN_Id_Standard ((uint32_t)0x00000000)
+#define CAN_Id_Extended ((uint32_t)0x00000004)
+#define IS_CAN_IDTYPE(IDTYPE) (((IDTYPE) == CAN_Id_Standard) || ((IDTYPE) == CAN_Id_Extended))
 
-  template<typename _Tp, typename _Cp>
-    struct __is_member_pointer_helper<_Tp _Cp::*>
-    : public true_type { };
 
 
-  template<typename _Tp>
-    struct is_member_pointer
-    : public __is_member_pointer_helper<typename remove_cv<_Tp>::type>::type
-    { };
+#define CAN_ID_STD CAN_Id_Standard
+#define CAN_ID_EXT CAN_Id_Extended
 
 
 
-  template<typename _Tp>
-    struct __is_referenceable
-    : public __or_<is_object<_Tp>, is_reference<_Tp>>::type
-    { };
 
-  template<typename _Res, typename... _Args>
-    struct __is_referenceable<_Res(_Args...)>
-    : public true_type
-    { };
 
-  template<typename _Res, typename... _Args>
-    struct __is_referenceable<_Res(_Args......)>
-    : public true_type
-    { };
 
 
+#define CAN_RTR_Data ((uint32_t)0x00000000)
+#define CAN_RTR_Remote ((uint32_t)0x00000002)
+#define IS_CAN_RTR(RTR) (((RTR) == CAN_RTR_Data) || ((RTR) == CAN_RTR_Remote))
 
 
-  template<typename>
-    struct is_const
-    : public false_type { };
+#define CAN_RTR_DATA CAN_RTR_Data
+#define CAN_RTR_REMOTE CAN_RTR_Remote
 
-  template<typename _Tp>
-    struct is_const<_Tp const>
-    : public true_type { };
 
 
-  template<typename>
-    struct is_volatile
-    : public false_type { };
 
-  template<typename _Tp>
-    struct is_volatile<_Tp volatile>
-    : public true_type { };
 
 
-  template<typename _Tp>
-    struct is_trivial
-    : public integral_constant<bool, __is_trivial(_Tp)>
-    { };
 
+#define CAN_TxStatus_Failed ((uint8_t)0x00)
+#define CAN_TxStatus_Ok ((uint8_t)0x01)
+#define CAN_TxStatus_Pending ((uint8_t)0x02)
+#define CAN_TxStatus_NoMailBox ((uint8_t)0x04)
 
 
+#define CANTXFAILED CAN_TxStatus_Failed
+#define CANTXOK CAN_TxStatus_Ok
+#define CANTXPENDING CAN_TxStatus_Pending
+#define CAN_NO_MB CAN_TxStatus_NoMailBox
 
-  template<typename _Tp>
-    struct is_standard_layout
-    : public integral_constant<bool, __is_standard_layout(_Tp)>
-    { };
 
 
 
-  template<typename _Tp>
-    struct is_pod
-    : public integral_constant<bool, __is_pod(_Tp)>
-    { };
 
 
-  template<typename _Tp>
-    struct is_literal_type
-    : public integral_constant<bool, __is_literal_type(_Tp)>
-    { };
 
+#define CAN_FIFO0 ((uint8_t)0x00)
+#define CAN_FIFO1 ((uint8_t)0x01)
 
-  template<typename _Tp>
-    struct is_empty
-    : public integral_constant<bool, __is_empty(_Tp)>
-    { };
+#define IS_CAN_FIFO(FIFO) (((FIFO) == CAN_FIFO0) || ((FIFO) == CAN_FIFO1))
 
 
-  template<typename _Tp>
-    struct is_polymorphic
-    : public integral_constant<bool, __is_polymorphic(_Tp)>
-    { };
 
 
-  template<typename _Tp>
-    struct is_abstract
-    : public integral_constant<bool, __is_abstract(_Tp)>
-    { };
 
-  template<typename _Tp,
-    bool = is_arithmetic<_Tp>::value>
-    struct __is_signed_helper
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_signed_helper<_Tp, true>
-    : public integral_constant<bool, _Tp(-1) < _Tp(0)>
-    { };
 
+#define CAN_Sleep_Failed ((uint8_t)0x00)
+#define CAN_Sleep_Ok ((uint8_t)0x01)
 
-  template<typename _Tp>
-    struct is_signed
-    : public __is_signed_helper<_Tp>::type
-    { };
 
+#define CANSLEEPFAILED CAN_Sleep_Failed
+#define CANSLEEPOK CAN_Sleep_Ok
 
-  template<typename _Tp>
-    struct is_unsigned
-    : public __and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp>>>::type
-    { };
 
 
 
 
-  template<typename>
-    struct add_rvalue_reference;
 
 
+#define CAN_WakeUp_Failed ((uint8_t)0x00)
+#define CAN_WakeUp_Ok ((uint8_t)0x01)
 
 
+#define CANWAKEUPFAILED CAN_WakeUp_Failed
+#define CANWAKEUPOK CAN_WakeUp_Ok
+# 473 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_ErrorCode_NoErr ((uint8_t)0x00)
+#define CAN_ErrorCode_StuffErr ((uint8_t)0x10)
+#define CAN_ErrorCode_FormErr ((uint8_t)0x20)
+#define CAN_ErrorCode_ACKErr ((uint8_t)0x30)
+#define CAN_ErrorCode_BitRecessiveErr ((uint8_t)0x40)
+#define CAN_ErrorCode_BitDominantErr ((uint8_t)0x50)
+#define CAN_ErrorCode_CRCErr ((uint8_t)0x60)
+#define CAN_ErrorCode_SoftwareSetErr ((uint8_t)0x70)
+# 494 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_FLAG_RQCP0 ((uint32_t)0x38000001)
+#define CAN_FLAG_RQCP1 ((uint32_t)0x38000100)
+#define CAN_FLAG_RQCP2 ((uint32_t)0x38010000)
 
-  template<typename _Tp>
-    typename add_rvalue_reference<_Tp>::type declval() noexcept;
 
-  template<typename, unsigned = 0>
-    struct extent;
+#define CAN_FLAG_FMP0 ((uint32_t)0x12000003)
+#define CAN_FLAG_FF0 ((uint32_t)0x32000008)
+#define CAN_FLAG_FOV0 ((uint32_t)0x32000010)
+#define CAN_FLAG_FMP1 ((uint32_t)0x14000003)
+#define CAN_FLAG_FF1 ((uint32_t)0x34000008)
+#define CAN_FLAG_FOV1 ((uint32_t)0x34000010)
 
-  template<typename>
-    struct remove_all_extents;
 
-  template<typename _Tp>
-    struct __is_array_known_bounds
-    : public integral_constant<bool, (extent<_Tp>::value > 0)>
-    { };
+#define CAN_FLAG_WKU ((uint32_t)0x31000008)
+#define CAN_FLAG_SLAK ((uint32_t)0x31000012)
 
-  template<typename _Tp>
-    struct __is_array_unknown_bounds
-    : public __and_<is_array<_Tp>, __not_<extent<_Tp>>>::type
-    { };
 
 
 
+#define CAN_FLAG_EWG ((uint32_t)0x10F00001)
+#define CAN_FLAG_EPV ((uint32_t)0x10F00002)
+#define CAN_FLAG_BOF ((uint32_t)0x10F00004)
+#define CAN_FLAG_LEC ((uint32_t)0x30F00070)
 
+#define IS_CAN_GET_FLAG(FLAG) (((FLAG) == CAN_FLAG_LEC) || ((FLAG) == CAN_FLAG_BOF) || ((FLAG) == CAN_FLAG_EPV) || ((FLAG) == CAN_FLAG_EWG) || ((FLAG) == CAN_FLAG_WKU) || ((FLAG) == CAN_FLAG_FOV0) || ((FLAG) == CAN_FLAG_FF0) || ((FLAG) == CAN_FLAG_FMP0) || ((FLAG) == CAN_FLAG_FOV1) || ((FLAG) == CAN_FLAG_FF1) || ((FLAG) == CAN_FLAG_FMP1) || ((FLAG) == CAN_FLAG_RQCP2) || ((FLAG) == CAN_FLAG_RQCP1)|| ((FLAG) == CAN_FLAG_RQCP0) || ((FLAG) == CAN_FLAG_SLAK ))
+# 527 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define IS_CAN_CLEAR_FLAG(FLAG) (((FLAG) == CAN_FLAG_LEC) || ((FLAG) == CAN_FLAG_RQCP2) || ((FLAG) == CAN_FLAG_RQCP1) || ((FLAG) == CAN_FLAG_RQCP0) || ((FLAG) == CAN_FLAG_FF0) || ((FLAG) == CAN_FLAG_FOV0) || ((FLAG) == CAN_FLAG_FF1) || ((FLAG) == CAN_FLAG_FOV1) || ((FLAG) == CAN_FLAG_WKU) || ((FLAG) == CAN_FLAG_SLAK))
+# 540 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+#define CAN_IT_TME ((uint32_t)0x00000001)
 
 
-  struct __do_is_destructible_impl
-  {
-    template<typename _Tp, typename = decltype(declval<_Tp&>().~_Tp())>
-      static true_type __test(int);
+#define CAN_IT_FMP0 ((uint32_t)0x00000002)
+#define CAN_IT_FF0 ((uint32_t)0x00000004)
+#define CAN_IT_FOV0 ((uint32_t)0x00000008)
+#define CAN_IT_FMP1 ((uint32_t)0x00000010)
+#define CAN_IT_FF1 ((uint32_t)0x00000020)
+#define CAN_IT_FOV1 ((uint32_t)0x00000040)
 
-    template<typename>
-      static false_type __test(...);
-  };
 
-  template<typename _Tp>
-    struct __is_destructible_impl
-    : public __do_is_destructible_impl
-    {
-      typedef decltype(__test<_Tp>(0)) type;
-    };
+#define CAN_IT_WKU ((uint32_t)0x00010000)
+#define CAN_IT_SLK ((uint32_t)0x00020000)
+
+
+#define CAN_IT_EWG ((uint32_t)0x00000100)
+#define CAN_IT_EPV ((uint32_t)0x00000200)
+#define CAN_IT_BOF ((uint32_t)0x00000400)
+#define CAN_IT_LEC ((uint32_t)0x00000800)
+#define CAN_IT_ERR ((uint32_t)0x00008000)
 
-  template<typename _Tp,
-           bool = __or_<is_void<_Tp>,
-                        __is_array_unknown_bounds<_Tp>,
-                        is_function<_Tp>>::value,
-           bool = __or_<is_reference<_Tp>, is_scalar<_Tp>>::value>
-    struct __is_destructible_safe;
 
-  template<typename _Tp>
-    struct __is_destructible_safe<_Tp, false, false>
-    : public __is_destructible_impl<typename
-               remove_all_extents<_Tp>::type>::type
-    { };
+#define CAN_IT_RQCP0 CAN_IT_TME
+#define CAN_IT_RQCP1 CAN_IT_TME
+#define CAN_IT_RQCP2 CAN_IT_TME
 
-  template<typename _Tp>
-    struct __is_destructible_safe<_Tp, true, false>
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_destructible_safe<_Tp, false, true>
-    : public true_type { };
+#define IS_CAN_IT(IT) (((IT) == CAN_IT_TME) || ((IT) == CAN_IT_FMP0) || ((IT) == CAN_IT_FF0) || ((IT) == CAN_IT_FOV0) || ((IT) == CAN_IT_FMP1) || ((IT) == CAN_IT_FF1) || ((IT) == CAN_IT_FOV1) || ((IT) == CAN_IT_EWG) || ((IT) == CAN_IT_EPV) || ((IT) == CAN_IT_BOF) || ((IT) == CAN_IT_LEC) || ((IT) == CAN_IT_ERR) || ((IT) == CAN_IT_WKU) || ((IT) == CAN_IT_SLK))
 
 
-  template<typename _Tp>
-    struct is_destructible
-    : public __is_destructible_safe<_Tp>::type
-    { };
 
 
 
 
 
-  struct __do_is_nt_destructible_impl
-  {
-    template<typename _Tp>
-      static integral_constant<bool, noexcept(declval<_Tp&>().~_Tp())>
-        __test(int);
+#define IS_CAN_CLEAR_IT(IT) (((IT) == CAN_IT_TME) || ((IT) == CAN_IT_FF0) || ((IT) == CAN_IT_FOV0)|| ((IT) == CAN_IT_FF1) || ((IT) == CAN_IT_FOV1)|| ((IT) == CAN_IT_EWG) || ((IT) == CAN_IT_EPV) || ((IT) == CAN_IT_BOF) || ((IT) == CAN_IT_LEC) || ((IT) == CAN_IT_ERR) || ((IT) == CAN_IT_WKU) || ((IT) == CAN_IT_SLK))
+# 593 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
+void CAN_DeInit(CAN_TypeDef* CANx);
 
-    template<typename>
-      static false_type __test(...);
-  };
 
-  template<typename _Tp>
-    struct __is_nt_destructible_impl
-    : public __do_is_nt_destructible_impl
-    {
-      typedef decltype(__test<_Tp>(0)) type;
-    };
+uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct);
+void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct);
+void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct);
+void CAN_SlaveStartBank(uint8_t CAN_BankNumber);
+void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState);
+void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState);
 
-  template<typename _Tp,
-           bool = __or_<is_void<_Tp>,
-                        __is_array_unknown_bounds<_Tp>,
-                        is_function<_Tp>>::value,
-           bool = __or_<is_reference<_Tp>, is_scalar<_Tp>>::value>
-    struct __is_nt_destructible_safe;
 
-  template<typename _Tp>
-    struct __is_nt_destructible_safe<_Tp, false, false>
-    : public __is_nt_destructible_impl<typename
-               remove_all_extents<_Tp>::type>::type
-    { };
+uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage);
+uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox);
+void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox);
 
-  template<typename _Tp>
-    struct __is_nt_destructible_safe<_Tp, true, false>
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_nt_destructible_safe<_Tp, false, true>
-    : public true_type { };
+void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage);
+void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber);
+uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber);
 
 
-  template<typename _Tp>
-    struct is_nothrow_destructible
-    : public __is_nt_destructible_safe<_Tp>::type
-    { };
+uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode);
+uint8_t CAN_Sleep(CAN_TypeDef* CANx);
+uint8_t CAN_WakeUp(CAN_TypeDef* CANx);
 
-  struct __do_is_default_constructible_impl
-  {
-    template<typename _Tp, typename = decltype(_Tp())>
-      static true_type __test(int);
 
-    template<typename>
-      static false_type __test(...);
-  };
+uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx);
+uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx);
+uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx);
 
-  template<typename _Tp>
-    struct __is_default_constructible_impl
-    : public __do_is_default_constructible_impl
-    {
-      typedef decltype(__test<_Tp>(0)) type;
-    };
 
-  template<typename _Tp>
-    struct __is_default_constructible_atom
-    : public __and_<__not_<is_void<_Tp>>,
-                    __is_default_constructible_impl<_Tp>>::type
-    { };
+void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState);
+FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG);
+void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG);
+ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT);
+void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT);
 
-  template<typename _Tp, bool = is_array<_Tp>::value>
-    struct __is_default_constructible_safe;
 
+}
+# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_crc.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_crc.h"
+#define __STM32F4xx_CRC_H 
 
 
+ extern "C" {
+# 62 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_crc.h"
+void CRC_ResetDR(void);
+uint32_t CRC_CalcCRC(uint32_t Data);
+uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength);
+uint32_t CRC_GetCRC(void);
+void CRC_SetIDRegister(uint8_t IDValue);
+uint8_t CRC_GetIDRegister(void);
 
 
+}
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define __STM32F4xx_CRYP_H 
 
-  template<typename _Tp>
-    struct __is_default_constructible_safe<_Tp, true>
-    : public __and_<__is_array_known_bounds<_Tp>,
-      __is_default_constructible_atom<typename
-                      remove_all_extents<_Tp>::type>>::type
-    { };
 
-  template<typename _Tp>
-    struct __is_default_constructible_safe<_Tp, false>
-    : public __is_default_constructible_atom<_Tp>::type
-    { };
+ extern "C" {
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+typedef struct
+{
+  uint32_t CRYP_AlgoDir;
 
+  uint32_t CRYP_AlgoMode;
 
-  template<typename _Tp>
-    struct is_default_constructible
-    : public __is_default_constructible_safe<_Tp>::type
-    { };
-# 850 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  struct __do_is_static_castable_impl
-  {
-    template<typename _From, typename _To, typename
-             = decltype(static_cast<_To>(declval<_From>()))>
-      static true_type __test(int);
 
-    template<typename, typename>
-      static false_type __test(...);
-  };
+  uint32_t CRYP_DataType;
 
-  template<typename _From, typename _To>
-    struct __is_static_castable_impl
-    : public __do_is_static_castable_impl
-    {
-      typedef decltype(__test<_From, _To>(0)) type;
-    };
+  uint32_t CRYP_KeySize;
 
-  template<typename _From, typename _To>
-    struct __is_static_castable_safe
-    : public __is_static_castable_impl<_From, _To>::type
-    { };
 
+}CRYP_InitTypeDef;
 
-  template<typename _From, typename _To>
-    struct __is_static_castable
-    : public integral_constant<bool, (__is_static_castable_safe<
-          _From, _To>::value)>
-    { };
 
 
 
+typedef struct
+{
+  uint32_t CRYP_Key0Left;
+  uint32_t CRYP_Key0Right;
+  uint32_t CRYP_Key1Left;
+  uint32_t CRYP_Key1Right;
+  uint32_t CRYP_Key2Left;
+  uint32_t CRYP_Key2Right;
+  uint32_t CRYP_Key3Left;
+  uint32_t CRYP_Key3Right;
+}CRYP_KeyInitTypeDef;
 
 
 
-  struct __do_is_direct_constructible_impl
-  {
-    template<typename _Tp, typename _Arg, typename
-      = decltype(::new _Tp(declval<_Arg>()))>
-      static true_type __test(int);
+typedef struct
+{
+  uint32_t CRYP_IV0Left;
+  uint32_t CRYP_IV0Right;
+  uint32_t CRYP_IV1Left;
+  uint32_t CRYP_IV1Right;
+}CRYP_IVInitTypeDef;
 
-    template<typename, typename>
-      static false_type __test(...);
-  };
 
-  template<typename _Tp, typename _Arg>
-    struct __is_direct_constructible_impl
-    : public __do_is_direct_constructible_impl
-    {
-      typedef decltype(__test<_Tp, _Arg>(0)) type;
-    };
 
-  template<typename _Tp, typename _Arg>
-    struct __is_direct_constructible_new_safe
-    : public __and_<is_destructible<_Tp>,
-                    __is_direct_constructible_impl<_Tp, _Arg>>::type
-    { };
 
-  template<typename, typename>
-    struct is_same;
+typedef struct
+{
 
-  template<typename, typename>
-    struct is_base_of;
+  uint32_t CR_CurrentConfig;
 
-  template<typename>
-    struct remove_reference;
+  uint32_t CRYP_IV0LR;
+  uint32_t CRYP_IV0RR;
+  uint32_t CRYP_IV1LR;
+  uint32_t CRYP_IV1RR;
+
+  uint32_t CRYP_K0LR;
+  uint32_t CRYP_K0RR;
+  uint32_t CRYP_K1LR;
+  uint32_t CRYP_K1RR;
+  uint32_t CRYP_K2LR;
+  uint32_t CRYP_K2RR;
+  uint32_t CRYP_K3LR;
+  uint32_t CRYP_K3RR;
+  uint32_t CRYP_CSGCMCCMR[8];
+  uint32_t CRYP_CSGCMR[8];
+}CRYP_Context;
+# 127 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_AlgoDir_Encrypt ((uint16_t)0x0000)
+#define CRYP_AlgoDir_Decrypt ((uint16_t)0x0004)
+#define IS_CRYP_ALGODIR(ALGODIR) (((ALGODIR) == CRYP_AlgoDir_Encrypt) || ((ALGODIR) == CRYP_AlgoDir_Decrypt))
+# 141 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_AlgoMode_TDES_ECB ((uint32_t)0x00000000)
+#define CRYP_AlgoMode_TDES_CBC ((uint32_t)0x00000008)
+
+
+#define CRYP_AlgoMode_DES_ECB ((uint32_t)0x00000010)
+#define CRYP_AlgoMode_DES_CBC ((uint32_t)0x00000018)
+
+
+#define CRYP_AlgoMode_AES_ECB ((uint32_t)0x00000020)
+#define CRYP_AlgoMode_AES_CBC ((uint32_t)0x00000028)
+#define CRYP_AlgoMode_AES_CTR ((uint32_t)0x00000030)
+#define CRYP_AlgoMode_AES_Key ((uint32_t)0x00000038)
+#define CRYP_AlgoMode_AES_GCM ((uint32_t)0x00080000)
+#define CRYP_AlgoMode_AES_CCM ((uint32_t)0x00080008)
+
+#define IS_CRYP_ALGOMODE(ALGOMODE) (((ALGOMODE) == CRYP_AlgoMode_TDES_ECB) || ((ALGOMODE) == CRYP_AlgoMode_TDES_CBC)|| ((ALGOMODE) == CRYP_AlgoMode_DES_ECB) || ((ALGOMODE) == CRYP_AlgoMode_DES_CBC) || ((ALGOMODE) == CRYP_AlgoMode_AES_ECB) || ((ALGOMODE) == CRYP_AlgoMode_AES_CBC) || ((ALGOMODE) == CRYP_AlgoMode_AES_CTR) || ((ALGOMODE) == CRYP_AlgoMode_AES_Key) || ((ALGOMODE) == CRYP_AlgoMode_AES_GCM) || ((ALGOMODE) == CRYP_AlgoMode_AES_CCM))
+# 175 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_Phase_Init ((uint32_t)0x00000000)
+#define CRYP_Phase_Header CRYP_CR_GCM_CCMPH_0
+#define CRYP_Phase_Payload CRYP_CR_GCM_CCMPH_1
+#define CRYP_Phase_Final CRYP_CR_GCM_CCMPH
+
+#define IS_CRYP_PHASE(PHASE) (((PHASE) == CRYP_Phase_Init) || ((PHASE) == CRYP_Phase_Header) || ((PHASE) == CRYP_Phase_Payload) || ((PHASE) == CRYP_Phase_Final))
+# 192 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_DataType_32b ((uint16_t)0x0000)
+#define CRYP_DataType_16b ((uint16_t)0x0040)
+#define CRYP_DataType_8b ((uint16_t)0x0080)
+#define CRYP_DataType_1b ((uint16_t)0x00C0)
+#define IS_CRYP_DATATYPE(DATATYPE) (((DATATYPE) == CRYP_DataType_32b) || ((DATATYPE) == CRYP_DataType_16b)|| ((DATATYPE) == CRYP_DataType_8b)|| ((DATATYPE) == CRYP_DataType_1b))
+# 207 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_KeySize_128b ((uint16_t)0x0000)
+#define CRYP_KeySize_192b ((uint16_t)0x0100)
+#define CRYP_KeySize_256b ((uint16_t)0x0200)
+#define IS_CRYP_KEYSIZE(KEYSIZE) (((KEYSIZE) == CRYP_KeySize_128b)|| ((KEYSIZE) == CRYP_KeySize_192b)|| ((KEYSIZE) == CRYP_KeySize_256b))
+# 220 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_FLAG_BUSY ((uint8_t)0x10)
+
+
+
+#define CRYP_FLAG_IFEM ((uint8_t)0x01)
+#define CRYP_FLAG_IFNF ((uint8_t)0x02)
+#define CRYP_FLAG_INRIS ((uint8_t)0x22)
+#define CRYP_FLAG_OFNE ((uint8_t)0x04)
+
+#define CRYP_FLAG_OFFU ((uint8_t)0x08)
+#define CRYP_FLAG_OUTRIS ((uint8_t)0x21)
+
+
+#define IS_CRYP_GET_FLAG(FLAG) (((FLAG) == CRYP_FLAG_IFEM) || ((FLAG) == CRYP_FLAG_IFNF) || ((FLAG) == CRYP_FLAG_OFNE) || ((FLAG) == CRYP_FLAG_OFFU) || ((FLAG) == CRYP_FLAG_BUSY) || ((FLAG) == CRYP_FLAG_OUTRIS)|| ((FLAG) == CRYP_FLAG_INRIS))
+# 247 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_IT_INI ((uint8_t)0x01)
+#define CRYP_IT_OUTI ((uint8_t)0x02)
+#define IS_CRYP_CONFIG_IT(IT) ((((IT) & (uint8_t)0xFC) == 0x00) && ((IT) != 0x00))
+#define IS_CRYP_GET_IT(IT) (((IT) == CRYP_IT_INI) || ((IT) == CRYP_IT_OUTI))
+# 259 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define MODE_ENCRYPT ((uint8_t)0x01)
+#define MODE_DECRYPT ((uint8_t)0x00)
+# 269 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+#define CRYP_DMAReq_DataIN ((uint8_t)0x01)
+#define CRYP_DMAReq_DataOUT ((uint8_t)0x02)
+#define IS_CRYP_DMAREQ(DMAREQ) ((((DMAREQ) & (uint8_t)0xFC) == 0x00) && ((DMAREQ) != 0x00))
+# 284 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
+void CRYP_DeInit(void);
+
+
+void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct);
+void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct);
+void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct);
+void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct);
+void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct);
+void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct);
+void CRYP_Cmd(FunctionalState NewState);
+void CRYP_PhaseConfig(uint32_t CRYP_Phase);
+void CRYP_FIFOFlush(void);
+
+void CRYP_DataIn(uint32_t Data);
+uint32_t CRYP_DataOut(void);
+
+
+ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
+                             CRYP_KeyInitTypeDef* CRYP_KeyInitStruct);
+void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore);
+
+
+void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState);
+
+
+void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState);
+ITStatus CRYP_GetITStatus(uint8_t CRYP_IT);
+FunctionalState CRYP_GetCmdStatus(void);
+FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG);
+
+
+ErrorStatus CRYP_AES_ECB(uint8_t Mode,
+                         uint8_t *Key, uint16_t Keysize,
+                         uint8_t *Input, uint32_t Ilength,
+                         uint8_t *Output);
+
+ErrorStatus CRYP_AES_CBC(uint8_t Mode,
+                         uint8_t InitVectors[16],
+                         uint8_t *Key, uint16_t Keysize,
+                         uint8_t *Input, uint32_t Ilength,
+                         uint8_t *Output);
+
+ErrorStatus CRYP_AES_CTR(uint8_t Mode,
+                         uint8_t InitVectors[16],
+                         uint8_t *Key, uint16_t Keysize,
+                         uint8_t *Input, uint32_t Ilength,
+                         uint8_t *Output);
+
+ErrorStatus CRYP_AES_GCM(uint8_t Mode, uint8_t InitVectors[16],
+                         uint8_t *Key, uint16_t Keysize,
+                         uint8_t *Input, uint32_t ILength,
+                         uint8_t *Header, uint32_t HLength,
+                         uint8_t *Output, uint8_t *AuthTAG);
+
+ErrorStatus CRYP_AES_CCM(uint8_t Mode,
+                         uint8_t* Nonce, uint32_t NonceSize,
+                         uint8_t* Key, uint16_t Keysize,
+                         uint8_t* Input, uint32_t ILength,
+                         uint8_t* Header, uint32_t HLength, uint8_t *HBuffer,
+                         uint8_t* Output,
+                         uint8_t* AuthTAG, uint32_t TAGSize);
+
+
+ErrorStatus CRYP_TDES_ECB(uint8_t Mode,
+                           uint8_t Key[24],
+                           uint8_t *Input, uint32_t Ilength,
+                           uint8_t *Output);
+
+ErrorStatus CRYP_TDES_CBC(uint8_t Mode,
+                          uint8_t Key[24],
+                          uint8_t InitVectors[8],
+                          uint8_t *Input, uint32_t Ilength,
+                          uint8_t *Output);
+
+
+ErrorStatus CRYP_DES_ECB(uint8_t Mode,
+                         uint8_t Key[8],
+                         uint8_t *Input, uint32_t Ilength,
+                         uint8_t *Output);
+
+ErrorStatus CRYP_DES_CBC(uint8_t Mode,
+                         uint8_t Key[8],
+                         uint8_t InitVectors[8],
+                         uint8_t *Input,uint32_t Ilength,
+                         uint8_t *Output);
 
-  template<typename _From, typename _To, bool
-           = __not_<__or_<is_void<_From>,
-                          is_function<_From>>>::value>
-    struct __is_base_to_derived_ref;
 
+}
+# 32 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define __STM32F4xx_DAC_H 
 
 
-  template<typename _From, typename _To>
-    struct __is_base_to_derived_ref<_From, _To, true>
-    {
-      typedef typename remove_cv<typename remove_reference<_From
-        >::type>::type __src_t;
-      typedef typename remove_cv<typename remove_reference<_To
-        >::type>::type __dst_t;
-      typedef __and_<__not_<is_same<__src_t, __dst_t>>,
-       is_base_of<__src_t, __dst_t>> type;
-      static constexpr bool value = type::value;
-    };
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+typedef struct
+{
+  uint32_t DAC_Trigger;
 
-  template<typename _From, typename _To>
-    struct __is_base_to_derived_ref<_From, _To, false>
-    : public false_type
-    { };
 
-  template<typename _From, typename _To, bool
-           = __and_<is_lvalue_reference<_From>,
-                    is_rvalue_reference<_To>>::value>
-    struct __is_lvalue_to_rvalue_ref;
+  uint32_t DAC_WaveGeneration;
 
 
 
-  template<typename _From, typename _To>
-    struct __is_lvalue_to_rvalue_ref<_From, _To, true>
-    {
-      typedef typename remove_cv<typename remove_reference<
-        _From>::type>::type __src_t;
-      typedef typename remove_cv<typename remove_reference<
-        _To>::type>::type __dst_t;
-      typedef __and_<__not_<is_function<__src_t>>,
-        __or_<is_same<__src_t, __dst_t>,
-      is_base_of<__dst_t, __src_t>>> type;
-      static constexpr bool value = type::value;
-    };
+  uint32_t DAC_LFSRUnmask_TriangleAmplitude;
 
-  template<typename _From, typename _To>
-    struct __is_lvalue_to_rvalue_ref<_From, _To, false>
-    : public false_type
-    { };
 
 
+  uint32_t DAC_OutputBuffer;
+
+}DAC_InitTypeDef;
+# 81 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_Trigger_None ((uint32_t)0x00000000)
+
+#define DAC_Trigger_T2_TRGO ((uint32_t)0x00000024)
+#define DAC_Trigger_T4_TRGO ((uint32_t)0x0000002C)
+#define DAC_Trigger_T5_TRGO ((uint32_t)0x0000001C)
+#define DAC_Trigger_T6_TRGO ((uint32_t)0x00000004)
+#define DAC_Trigger_T7_TRGO ((uint32_t)0x00000014)
+#define DAC_Trigger_T8_TRGO ((uint32_t)0x0000000C)
+
+#define DAC_Trigger_Ext_IT9 ((uint32_t)0x00000034)
+#define DAC_Trigger_Software ((uint32_t)0x0000003C)
+
+#define IS_DAC_TRIGGER(TRIGGER) (((TRIGGER) == DAC_Trigger_None) || ((TRIGGER) == DAC_Trigger_T6_TRGO) || ((TRIGGER) == DAC_Trigger_T8_TRGO) || ((TRIGGER) == DAC_Trigger_T7_TRGO) || ((TRIGGER) == DAC_Trigger_T5_TRGO) || ((TRIGGER) == DAC_Trigger_T2_TRGO) || ((TRIGGER) == DAC_Trigger_T4_TRGO) || ((TRIGGER) == DAC_Trigger_Ext_IT9) || ((TRIGGER) == DAC_Trigger_Software))
+# 111 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_WaveGeneration_None ((uint32_t)0x00000000)
+#define DAC_WaveGeneration_Noise ((uint32_t)0x00000040)
+#define DAC_WaveGeneration_Triangle ((uint32_t)0x00000080)
+#define IS_DAC_GENERATE_WAVE(WAVE) (((WAVE) == DAC_WaveGeneration_None) || ((WAVE) == DAC_WaveGeneration_Noise) || ((WAVE) == DAC_WaveGeneration_Triangle))
+# 125 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_LFSRUnmask_Bit0 ((uint32_t)0x00000000)
+#define DAC_LFSRUnmask_Bits1_0 ((uint32_t)0x00000100)
+#define DAC_LFSRUnmask_Bits2_0 ((uint32_t)0x00000200)
+#define DAC_LFSRUnmask_Bits3_0 ((uint32_t)0x00000300)
+#define DAC_LFSRUnmask_Bits4_0 ((uint32_t)0x00000400)
+#define DAC_LFSRUnmask_Bits5_0 ((uint32_t)0x00000500)
+#define DAC_LFSRUnmask_Bits6_0 ((uint32_t)0x00000600)
+#define DAC_LFSRUnmask_Bits7_0 ((uint32_t)0x00000700)
+#define DAC_LFSRUnmask_Bits8_0 ((uint32_t)0x00000800)
+#define DAC_LFSRUnmask_Bits9_0 ((uint32_t)0x00000900)
+#define DAC_LFSRUnmask_Bits10_0 ((uint32_t)0x00000A00)
+#define DAC_LFSRUnmask_Bits11_0 ((uint32_t)0x00000B00)
+#define DAC_TriangleAmplitude_1 ((uint32_t)0x00000000)
+#define DAC_TriangleAmplitude_3 ((uint32_t)0x00000100)
+#define DAC_TriangleAmplitude_7 ((uint32_t)0x00000200)
+#define DAC_TriangleAmplitude_15 ((uint32_t)0x00000300)
+#define DAC_TriangleAmplitude_31 ((uint32_t)0x00000400)
+#define DAC_TriangleAmplitude_63 ((uint32_t)0x00000500)
+#define DAC_TriangleAmplitude_127 ((uint32_t)0x00000600)
+#define DAC_TriangleAmplitude_255 ((uint32_t)0x00000700)
+#define DAC_TriangleAmplitude_511 ((uint32_t)0x00000800)
+#define DAC_TriangleAmplitude_1023 ((uint32_t)0x00000900)
+#define DAC_TriangleAmplitude_2047 ((uint32_t)0x00000A00)
+#define DAC_TriangleAmplitude_4095 ((uint32_t)0x00000B00)
+
+#define IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(VALUE) (((VALUE) == DAC_LFSRUnmask_Bit0) || ((VALUE) == DAC_LFSRUnmask_Bits1_0) || ((VALUE) == DAC_LFSRUnmask_Bits2_0) || ((VALUE) == DAC_LFSRUnmask_Bits3_0) || ((VALUE) == DAC_LFSRUnmask_Bits4_0) || ((VALUE) == DAC_LFSRUnmask_Bits5_0) || ((VALUE) == DAC_LFSRUnmask_Bits6_0) || ((VALUE) == DAC_LFSRUnmask_Bits7_0) || ((VALUE) == DAC_LFSRUnmask_Bits8_0) || ((VALUE) == DAC_LFSRUnmask_Bits9_0) || ((VALUE) == DAC_LFSRUnmask_Bits10_0) || ((VALUE) == DAC_LFSRUnmask_Bits11_0) || ((VALUE) == DAC_TriangleAmplitude_1) || ((VALUE) == DAC_TriangleAmplitude_3) || ((VALUE) == DAC_TriangleAmplitude_7) || ((VALUE) == DAC_TriangleAmplitude_15) || ((VALUE) == DAC_TriangleAmplitude_31) || ((VALUE) == DAC_TriangleAmplitude_63) || ((VALUE) == DAC_TriangleAmplitude_127) || ((VALUE) == DAC_TriangleAmplitude_255) || ((VALUE) == DAC_TriangleAmplitude_511) || ((VALUE) == DAC_TriangleAmplitude_1023) || ((VALUE) == DAC_TriangleAmplitude_2047) || ((VALUE) == DAC_TriangleAmplitude_4095))
+# 182 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_OutputBuffer_Enable ((uint32_t)0x00000000)
+#define DAC_OutputBuffer_Disable ((uint32_t)0x00000002)
+#define IS_DAC_OUTPUT_BUFFER_STATE(STATE) (((STATE) == DAC_OutputBuffer_Enable) || ((STATE) == DAC_OutputBuffer_Disable))
+# 194 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_Channel_1 ((uint32_t)0x00000000)
+#define DAC_Channel_2 ((uint32_t)0x00000010)
+#define IS_DAC_CHANNEL(CHANNEL) (((CHANNEL) == DAC_Channel_1) || ((CHANNEL) == DAC_Channel_2))
+# 206 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_Align_12b_R ((uint32_t)0x00000000)
+#define DAC_Align_12b_L ((uint32_t)0x00000004)
+#define DAC_Align_8b_R ((uint32_t)0x00000008)
+#define IS_DAC_ALIGN(ALIGN) (((ALIGN) == DAC_Align_12b_R) || ((ALIGN) == DAC_Align_12b_L) || ((ALIGN) == DAC_Align_8b_R))
+# 220 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_Wave_Noise ((uint32_t)0x00000040)
+#define DAC_Wave_Triangle ((uint32_t)0x00000080)
+#define IS_DAC_WAVE(WAVE) (((WAVE) == DAC_Wave_Noise) || ((WAVE) == DAC_Wave_Triangle))
+# 232 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define IS_DAC_DATA(DATA) ((DATA) <= 0xFFF0)
 
 
 
 
 
-  template<typename _Tp, typename _Arg>
-    struct __is_direct_constructible_ref_cast
-    : public __and_<__is_static_castable<_Arg, _Tp>,
-                    __not_<__or_<__is_base_to_derived_ref<_Arg, _Tp>,
-                                 __is_lvalue_to_rvalue_ref<_Arg, _Tp>
-                   >>>::type
-    { };
 
-  template<typename _Tp, typename _Arg>
-    struct __is_direct_constructible_new
-    : public conditional<is_reference<_Tp>::value,
-    __is_direct_constructible_ref_cast<_Tp, _Arg>,
-    __is_direct_constructible_new_safe<_Tp, _Arg>
-    >::type
-    { };
 
-  template<typename _Tp, typename _Arg>
-    struct __is_direct_constructible
-    : public __is_direct_constructible_new<_Tp, _Arg>::type
-    { };
+#define DAC_IT_DMAUDR ((uint32_t)0x00002000)
+#define IS_DAC_IT(IT) (((IT) == DAC_IT_DMAUDR))
+# 251 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+#define DAC_FLAG_DMAUDR ((uint32_t)0x00002000)
+#define IS_DAC_FLAG(FLAG) (((FLAG) == DAC_FLAG_DMAUDR))
+# 266 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
+void DAC_DeInit(void);
+
+
+void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct);
+void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct);
+void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState);
+void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState);
+void DAC_DualSoftwareTriggerCmd(FunctionalState NewState);
+void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState);
+void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data);
+void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data);
+void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1);
+uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel);
+
+
+void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState);
+
+
+void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState);
+FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG);
+void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG);
+ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT);
+void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT);
 
 
+}
+# 33 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dbgmcu.h" 1
+# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dbgmcu.h"
+#define __STM32F4xx_DBGMCU_H 
+
+
+ extern "C" {
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dbgmcu.h"
+#define DBGMCU_SLEEP ((uint32_t)0x00000001)
+#define DBGMCU_STOP ((uint32_t)0x00000002)
+#define DBGMCU_STANDBY ((uint32_t)0x00000004)
+#define IS_DBGMCU_PERIPH(PERIPH) ((((PERIPH) & 0xFFFFFFF8) == 0x00) && ((PERIPH) != 0x00))
+
+#define DBGMCU_TIM2_STOP ((uint32_t)0x00000001)
+#define DBGMCU_TIM3_STOP ((uint32_t)0x00000002)
+#define DBGMCU_TIM4_STOP ((uint32_t)0x00000004)
+#define DBGMCU_TIM5_STOP ((uint32_t)0x00000008)
+#define DBGMCU_TIM6_STOP ((uint32_t)0x00000010)
+#define DBGMCU_TIM7_STOP ((uint32_t)0x00000020)
+#define DBGMCU_TIM12_STOP ((uint32_t)0x00000040)
+#define DBGMCU_TIM13_STOP ((uint32_t)0x00000080)
+#define DBGMCU_TIM14_STOP ((uint32_t)0x00000100)
+#define DBGMCU_RTC_STOP ((uint32_t)0x00000400)
+#define DBGMCU_WWDG_STOP ((uint32_t)0x00000800)
+#define DBGMCU_IWDG_STOP ((uint32_t)0x00001000)
+#define DBGMCU_I2C1_SMBUS_TIMEOUT ((uint32_t)0x00200000)
+#define DBGMCU_I2C2_SMBUS_TIMEOUT ((uint32_t)0x00400000)
+#define DBGMCU_I2C3_SMBUS_TIMEOUT ((uint32_t)0x00800000)
+#define DBGMCU_CAN1_STOP ((uint32_t)0x02000000)
+#define DBGMCU_CAN2_STOP ((uint32_t)0x04000000)
+#define IS_DBGMCU_APB1PERIPH(PERIPH) ((((PERIPH) & 0xF91FE200) == 0x00) && ((PERIPH) != 0x00))
+
+#define DBGMCU_TIM1_STOP ((uint32_t)0x00000001)
+#define DBGMCU_TIM8_STOP ((uint32_t)0x00000002)
+#define DBGMCU_TIM9_STOP ((uint32_t)0x00010000)
+#define DBGMCU_TIM10_STOP ((uint32_t)0x00020000)
+#define DBGMCU_TIM11_STOP ((uint32_t)0x00040000)
+#define IS_DBGMCU_APB2PERIPH(PERIPH) ((((PERIPH) & 0xFFF8FFFC) == 0x00) && ((PERIPH) != 0x00))
 
 
 
 
-  struct __do_is_nary_constructible_impl
-  {
-    template<typename _Tp, typename... _Args, typename
-             = decltype(_Tp(declval<_Args>()...))>
-      static true_type __test(int);
 
-    template<typename, typename...>
-      static false_type __test(...);
-  };
 
-  template<typename _Tp, typename... _Args>
-    struct __is_nary_constructible_impl
-    : public __do_is_nary_constructible_impl
-    {
-      typedef decltype(__test<_Tp, _Args...>(0)) type;
-    };
+uint32_t DBGMCU_GetREVID(void);
+uint32_t DBGMCU_GetDEVID(void);
+void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState);
+void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState);
+void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState);
 
-  template<typename _Tp, typename... _Args>
-    struct __is_nary_constructible
-    : public __is_nary_constructible_impl<_Tp, _Args...>::type
-    {
-      static_assert(sizeof...(_Args) > 1,
-                    "Only useful for > 1 arguments");
-    };
 
-  template<typename _Tp, typename... _Args>
-    struct __is_constructible_impl
-    : public __is_nary_constructible<_Tp, _Args...>
-    { };
+}
+# 34 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h" 1
+# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define __STM32F4xx_DCMI_H 
 
-  template<typename _Tp, typename _Arg>
-    struct __is_constructible_impl<_Tp, _Arg>
-    : public __is_direct_constructible<_Tp, _Arg>
-    { };
 
-  template<typename _Tp>
-    struct __is_constructible_impl<_Tp>
-    : public is_default_constructible<_Tp>
-    { };
+ extern "C" {
+# 51 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+typedef struct
+{
+  uint16_t DCMI_CaptureMode;
 
 
-  template<typename _Tp, typename... _Args>
-    struct is_constructible
-    : public __is_constructible_impl<_Tp, _Args...>::type
-    { };
+  uint16_t DCMI_SynchroMode;
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_copy_constructible_impl;
 
-  template<typename _Tp>
-    struct __is_copy_constructible_impl<_Tp, false>
-    : public false_type { };
+  uint16_t DCMI_PCKPolarity;
 
-  template<typename _Tp>
-    struct __is_copy_constructible_impl<_Tp, true>
-    : public is_constructible<_Tp, const _Tp&>
-    { };
 
+  uint16_t DCMI_VSPolarity;
 
-  template<typename _Tp>
-    struct is_copy_constructible
-    : public __is_copy_constructible_impl<_Tp>
-    { };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_move_constructible_impl;
+  uint16_t DCMI_HSPolarity;
 
-  template<typename _Tp>
-    struct __is_move_constructible_impl<_Tp, false>
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_move_constructible_impl<_Tp, true>
-    : public is_constructible<_Tp, _Tp&&>
-    { };
+  uint16_t DCMI_CaptureRate;
 
 
-  template<typename _Tp>
-    struct is_move_constructible
-    : public __is_move_constructible_impl<_Tp>
-    { };
+  uint16_t DCMI_ExtendedDataMode;
 
-  template<typename _Tp>
-    struct __is_nt_default_constructible_atom
-    : public integral_constant<bool, noexcept(_Tp())>
-    { };
+} DCMI_InitTypeDef;
 
-  template<typename _Tp, bool = is_array<_Tp>::value>
-    struct __is_nt_default_constructible_impl;
 
-  template<typename _Tp>
-    struct __is_nt_default_constructible_impl<_Tp, true>
-    : public __and_<__is_array_known_bounds<_Tp>,
-      __is_nt_default_constructible_atom<typename
-                      remove_all_extents<_Tp>::type>>::type
-    { };
 
-  template<typename _Tp>
-    struct __is_nt_default_constructible_impl<_Tp, false>
-    : public __is_nt_default_constructible_atom<_Tp>
-    { };
 
+typedef struct
+{
+  uint16_t DCMI_VerticalStartLine;
 
-  template<typename _Tp>
-    struct is_nothrow_default_constructible
-    : public __and_<is_default_constructible<_Tp>,
-                    __is_nt_default_constructible_impl<_Tp>>::type
-    { };
 
-  template<typename _Tp, typename... _Args>
-    struct __is_nt_constructible_impl
-    : public integral_constant<bool, noexcept(_Tp(declval<_Args>()...))>
-    { };
+  uint16_t DCMI_HorizontalOffsetCount;
 
-  template<typename _Tp, typename _Arg>
-    struct __is_nt_constructible_impl<_Tp, _Arg>
-    : public integral_constant<bool,
-                               noexcept(static_cast<_Tp>(declval<_Arg>()))>
-    { };
 
-  template<typename _Tp>
-    struct __is_nt_constructible_impl<_Tp>
-    : public is_nothrow_default_constructible<_Tp>
-    { };
+  uint16_t DCMI_VerticalLineCount;
 
 
-  template<typename _Tp, typename... _Args>
-    struct is_nothrow_constructible
-    : public __and_<is_constructible<_Tp, _Args...>,
-      __is_nt_constructible_impl<_Tp, _Args...>>::type
-    { };
+  uint16_t DCMI_CaptureCount;
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_nothrow_copy_constructible_impl;
 
-  template<typename _Tp>
-    struct __is_nothrow_copy_constructible_impl<_Tp, false>
-    : public false_type { };
+} DCMI_CROPInitTypeDef;
 
-  template<typename _Tp>
-    struct __is_nothrow_copy_constructible_impl<_Tp, true>
-    : public is_nothrow_constructible<_Tp, const _Tp&>
-    { };
 
 
-  template<typename _Tp>
-    struct is_nothrow_copy_constructible
-    : public __is_nothrow_copy_constructible_impl<_Tp>
-    { };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_nothrow_move_constructible_impl;
+typedef struct
+{
+  uint8_t DCMI_FrameStartCode;
+  uint8_t DCMI_LineStartCode;
+  uint8_t DCMI_LineEndCode;
+  uint8_t DCMI_FrameEndCode;
+} DCMI_CodesInitTypeDef;
+# 114 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_CaptureMode_Continuous ((uint16_t)0x0000)
+
+#define DCMI_CaptureMode_SnapShot ((uint16_t)0x0002)
+
+#define IS_DCMI_CAPTURE_MODE(MODE) (((MODE) == DCMI_CaptureMode_Continuous) || ((MODE) == DCMI_CaptureMode_SnapShot))
+# 128 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_SynchroMode_Hardware ((uint16_t)0x0000)
+
+#define DCMI_SynchroMode_Embedded ((uint16_t)0x0010)
+
+#define IS_DCMI_SYNCHRO(MODE) (((MODE) == DCMI_SynchroMode_Hardware) || ((MODE) == DCMI_SynchroMode_Embedded))
+# 142 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_PCKPolarity_Falling ((uint16_t)0x0000)
+#define DCMI_PCKPolarity_Rising ((uint16_t)0x0020)
+#define IS_DCMI_PCKPOLARITY(POLARITY) (((POLARITY) == DCMI_PCKPolarity_Falling) || ((POLARITY) == DCMI_PCKPolarity_Rising))
+# 154 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_VSPolarity_Low ((uint16_t)0x0000)
+#define DCMI_VSPolarity_High ((uint16_t)0x0080)
+#define IS_DCMI_VSPOLARITY(POLARITY) (((POLARITY) == DCMI_VSPolarity_Low) || ((POLARITY) == DCMI_VSPolarity_High))
+# 166 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_HSPolarity_Low ((uint16_t)0x0000)
+#define DCMI_HSPolarity_High ((uint16_t)0x0040)
+#define IS_DCMI_HSPOLARITY(POLARITY) (((POLARITY) == DCMI_HSPolarity_Low) || ((POLARITY) == DCMI_HSPolarity_High))
+# 178 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_CaptureRate_All_Frame ((uint16_t)0x0000)
+#define DCMI_CaptureRate_1of2_Frame ((uint16_t)0x0100)
+#define DCMI_CaptureRate_1of4_Frame ((uint16_t)0x0200)
+#define IS_DCMI_CAPTURE_RATE(RATE) (((RATE) == DCMI_CaptureRate_All_Frame) || ((RATE) == DCMI_CaptureRate_1of2_Frame) || ((RATE) == DCMI_CaptureRate_1of4_Frame))
+# 192 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_ExtendedDataMode_8b ((uint16_t)0x0000)
+#define DCMI_ExtendedDataMode_10b ((uint16_t)0x0400)
+#define DCMI_ExtendedDataMode_12b ((uint16_t)0x0800)
+#define DCMI_ExtendedDataMode_14b ((uint16_t)0x0C00)
+#define IS_DCMI_EXTENDED_DATA(DATA) (((DATA) == DCMI_ExtendedDataMode_8b) || ((DATA) == DCMI_ExtendedDataMode_10b) || ((DATA) == DCMI_ExtendedDataMode_12b) || ((DATA) == DCMI_ExtendedDataMode_14b))
+# 208 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_IT_FRAME ((uint16_t)0x0001)
+#define DCMI_IT_OVF ((uint16_t)0x0002)
+#define DCMI_IT_ERR ((uint16_t)0x0004)
+#define DCMI_IT_VSYNC ((uint16_t)0x0008)
+#define DCMI_IT_LINE ((uint16_t)0x0010)
+#define IS_DCMI_CONFIG_IT(IT) ((((IT) & (uint16_t)0xFFE0) == 0x0000) && ((IT) != 0x0000))
+#define IS_DCMI_GET_IT(IT) (((IT) == DCMI_IT_FRAME) || ((IT) == DCMI_IT_OVF) || ((IT) == DCMI_IT_ERR) || ((IT) == DCMI_IT_VSYNC) || ((IT) == DCMI_IT_LINE))
+# 230 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define DCMI_FLAG_HSYNC ((uint16_t)0x2001)
+#define DCMI_FLAG_VSYNC ((uint16_t)0x2002)
+#define DCMI_FLAG_FNE ((uint16_t)0x2004)
+
+
+
+#define DCMI_FLAG_FRAMERI ((uint16_t)0x0001)
+#define DCMI_FLAG_OVFRI ((uint16_t)0x0002)
+#define DCMI_FLAG_ERRRI ((uint16_t)0x0004)
+#define DCMI_FLAG_VSYNCRI ((uint16_t)0x0008)
+#define DCMI_FLAG_LINERI ((uint16_t)0x0010)
+
+
+
+#define DCMI_FLAG_FRAMEMI ((uint16_t)0x1001)
+#define DCMI_FLAG_OVFMI ((uint16_t)0x1002)
+#define DCMI_FLAG_ERRMI ((uint16_t)0x1004)
+#define DCMI_FLAG_VSYNCMI ((uint16_t)0x1008)
+#define DCMI_FLAG_LINEMI ((uint16_t)0x1010)
+#define IS_DCMI_GET_FLAG(FLAG) (((FLAG) == DCMI_FLAG_HSYNC) || ((FLAG) == DCMI_FLAG_VSYNC) || ((FLAG) == DCMI_FLAG_FNE) || ((FLAG) == DCMI_FLAG_FRAMERI) || ((FLAG) == DCMI_FLAG_OVFRI) || ((FLAG) == DCMI_FLAG_ERRRI) || ((FLAG) == DCMI_FLAG_VSYNCRI) || ((FLAG) == DCMI_FLAG_LINERI) || ((FLAG) == DCMI_FLAG_FRAMEMI) || ((FLAG) == DCMI_FLAG_OVFMI) || ((FLAG) == DCMI_FLAG_ERRMI) || ((FLAG) == DCMI_FLAG_VSYNCMI) || ((FLAG) == DCMI_FLAG_LINEMI))
+# 263 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+#define IS_DCMI_CLEAR_FLAG(FLAG) ((((FLAG) & (uint16_t)0xFFE0) == 0x0000) && ((FLAG) != 0x0000))
+# 276 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
+void DCMI_DeInit(void);
+
+
+void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct);
+void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct);
+void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct);
+void DCMI_CROPCmd(FunctionalState NewState);
+void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct);
+void DCMI_JPEGCmd(FunctionalState NewState);
+
+
+void DCMI_Cmd(FunctionalState NewState);
+void DCMI_CaptureCmd(FunctionalState NewState);
+uint32_t DCMI_ReadData(void);
+
+
+void DCMI_ITConfig(uint16_t DCMI_IT, FunctionalState NewState);
+FlagStatus DCMI_GetFlagStatus(uint16_t DCMI_FLAG);
+void DCMI_ClearFlag(uint16_t DCMI_FLAG);
+ITStatus DCMI_GetITStatus(uint16_t DCMI_IT);
+void DCMI_ClearITPendingBit(uint16_t DCMI_IT);
 
-  template<typename _Tp>
-    struct __is_nothrow_move_constructible_impl<_Tp, false>
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_nothrow_move_constructible_impl<_Tp, true>
-    : public is_nothrow_constructible<_Tp, _Tp&&>
-    { };
+}
+# 35 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define __STM32F4xx_DMA_H 
 
 
-  template<typename _Tp>
-    struct is_nothrow_move_constructible
-    : public __is_nothrow_move_constructible_impl<_Tp>
-    { };
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+typedef struct
+{
+  uint32_t DMA_Channel;
 
-  template<typename _Tp, typename _Up>
-    class __is_assignable_helper
-    {
-      template<typename _Tp1, typename _Up1,
-        typename = decltype(declval<_Tp1>() = declval<_Up1>())>
- static true_type
- __test(int);
 
-      template<typename, typename>
- static false_type
- __test(...);
+  uint32_t DMA_PeripheralBaseAddr;
 
-    public:
-      typedef decltype(__test<_Tp, _Up>(0)) type;
-    };
+  uint32_t DMA_Memory0BaseAddr;
 
 
-  template<typename _Tp, typename _Up>
-    struct is_assignable
-      : public __is_assignable_helper<_Tp, _Up>::type
-    { };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_copy_assignable_impl;
+  uint32_t DMA_DIR;
 
-  template<typename _Tp>
-    struct __is_copy_assignable_impl<_Tp, false>
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_copy_assignable_impl<_Tp, true>
-    : public is_assignable<_Tp&, const _Tp&>
-    { };
 
+  uint32_t DMA_BufferSize;
 
-  template<typename _Tp>
-    struct is_copy_assignable
-    : public __is_copy_assignable_impl<_Tp>
-    { };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_move_assignable_impl;
 
-  template<typename _Tp>
-    struct __is_move_assignable_impl<_Tp, false>
-    : public false_type { };
+  uint32_t DMA_PeripheralInc;
 
-  template<typename _Tp>
-    struct __is_move_assignable_impl<_Tp, true>
-    : public is_assignable<_Tp&, _Tp&&>
-    { };
 
+  uint32_t DMA_MemoryInc;
 
-  template<typename _Tp>
-    struct is_move_assignable
-    : public __is_move_assignable_impl<_Tp>
-    { };
 
-  template<typename _Tp, typename _Up>
-    struct __is_nt_assignable_impl
-    : public integral_constant<bool, noexcept(declval<_Tp>() = declval<_Up>())>
-    { };
+  uint32_t DMA_PeripheralDataSize;
 
 
-  template<typename _Tp, typename _Up>
-    struct is_nothrow_assignable
-    : public __and_<is_assignable<_Tp, _Up>,
-      __is_nt_assignable_impl<_Tp, _Up>>::type
-    { };
+  uint32_t DMA_MemoryDataSize;
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_nt_copy_assignable_impl;
 
-  template<typename _Tp>
-    struct __is_nt_copy_assignable_impl<_Tp, false>
-    : public false_type { };
+  uint32_t DMA_Mode;
 
-  template<typename _Tp>
-    struct __is_nt_copy_assignable_impl<_Tp, true>
-    : public is_nothrow_assignable<_Tp&, const _Tp&>
-    { };
 
 
-  template<typename _Tp>
-    struct is_nothrow_copy_assignable
-    : public __is_nt_copy_assignable_impl<_Tp>
-    { };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __is_nt_move_assignable_impl;
+  uint32_t DMA_Priority;
 
-  template<typename _Tp>
-    struct __is_nt_move_assignable_impl<_Tp, false>
-    : public false_type { };
 
-  template<typename _Tp>
-    struct __is_nt_move_assignable_impl<_Tp, true>
-    : public is_nothrow_assignable<_Tp&, _Tp&&>
-    { };
+  uint32_t DMA_FIFOMode;
 
 
-  template<typename _Tp>
-    struct is_nothrow_move_assignable
-    : public __is_nt_move_assignable_impl<_Tp>
-    { };
-# 1286 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp>
-    struct is_trivially_destructible
-    : public __and_<is_destructible<_Tp>, integral_constant<bool,
-         __has_trivial_destructor(_Tp)>>::type
-    { };
 
 
-  template<typename _Tp>
-    struct has_trivial_default_constructor
-    : public integral_constant<bool, __has_trivial_constructor(_Tp)>
-    { };
+  uint32_t DMA_FIFOThreshold;
 
 
-  template<typename _Tp>
-    struct has_trivial_copy_constructor
-    : public integral_constant<bool, __has_trivial_copy(_Tp)>
-    { };
+  uint32_t DMA_MemoryBurst;
 
 
-  template<typename _Tp>
-    struct has_trivial_copy_assign
-    : public integral_constant<bool, __has_trivial_assign(_Tp)>
-    { };
 
 
-  template<typename _Tp>
-    struct has_virtual_destructor
-    : public integral_constant<bool, __has_virtual_destructor(_Tp)>
-    { };
+  uint32_t DMA_PeripheralBurst;
 
 
 
+}DMA_InitTypeDef;
 
 
-  template<typename _Tp>
-    struct alignment_of
-    : public integral_constant<std::size_t, __alignof__(_Tp)> { };
 
 
-  template<typename>
-    struct rank
-    : public integral_constant<std::size_t, 0> { };
 
-  template<typename _Tp, std::size_t _Size>
-    struct rank<_Tp[_Size]>
-    : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
 
-  template<typename _Tp>
-    struct rank<_Tp[]>
-    : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
 
+#define IS_DMA_ALL_PERIPH(PERIPH) (((PERIPH) == DMA1_Stream0) || ((PERIPH) == DMA1_Stream1) || ((PERIPH) == DMA1_Stream2) || ((PERIPH) == DMA1_Stream3) || ((PERIPH) == DMA1_Stream4) || ((PERIPH) == DMA1_Stream5) || ((PERIPH) == DMA1_Stream6) || ((PERIPH) == DMA1_Stream7) || ((PERIPH) == DMA2_Stream0) || ((PERIPH) == DMA2_Stream1) || ((PERIPH) == DMA2_Stream2) || ((PERIPH) == DMA2_Stream3) || ((PERIPH) == DMA2_Stream4) || ((PERIPH) == DMA2_Stream5) || ((PERIPH) == DMA2_Stream6) || ((PERIPH) == DMA2_Stream7))
+# 135 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define IS_DMA_ALL_CONTROLLER(CONTROLLER) (((CONTROLLER) == DMA1) || ((CONTROLLER) == DMA2))
 
-  template<typename, unsigned _Uint>
-    struct extent
-    : public integral_constant<std::size_t, 0> { };
 
-  template<typename _Tp, unsigned _Uint, std::size_t _Size>
-    struct extent<_Tp[_Size], _Uint>
-    : public integral_constant<std::size_t,
-          _Uint == 0 ? _Size : extent<_Tp,
-          _Uint - 1>::value>
-    { };
 
-  template<typename _Tp, unsigned _Uint>
-    struct extent<_Tp[], _Uint>
-    : public integral_constant<std::size_t,
-          _Uint == 0 ? 0 : extent<_Tp,
-             _Uint - 1>::value>
-    { };
 
 
+#define DMA_Channel_0 ((uint32_t)0x00000000)
+#define DMA_Channel_1 ((uint32_t)0x02000000)
+#define DMA_Channel_2 ((uint32_t)0x04000000)
+#define DMA_Channel_3 ((uint32_t)0x06000000)
+#define DMA_Channel_4 ((uint32_t)0x08000000)
+#define DMA_Channel_5 ((uint32_t)0x0A000000)
+#define DMA_Channel_6 ((uint32_t)0x0C000000)
+#define DMA_Channel_7 ((uint32_t)0x0E000000)
 
+#define IS_DMA_CHANNEL(CHANNEL) (((CHANNEL) == DMA_Channel_0) || ((CHANNEL) == DMA_Channel_1) || ((CHANNEL) == DMA_Channel_2) || ((CHANNEL) == DMA_Channel_3) || ((CHANNEL) == DMA_Channel_4) || ((CHANNEL) == DMA_Channel_5) || ((CHANNEL) == DMA_Channel_6) || ((CHANNEL) == DMA_Channel_7))
+# 166 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_DIR_PeripheralToMemory ((uint32_t)0x00000000)
+#define DMA_DIR_MemoryToPeripheral ((uint32_t)0x00000040)
+#define DMA_DIR_MemoryToMemory ((uint32_t)0x00000080)
 
+#define IS_DMA_DIRECTION(DIRECTION) (((DIRECTION) == DMA_DIR_PeripheralToMemory ) || ((DIRECTION) == DMA_DIR_MemoryToPeripheral) || ((DIRECTION) == DMA_DIR_MemoryToMemory))
+# 181 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define IS_DMA_BUFFER_SIZE(SIZE) (((SIZE) >= 0x1) && ((SIZE) < 0x10000))
+# 190 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_PeripheralInc_Enable ((uint32_t)0x00000200)
+#define DMA_PeripheralInc_Disable ((uint32_t)0x00000000)
 
-  template<typename, typename>
-    struct is_same
-    : public false_type { };
+#define IS_DMA_PERIPHERAL_INC_STATE(STATE) (((STATE) == DMA_PeripheralInc_Enable) || ((STATE) == DMA_PeripheralInc_Disable))
+# 203 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_MemoryInc_Enable ((uint32_t)0x00000400)
+#define DMA_MemoryInc_Disable ((uint32_t)0x00000000)
 
-  template<typename _Tp>
-    struct is_same<_Tp, _Tp>
-    : public true_type { };
+#define IS_DMA_MEMORY_INC_STATE(STATE) (((STATE) == DMA_MemoryInc_Enable) || ((STATE) == DMA_MemoryInc_Disable))
+# 216 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_PeripheralDataSize_Byte ((uint32_t)0x00000000)
+#define DMA_PeripheralDataSize_HalfWord ((uint32_t)0x00000800)
+#define DMA_PeripheralDataSize_Word ((uint32_t)0x00001000)
 
+#define IS_DMA_PERIPHERAL_DATA_SIZE(SIZE) (((SIZE) == DMA_PeripheralDataSize_Byte) || ((SIZE) == DMA_PeripheralDataSize_HalfWord) || ((SIZE) == DMA_PeripheralDataSize_Word))
+# 231 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_MemoryDataSize_Byte ((uint32_t)0x00000000)
+#define DMA_MemoryDataSize_HalfWord ((uint32_t)0x00002000)
+#define DMA_MemoryDataSize_Word ((uint32_t)0x00004000)
 
-  template<typename _Base, typename _Derived>
-    struct is_base_of
-    : public integral_constant<bool, __is_base_of(_Base, _Derived)>
-    { };
+#define IS_DMA_MEMORY_DATA_SIZE(SIZE) (((SIZE) == DMA_MemoryDataSize_Byte) || ((SIZE) == DMA_MemoryDataSize_HalfWord) || ((SIZE) == DMA_MemoryDataSize_Word ))
+# 246 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_Mode_Normal ((uint32_t)0x00000000)
+#define DMA_Mode_Circular ((uint32_t)0x00000100)
 
-  template<typename _From, typename _To,
-           bool = __or_<is_void<_From>, is_function<_To>,
-                        is_array<_To>>::value>
-    struct __is_convertible_helper
-    { typedef typename is_void<_To>::type type; };
+#define IS_DMA_MODE(MODE) (((MODE) == DMA_Mode_Normal ) || ((MODE) == DMA_Mode_Circular))
+# 259 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_Priority_Low ((uint32_t)0x00000000)
+#define DMA_Priority_Medium ((uint32_t)0x00010000)
+#define DMA_Priority_High ((uint32_t)0x00020000)
+#define DMA_Priority_VeryHigh ((uint32_t)0x00030000)
 
-  template<typename _From, typename _To>
-    class __is_convertible_helper<_From, _To, false>
-    {
-       template<typename _To1>
- static void __test_aux(_To1);
+#define IS_DMA_PRIORITY(PRIORITY) (((PRIORITY) == DMA_Priority_Low ) || ((PRIORITY) == DMA_Priority_Medium) || ((PRIORITY) == DMA_Priority_High) || ((PRIORITY) == DMA_Priority_VeryHigh))
+# 276 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_FIFOMode_Disable ((uint32_t)0x00000000)
+#define DMA_FIFOMode_Enable ((uint32_t)0x00000004)
 
-      template<typename _From1, typename _To1,
-        typename = decltype(__test_aux<_To1>(std::declval<_From1>()))>
- static true_type
- __test(int);
+#define IS_DMA_FIFO_MODE_STATE(STATE) (((STATE) == DMA_FIFOMode_Disable ) || ((STATE) == DMA_FIFOMode_Enable))
+# 289 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_FIFOThreshold_1QuarterFull ((uint32_t)0x00000000)
+#define DMA_FIFOThreshold_HalfFull ((uint32_t)0x00000001)
+#define DMA_FIFOThreshold_3QuartersFull ((uint32_t)0x00000002)
+#define DMA_FIFOThreshold_Full ((uint32_t)0x00000003)
 
-      template<typename, typename>
- static false_type
- __test(...);
+#define IS_DMA_FIFO_THRESHOLD(THRESHOLD) (((THRESHOLD) == DMA_FIFOThreshold_1QuarterFull ) || ((THRESHOLD) == DMA_FIFOThreshold_HalfFull) || ((THRESHOLD) == DMA_FIFOThreshold_3QuartersFull) || ((THRESHOLD) == DMA_FIFOThreshold_Full))
+# 306 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_MemoryBurst_Single ((uint32_t)0x00000000)
+#define DMA_MemoryBurst_INC4 ((uint32_t)0x00800000)
+#define DMA_MemoryBurst_INC8 ((uint32_t)0x01000000)
+#define DMA_MemoryBurst_INC16 ((uint32_t)0x01800000)
 
-    public:
-      typedef decltype(__test<_From, _To>(0)) type;
-    };
+#define IS_DMA_MEMORY_BURST(BURST) (((BURST) == DMA_MemoryBurst_Single) || ((BURST) == DMA_MemoryBurst_INC4) || ((BURST) == DMA_MemoryBurst_INC8) || ((BURST) == DMA_MemoryBurst_INC16))
+# 323 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_PeripheralBurst_Single ((uint32_t)0x00000000)
+#define DMA_PeripheralBurst_INC4 ((uint32_t)0x00200000)
+#define DMA_PeripheralBurst_INC8 ((uint32_t)0x00400000)
+#define DMA_PeripheralBurst_INC16 ((uint32_t)0x00600000)
 
+#define IS_DMA_PERIPHERAL_BURST(BURST) (((BURST) == DMA_PeripheralBurst_Single) || ((BURST) == DMA_PeripheralBurst_INC4) || ((BURST) == DMA_PeripheralBurst_INC8) || ((BURST) == DMA_PeripheralBurst_INC16))
+# 340 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_FIFOStatus_Less1QuarterFull ((uint32_t)0x00000000 << 3)
+#define DMA_FIFOStatus_1QuarterFull ((uint32_t)0x00000001 << 3)
+#define DMA_FIFOStatus_HalfFull ((uint32_t)0x00000002 << 3)
+#define DMA_FIFOStatus_3QuartersFull ((uint32_t)0x00000003 << 3)
+#define DMA_FIFOStatus_Empty ((uint32_t)0x00000004 << 3)
+#define DMA_FIFOStatus_Full ((uint32_t)0x00000005 << 3)
 
+#define IS_DMA_FIFO_STATUS(STATUS) (((STATUS) == DMA_FIFOStatus_Less1QuarterFull ) || ((STATUS) == DMA_FIFOStatus_HalfFull) || ((STATUS) == DMA_FIFOStatus_1QuarterFull) || ((STATUS) == DMA_FIFOStatus_3QuartersFull) || ((STATUS) == DMA_FIFOStatus_Full) || ((STATUS) == DMA_FIFOStatus_Empty))
+# 360 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_FLAG_FEIF0 ((uint32_t)0x10800001)
+#define DMA_FLAG_DMEIF0 ((uint32_t)0x10800004)
+#define DMA_FLAG_TEIF0 ((uint32_t)0x10000008)
+#define DMA_FLAG_HTIF0 ((uint32_t)0x10000010)
+#define DMA_FLAG_TCIF0 ((uint32_t)0x10000020)
+#define DMA_FLAG_FEIF1 ((uint32_t)0x10000040)
+#define DMA_FLAG_DMEIF1 ((uint32_t)0x10000100)
+#define DMA_FLAG_TEIF1 ((uint32_t)0x10000200)
+#define DMA_FLAG_HTIF1 ((uint32_t)0x10000400)
+#define DMA_FLAG_TCIF1 ((uint32_t)0x10000800)
+#define DMA_FLAG_FEIF2 ((uint32_t)0x10010000)
+#define DMA_FLAG_DMEIF2 ((uint32_t)0x10040000)
+#define DMA_FLAG_TEIF2 ((uint32_t)0x10080000)
+#define DMA_FLAG_HTIF2 ((uint32_t)0x10100000)
+#define DMA_FLAG_TCIF2 ((uint32_t)0x10200000)
+#define DMA_FLAG_FEIF3 ((uint32_t)0x10400000)
+#define DMA_FLAG_DMEIF3 ((uint32_t)0x11000000)
+#define DMA_FLAG_TEIF3 ((uint32_t)0x12000000)
+#define DMA_FLAG_HTIF3 ((uint32_t)0x14000000)
+#define DMA_FLAG_TCIF3 ((uint32_t)0x18000000)
+#define DMA_FLAG_FEIF4 ((uint32_t)0x20000001)
+#define DMA_FLAG_DMEIF4 ((uint32_t)0x20000004)
+#define DMA_FLAG_TEIF4 ((uint32_t)0x20000008)
+#define DMA_FLAG_HTIF4 ((uint32_t)0x20000010)
+#define DMA_FLAG_TCIF4 ((uint32_t)0x20000020)
+#define DMA_FLAG_FEIF5 ((uint32_t)0x20000040)
+#define DMA_FLAG_DMEIF5 ((uint32_t)0x20000100)
+#define DMA_FLAG_TEIF5 ((uint32_t)0x20000200)
+#define DMA_FLAG_HTIF5 ((uint32_t)0x20000400)
+#define DMA_FLAG_TCIF5 ((uint32_t)0x20000800)
+#define DMA_FLAG_FEIF6 ((uint32_t)0x20010000)
+#define DMA_FLAG_DMEIF6 ((uint32_t)0x20040000)
+#define DMA_FLAG_TEIF6 ((uint32_t)0x20080000)
+#define DMA_FLAG_HTIF6 ((uint32_t)0x20100000)
+#define DMA_FLAG_TCIF6 ((uint32_t)0x20200000)
+#define DMA_FLAG_FEIF7 ((uint32_t)0x20400000)
+#define DMA_FLAG_DMEIF7 ((uint32_t)0x21000000)
+#define DMA_FLAG_TEIF7 ((uint32_t)0x22000000)
+#define DMA_FLAG_HTIF7 ((uint32_t)0x24000000)
+#define DMA_FLAG_TCIF7 ((uint32_t)0x28000000)
 
-  template<typename _From, typename _To>
-    struct is_convertible
-    : public __is_convertible_helper<_From, _To>::type
-    { };
+#define IS_DMA_CLEAR_FLAG(FLAG) ((((FLAG) & 0x30000000) != 0x30000000) && (((FLAG) & 0x30000000) != 0) && (((FLAG) & 0xC002F082) == 0x00) && ((FLAG) != 0x00))
 
 
+#define IS_DMA_GET_FLAG(FLAG) (((FLAG) == DMA_FLAG_TCIF0) || ((FLAG) == DMA_FLAG_HTIF0) || ((FLAG) == DMA_FLAG_TEIF0) || ((FLAG) == DMA_FLAG_DMEIF0) || ((FLAG) == DMA_FLAG_FEIF0) || ((FLAG) == DMA_FLAG_TCIF1) || ((FLAG) == DMA_FLAG_HTIF1) || ((FLAG) == DMA_FLAG_TEIF1) || ((FLAG) == DMA_FLAG_DMEIF1) || ((FLAG) == DMA_FLAG_FEIF1) || ((FLAG) == DMA_FLAG_TCIF2) || ((FLAG) == DMA_FLAG_HTIF2) || ((FLAG) == DMA_FLAG_TEIF2) || ((FLAG) == DMA_FLAG_DMEIF2) || ((FLAG) == DMA_FLAG_FEIF2) || ((FLAG) == DMA_FLAG_TCIF3) || ((FLAG) == DMA_FLAG_HTIF3) || ((FLAG) == DMA_FLAG_TEIF3) || ((FLAG) == DMA_FLAG_DMEIF3) || ((FLAG) == DMA_FLAG_FEIF3) || ((FLAG) == DMA_FLAG_TCIF4) || ((FLAG) == DMA_FLAG_HTIF4) || ((FLAG) == DMA_FLAG_TEIF4) || ((FLAG) == DMA_FLAG_DMEIF4) || ((FLAG) == DMA_FLAG_FEIF4) || ((FLAG) == DMA_FLAG_TCIF5) || ((FLAG) == DMA_FLAG_HTIF5) || ((FLAG) == DMA_FLAG_TEIF5) || ((FLAG) == DMA_FLAG_DMEIF5) || ((FLAG) == DMA_FLAG_FEIF5) || ((FLAG) == DMA_FLAG_TCIF6) || ((FLAG) == DMA_FLAG_HTIF6) || ((FLAG) == DMA_FLAG_TEIF6) || ((FLAG) == DMA_FLAG_DMEIF6) || ((FLAG) == DMA_FLAG_FEIF6) || ((FLAG) == DMA_FLAG_TCIF7) || ((FLAG) == DMA_FLAG_HTIF7) || ((FLAG) == DMA_FLAG_TEIF7) || ((FLAG) == DMA_FLAG_DMEIF7) || ((FLAG) == DMA_FLAG_FEIF7))
+# 432 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_IT_TC ((uint32_t)0x00000010)
+#define DMA_IT_HT ((uint32_t)0x00000008)
+#define DMA_IT_TE ((uint32_t)0x00000004)
+#define DMA_IT_DME ((uint32_t)0x00000002)
+#define DMA_IT_FE ((uint32_t)0x00000080)
 
+#define IS_DMA_CONFIG_IT(IT) ((((IT) & 0xFFFFFF61) == 0x00) && ((IT) != 0x00))
+# 447 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_IT_FEIF0 ((uint32_t)0x90000001)
+#define DMA_IT_DMEIF0 ((uint32_t)0x10001004)
+#define DMA_IT_TEIF0 ((uint32_t)0x10002008)
+#define DMA_IT_HTIF0 ((uint32_t)0x10004010)
+#define DMA_IT_TCIF0 ((uint32_t)0x10008020)
+#define DMA_IT_FEIF1 ((uint32_t)0x90000040)
+#define DMA_IT_DMEIF1 ((uint32_t)0x10001100)
+#define DMA_IT_TEIF1 ((uint32_t)0x10002200)
+#define DMA_IT_HTIF1 ((uint32_t)0x10004400)
+#define DMA_IT_TCIF1 ((uint32_t)0x10008800)
+#define DMA_IT_FEIF2 ((uint32_t)0x90010000)
+#define DMA_IT_DMEIF2 ((uint32_t)0x10041000)
+#define DMA_IT_TEIF2 ((uint32_t)0x10082000)
+#define DMA_IT_HTIF2 ((uint32_t)0x10104000)
+#define DMA_IT_TCIF2 ((uint32_t)0x10208000)
+#define DMA_IT_FEIF3 ((uint32_t)0x90400000)
+#define DMA_IT_DMEIF3 ((uint32_t)0x11001000)
+#define DMA_IT_TEIF3 ((uint32_t)0x12002000)
+#define DMA_IT_HTIF3 ((uint32_t)0x14004000)
+#define DMA_IT_TCIF3 ((uint32_t)0x18008000)
+#define DMA_IT_FEIF4 ((uint32_t)0xA0000001)
+#define DMA_IT_DMEIF4 ((uint32_t)0x20001004)
+#define DMA_IT_TEIF4 ((uint32_t)0x20002008)
+#define DMA_IT_HTIF4 ((uint32_t)0x20004010)
+#define DMA_IT_TCIF4 ((uint32_t)0x20008020)
+#define DMA_IT_FEIF5 ((uint32_t)0xA0000040)
+#define DMA_IT_DMEIF5 ((uint32_t)0x20001100)
+#define DMA_IT_TEIF5 ((uint32_t)0x20002200)
+#define DMA_IT_HTIF5 ((uint32_t)0x20004400)
+#define DMA_IT_TCIF5 ((uint32_t)0x20008800)
+#define DMA_IT_FEIF6 ((uint32_t)0xA0010000)
+#define DMA_IT_DMEIF6 ((uint32_t)0x20041000)
+#define DMA_IT_TEIF6 ((uint32_t)0x20082000)
+#define DMA_IT_HTIF6 ((uint32_t)0x20104000)
+#define DMA_IT_TCIF6 ((uint32_t)0x20208000)
+#define DMA_IT_FEIF7 ((uint32_t)0xA0400000)
+#define DMA_IT_DMEIF7 ((uint32_t)0x21001000)
+#define DMA_IT_TEIF7 ((uint32_t)0x22002000)
+#define DMA_IT_HTIF7 ((uint32_t)0x24004000)
+#define DMA_IT_TCIF7 ((uint32_t)0x28008000)
 
+#define IS_DMA_CLEAR_IT(IT) ((((IT) & 0x30000000) != 0x30000000) && (((IT) & 0x30000000) != 0) && ((IT) != 0x00) && (((IT) & 0x40820082) == 0x00))
 
-  template<typename _Tp>
-    struct remove_const
-    { typedef _Tp type; };
 
-  template<typename _Tp>
-    struct remove_const<_Tp const>
-    { typedef _Tp type; };
 
+#define IS_DMA_GET_IT(IT) (((IT) == DMA_IT_TCIF0) || ((IT) == DMA_IT_HTIF0) || ((IT) == DMA_IT_TEIF0) || ((IT) == DMA_IT_DMEIF0) || ((IT) == DMA_IT_FEIF0) || ((IT) == DMA_IT_TCIF1) || ((IT) == DMA_IT_HTIF1) || ((IT) == DMA_IT_TEIF1) || ((IT) == DMA_IT_DMEIF1)|| ((IT) == DMA_IT_FEIF1) || ((IT) == DMA_IT_TCIF2) || ((IT) == DMA_IT_HTIF2) || ((IT) == DMA_IT_TEIF2) || ((IT) == DMA_IT_DMEIF2) || ((IT) == DMA_IT_FEIF2) || ((IT) == DMA_IT_TCIF3) || ((IT) == DMA_IT_HTIF3) || ((IT) == DMA_IT_TEIF3) || ((IT) == DMA_IT_DMEIF3)|| ((IT) == DMA_IT_FEIF3) || ((IT) == DMA_IT_TCIF4) || ((IT) == DMA_IT_HTIF4) || ((IT) == DMA_IT_TEIF4) || ((IT) == DMA_IT_DMEIF4) || ((IT) == DMA_IT_FEIF4) || ((IT) == DMA_IT_TCIF5) || ((IT) == DMA_IT_HTIF5) || ((IT) == DMA_IT_TEIF5) || ((IT) == DMA_IT_DMEIF5)|| ((IT) == DMA_IT_FEIF5) || ((IT) == DMA_IT_TCIF6) || ((IT) == DMA_IT_HTIF6) || ((IT) == DMA_IT_TEIF6) || ((IT) == DMA_IT_DMEIF6) || ((IT) == DMA_IT_FEIF6) || ((IT) == DMA_IT_TCIF7) || ((IT) == DMA_IT_HTIF7) || ((IT) == DMA_IT_TEIF7) || ((IT) == DMA_IT_DMEIF7)|| ((IT) == DMA_IT_FEIF7))
+# 520 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_PINCOS_Psize ((uint32_t)0x00000000)
+#define DMA_PINCOS_WordAligned ((uint32_t)0x00008000)
 
-  template<typename _Tp>
-    struct remove_volatile
-    { typedef _Tp type; };
+#define IS_DMA_PINCOS_SIZE(SIZE) (((SIZE) == DMA_PINCOS_Psize) || ((SIZE) == DMA_PINCOS_WordAligned))
+# 533 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_FlowCtrl_Memory ((uint32_t)0x00000000)
+#define DMA_FlowCtrl_Peripheral ((uint32_t)0x00000020)
 
-  template<typename _Tp>
-    struct remove_volatile<_Tp volatile>
-    { typedef _Tp type; };
+#define IS_DMA_FLOW_CTRL(CTRL) (((CTRL) == DMA_FlowCtrl_Memory) || ((CTRL) == DMA_FlowCtrl_Peripheral))
+# 546 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+#define DMA_Memory_0 ((uint32_t)0x00000000)
+#define DMA_Memory_1 ((uint32_t)0x00080000)
 
+#define IS_DMA_CURRENT_MEM(MEM) (((MEM) == DMA_Memory_0) || ((MEM) == DMA_Memory_1))
+# 562 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
+void DMA_DeInit(DMA_Stream_TypeDef* DMAy_Streamx);
 
-  template<typename _Tp>
-    struct remove_cv
-    {
-      typedef typename
-      remove_const<typename remove_volatile<_Tp>::type>::type type;
-    };
 
+void DMA_Init(DMA_Stream_TypeDef* DMAy_Streamx, DMA_InitTypeDef* DMA_InitStruct);
+void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct);
+void DMA_Cmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState);
 
-  template<typename _Tp>
-    struct add_const
-    { typedef _Tp const type; };
 
+void DMA_PeriphIncOffsetSizeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_Pincos);
+void DMA_FlowControllerConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FlowCtrl);
 
-  template<typename _Tp>
-    struct add_volatile
-    { typedef _Tp volatile type; };
 
+void DMA_SetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx, uint16_t Counter);
+uint16_t DMA_GetCurrDataCounter(DMA_Stream_TypeDef* DMAy_Streamx);
 
-  template<typename _Tp>
-    struct add_cv
-    {
-      typedef typename
-      add_const<typename add_volatile<_Tp>::type>::type type;
-    };
-# 1482 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp>
-    struct remove_reference
-    { typedef _Tp type; };
 
-  template<typename _Tp>
-    struct remove_reference<_Tp&>
-    { typedef _Tp type; };
+void DMA_DoubleBufferModeConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t Memory1BaseAddr,
+                                uint32_t DMA_CurrentMemory);
+void DMA_DoubleBufferModeCmd(DMA_Stream_TypeDef* DMAy_Streamx, FunctionalState NewState);
+void DMA_MemoryTargetConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t MemoryBaseAddr,
+                            uint32_t DMA_MemoryTarget);
+uint32_t DMA_GetCurrentMemoryTarget(DMA_Stream_TypeDef* DMAy_Streamx);
 
-  template<typename _Tp>
-    struct remove_reference<_Tp&&>
-    { typedef _Tp type; };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __add_lvalue_reference_helper
-    { typedef _Tp type; };
+FunctionalState DMA_GetCmdStatus(DMA_Stream_TypeDef* DMAy_Streamx);
+uint32_t DMA_GetFIFOStatus(DMA_Stream_TypeDef* DMAy_Streamx);
+FlagStatus DMA_GetFlagStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
+void DMA_ClearFlag(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_FLAG);
+void DMA_ITConfig(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT, FunctionalState NewState);
+ITStatus DMA_GetITStatus(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
+void DMA_ClearITPendingBit(DMA_Stream_TypeDef* DMAy_Streamx, uint32_t DMA_IT);
 
-  template<typename _Tp>
-    struct __add_lvalue_reference_helper<_Tp, true>
-    { typedef _Tp& type; };
 
+}
+# 36 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_exti.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_exti.h"
+#define __STM32F4xx_EXTI_H 
 
-  template<typename _Tp>
-    struct add_lvalue_reference
-    : public __add_lvalue_reference_helper<_Tp>
-    { };
 
-  template<typename _Tp, bool = __is_referenceable<_Tp>::value>
-    struct __add_rvalue_reference_helper
-    { typedef _Tp type; };
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_exti.h"
+typedef enum
+{
+  EXTI_Mode_Interrupt = 0x00,
+  EXTI_Mode_Event = 0x04
+}EXTIMode_TypeDef;
 
-  template<typename _Tp>
-    struct __add_rvalue_reference_helper<_Tp, true>
-    { typedef _Tp&& type; };
+#define IS_EXTI_MODE(MODE) (((MODE) == EXTI_Mode_Interrupt) || ((MODE) == EXTI_Mode_Event))
 
 
-  template<typename _Tp>
-    struct add_rvalue_reference
-    : public __add_rvalue_reference_helper<_Tp>
-    { };
-# 1539 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Unqualified, bool _IsConst, bool _IsVol>
-    struct __cv_selector;
 
-  template<typename _Unqualified>
-    struct __cv_selector<_Unqualified, false, false>
-    { typedef _Unqualified __type; };
 
-  template<typename _Unqualified>
-    struct __cv_selector<_Unqualified, false, true>
-    { typedef volatile _Unqualified __type; };
 
-  template<typename _Unqualified>
-    struct __cv_selector<_Unqualified, true, false>
-    { typedef const _Unqualified __type; };
+typedef enum
+{
+  EXTI_Trigger_Rising = 0x08,
+  EXTI_Trigger_Falling = 0x0C,
+  EXTI_Trigger_Rising_Falling = 0x10
+}EXTITrigger_TypeDef;
 
-  template<typename _Unqualified>
-    struct __cv_selector<_Unqualified, true, true>
-    { typedef const volatile _Unqualified __type; };
+#define IS_EXTI_TRIGGER(TRIGGER) (((TRIGGER) == EXTI_Trigger_Rising) || ((TRIGGER) == EXTI_Trigger_Falling) || ((TRIGGER) == EXTI_Trigger_Rising_Falling))
 
-  template<typename _Qualified, typename _Unqualified,
-    bool _IsConst = is_const<_Qualified>::value,
-    bool _IsVol = is_volatile<_Qualified>::value>
-    class __match_cv_qualifiers
-    {
-      typedef __cv_selector<_Unqualified, _IsConst, _IsVol> __match;
 
-    public:
-      typedef typename __match::__type __type;
-    };
 
 
-  template<typename _Tp>
-    struct __make_unsigned
-    { typedef _Tp __type; };
 
-  template<>
-    struct __make_unsigned<char>
-    { typedef unsigned char __type; };
 
-  template<>
-    struct __make_unsigned<signed char>
-    { typedef unsigned char __type; };
+typedef struct
+{
+  uint32_t EXTI_Line;
 
-  template<>
-    struct __make_unsigned<short>
-    { typedef unsigned short __type; };
 
-  template<>
-    struct __make_unsigned<int>
-    { typedef unsigned int __type; };
+  EXTIMode_TypeDef EXTI_Mode;
 
-  template<>
-    struct __make_unsigned<long>
-    { typedef unsigned long __type; };
 
-  template<>
-    struct __make_unsigned<long long>
-    { typedef unsigned long long __type; };
-# 1611 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp,
-    bool _IsInt = is_integral<_Tp>::value,
-    bool _IsEnum = is_enum<_Tp>::value>
-    class __make_unsigned_selector;
+  EXTITrigger_TypeDef EXTI_Trigger;
 
-  template<typename _Tp>
-    class __make_unsigned_selector<_Tp, true, false>
-    {
-      typedef __make_unsigned<typename remove_cv<_Tp>::type> __unsignedt;
-      typedef typename __unsignedt::__type __unsigned_type;
-      typedef __match_cv_qualifiers<_Tp, __unsigned_type> __cv_unsigned;
 
-    public:
-      typedef typename __cv_unsigned::__type __type;
-    };
+  FunctionalState EXTI_LineCmd;
+
+}EXTI_InitTypeDef;
+# 105 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_exti.h"
+#define EXTI_Line0 ((uint32_t)0x00001)
+#define EXTI_Line1 ((uint32_t)0x00002)
+#define EXTI_Line2 ((uint32_t)0x00004)
+#define EXTI_Line3 ((uint32_t)0x00008)
+#define EXTI_Line4 ((uint32_t)0x00010)
+#define EXTI_Line5 ((uint32_t)0x00020)
+#define EXTI_Line6 ((uint32_t)0x00040)
+#define EXTI_Line7 ((uint32_t)0x00080)
+#define EXTI_Line8 ((uint32_t)0x00100)
+#define EXTI_Line9 ((uint32_t)0x00200)
+#define EXTI_Line10 ((uint32_t)0x00400)
+#define EXTI_Line11 ((uint32_t)0x00800)
+#define EXTI_Line12 ((uint32_t)0x01000)
+#define EXTI_Line13 ((uint32_t)0x02000)
+#define EXTI_Line14 ((uint32_t)0x04000)
+#define EXTI_Line15 ((uint32_t)0x08000)
+#define EXTI_Line16 ((uint32_t)0x10000)
+#define EXTI_Line17 ((uint32_t)0x20000)
+#define EXTI_Line18 ((uint32_t)0x40000)
+#define EXTI_Line19 ((uint32_t)0x80000)
+#define EXTI_Line20 ((uint32_t)0x00100000)
+#define EXTI_Line21 ((uint32_t)0x00200000)
+#define EXTI_Line22 ((uint32_t)0x00400000)
+
+#define IS_EXTI_LINE(LINE) ((((LINE) & (uint32_t)0xFF800000) == 0x00) && ((LINE) != (uint16_t)0x00))
+
+#define IS_GET_EXTI_LINE(LINE) (((LINE) == EXTI_Line0) || ((LINE) == EXTI_Line1) || ((LINE) == EXTI_Line2) || ((LINE) == EXTI_Line3) || ((LINE) == EXTI_Line4) || ((LINE) == EXTI_Line5) || ((LINE) == EXTI_Line6) || ((LINE) == EXTI_Line7) || ((LINE) == EXTI_Line8) || ((LINE) == EXTI_Line9) || ((LINE) == EXTI_Line10) || ((LINE) == EXTI_Line11) || ((LINE) == EXTI_Line12) || ((LINE) == EXTI_Line13) || ((LINE) == EXTI_Line14) || ((LINE) == EXTI_Line15) || ((LINE) == EXTI_Line16) || ((LINE) == EXTI_Line17) || ((LINE) == EXTI_Line18) || ((LINE) == EXTI_Line19) || ((LINE) == EXTI_Line20) || ((LINE) == EXTI_Line21) || ((LINE) == EXTI_Line22))
+# 156 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_exti.h"
+void EXTI_DeInit(void);
+
+
+void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct);
+void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);
+void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line);
+
+
+FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line);
+void EXTI_ClearFlag(uint32_t EXTI_Line);
+ITStatus EXTI_GetITStatus(uint32_t EXTI_Line);
+void EXTI_ClearITPendingBit(uint32_t EXTI_Line);
 
-  template<typename _Tp>
-    class __make_unsigned_selector<_Tp, false, true>
-    {
 
-      typedef unsigned char __smallest;
-      static const bool __b0 = sizeof(_Tp) <= sizeof(__smallest);
-      static const bool __b1 = sizeof(_Tp) <= sizeof(unsigned short);
-      static const bool __b2 = sizeof(_Tp) <= sizeof(unsigned int);
-      typedef conditional<__b2, unsigned int, unsigned long> __cond2;
-      typedef typename __cond2::type __cond2_type;
-      typedef conditional<__b1, unsigned short, __cond2_type> __cond1;
-      typedef typename __cond1::type __cond1_type;
+}
+# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define __STM32F4xx_FLASH_H 
 
-    public:
-      typedef typename conditional<__b0, __smallest, __cond1_type>::type __type;
-    };
 
+ extern "C" {
+# 52 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+typedef enum
+{
+  FLASH_BUSY = 1,
+  FLASH_ERROR_PGS,
+  FLASH_ERROR_PGP,
+  FLASH_ERROR_PGA,
+  FLASH_ERROR_WRP,
+  FLASH_ERROR_PROGRAM,
+  FLASH_ERROR_OPERATION,
+  FLASH_COMPLETE
+}FLASH_Status;
+# 73 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define FLASH_Latency_0 ((uint8_t)0x0000)
+#define FLASH_Latency_1 ((uint8_t)0x0001)
+#define FLASH_Latency_2 ((uint8_t)0x0002)
+#define FLASH_Latency_3 ((uint8_t)0x0003)
+#define FLASH_Latency_4 ((uint8_t)0x0004)
+#define FLASH_Latency_5 ((uint8_t)0x0005)
+#define FLASH_Latency_6 ((uint8_t)0x0006)
+#define FLASH_Latency_7 ((uint8_t)0x0007)
 
+#define IS_FLASH_LATENCY(LATENCY) (((LATENCY) == FLASH_Latency_0) || ((LATENCY) == FLASH_Latency_1) || ((LATENCY) == FLASH_Latency_2) || ((LATENCY) == FLASH_Latency_3) || ((LATENCY) == FLASH_Latency_4) || ((LATENCY) == FLASH_Latency_5) || ((LATENCY) == FLASH_Latency_6) || ((LATENCY) == FLASH_Latency_7))
+# 98 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define VoltageRange_1 ((uint8_t)0x00)
+#define VoltageRange_2 ((uint8_t)0x01)
+#define VoltageRange_3 ((uint8_t)0x02)
+#define VoltageRange_4 ((uint8_t)0x03)
 
+#define IS_VOLTAGERANGE(RANGE) (((RANGE) == VoltageRange_1) || ((RANGE) == VoltageRange_2) || ((RANGE) == VoltageRange_3) || ((RANGE) == VoltageRange_4))
+# 114 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define FLASH_Sector_0 ((uint16_t)0x0000)
+#define FLASH_Sector_1 ((uint16_t)0x0008)
+#define FLASH_Sector_2 ((uint16_t)0x0010)
+#define FLASH_Sector_3 ((uint16_t)0x0018)
+#define FLASH_Sector_4 ((uint16_t)0x0020)
+#define FLASH_Sector_5 ((uint16_t)0x0028)
+#define FLASH_Sector_6 ((uint16_t)0x0030)
+#define FLASH_Sector_7 ((uint16_t)0x0038)
+#define FLASH_Sector_8 ((uint16_t)0x0040)
+#define FLASH_Sector_9 ((uint16_t)0x0048)
+#define FLASH_Sector_10 ((uint16_t)0x0050)
+#define FLASH_Sector_11 ((uint16_t)0x0058)
+#define FLASH_Sector_12 ((uint16_t)0x0080)
+#define FLASH_Sector_13 ((uint16_t)0x0088)
+#define FLASH_Sector_14 ((uint16_t)0x0090)
+#define FLASH_Sector_15 ((uint16_t)0x0098)
+#define FLASH_Sector_16 ((uint16_t)0x00A0)
+#define FLASH_Sector_17 ((uint16_t)0x00A8)
+#define FLASH_Sector_18 ((uint16_t)0x00B0)
+#define FLASH_Sector_19 ((uint16_t)0x00B8)
+#define FLASH_Sector_20 ((uint16_t)0x00C0)
+#define FLASH_Sector_21 ((uint16_t)0x00C8)
+#define FLASH_Sector_22 ((uint16_t)0x00D0)
+#define FLASH_Sector_23 ((uint16_t)0x00D8)
 
+#define IS_FLASH_SECTOR(SECTOR) (((SECTOR) == FLASH_Sector_0) || ((SECTOR) == FLASH_Sector_1) || ((SECTOR) == FLASH_Sector_2) || ((SECTOR) == FLASH_Sector_3) || ((SECTOR) == FLASH_Sector_4) || ((SECTOR) == FLASH_Sector_5) || ((SECTOR) == FLASH_Sector_6) || ((SECTOR) == FLASH_Sector_7) || ((SECTOR) == FLASH_Sector_8) || ((SECTOR) == FLASH_Sector_9) || ((SECTOR) == FLASH_Sector_10) || ((SECTOR) == FLASH_Sector_11) || ((SECTOR) == FLASH_Sector_12) || ((SECTOR) == FLASH_Sector_13) || ((SECTOR) == FLASH_Sector_14) || ((SECTOR) == FLASH_Sector_15) || ((SECTOR) == FLASH_Sector_16) || ((SECTOR) == FLASH_Sector_17) || ((SECTOR) == FLASH_Sector_18) || ((SECTOR) == FLASH_Sector_19) || ((SECTOR) == FLASH_Sector_20) || ((SECTOR) == FLASH_Sector_21) || ((SECTOR) == FLASH_Sector_22) || ((SECTOR) == FLASH_Sector_23))
+# 152 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define IS_FLASH_ADDRESS(ADDRESS) ((((ADDRESS) >= 0x08000000) && ((ADDRESS) < 0x081FFFFF)) || (((ADDRESS) >= 0x1FFF7800) && ((ADDRESS) < 0x1FFF7A0F)))
+# 161 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define OB_WRP_Sector_0 ((uint32_t)0x00000001)
+#define OB_WRP_Sector_1 ((uint32_t)0x00000002)
+#define OB_WRP_Sector_2 ((uint32_t)0x00000004)
+#define OB_WRP_Sector_3 ((uint32_t)0x00000008)
+#define OB_WRP_Sector_4 ((uint32_t)0x00000010)
+#define OB_WRP_Sector_5 ((uint32_t)0x00000020)
+#define OB_WRP_Sector_6 ((uint32_t)0x00000040)
+#define OB_WRP_Sector_7 ((uint32_t)0x00000080)
+#define OB_WRP_Sector_8 ((uint32_t)0x00000100)
+#define OB_WRP_Sector_9 ((uint32_t)0x00000200)
+#define OB_WRP_Sector_10 ((uint32_t)0x00000400)
+#define OB_WRP_Sector_11 ((uint32_t)0x00000800)
+#define OB_WRP_Sector_12 ((uint32_t)0x00000001)
+#define OB_WRP_Sector_13 ((uint32_t)0x00000002)
+#define OB_WRP_Sector_14 ((uint32_t)0x00000004)
+#define OB_WRP_Sector_15 ((uint32_t)0x00000008)
+#define OB_WRP_Sector_16 ((uint32_t)0x00000010)
+#define OB_WRP_Sector_17 ((uint32_t)0x00000020)
+#define OB_WRP_Sector_18 ((uint32_t)0x00000040)
+#define OB_WRP_Sector_19 ((uint32_t)0x00000080)
+#define OB_WRP_Sector_20 ((uint32_t)0x00000100)
+#define OB_WRP_Sector_21 ((uint32_t)0x00000200)
+#define OB_WRP_Sector_22 ((uint32_t)0x00000400)
+#define OB_WRP_Sector_23 ((uint32_t)0x00000800)
+#define OB_WRP_Sector_All ((uint32_t)0x00000FFF)
 
-  template<typename _Tp>
-    struct make_unsigned
-    { typedef typename __make_unsigned_selector<_Tp>::__type type; };
+#define IS_OB_WRP(SECTOR) ((((SECTOR) & (uint32_t)0xFFFFF000) == 0x00000000) && ((SECTOR) != 0x00000000))
 
 
-  template<>
-    struct make_unsigned<bool>;
 
 
 
-  template<typename _Tp>
-    struct __make_signed
-    { typedef _Tp __type; };
 
-  template<>
-    struct __make_signed<char>
-    { typedef signed char __type; };
 
-  template<>
-    struct __make_signed<unsigned char>
-    { typedef signed char __type; };
+#define OB_RDP_Level_0 ((uint8_t)0xAA)
+#define OB_RDP_Level_1 ((uint8_t)0x55)
 
-  template<>
-    struct __make_signed<unsigned short>
-    { typedef signed short __type; };
 
-  template<>
-    struct __make_signed<unsigned int>
-    { typedef signed int __type; };
+#define IS_OB_RDP(LEVEL) (((LEVEL) == OB_RDP_Level_0)|| ((LEVEL) == OB_RDP_Level_1))
+# 209 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define OB_IWDG_SW ((uint8_t)0x20)
+#define OB_IWDG_HW ((uint8_t)0x00)
+#define IS_OB_IWDG_SOURCE(SOURCE) (((SOURCE) == OB_IWDG_SW) || ((SOURCE) == OB_IWDG_HW))
 
-  template<>
-    struct __make_signed<unsigned long>
-    { typedef signed long __type; };
 
-  template<>
-    struct __make_signed<unsigned long long>
-    { typedef signed long long __type; };
 
 
-  template<>
-    struct __make_signed<wchar_t> : __make_signed<unsigned int>
-    { };
 
 
 
-  template<>
-    struct __make_signed<char16_t> : __make_signed<uint_least16_t>
-    { };
-  template<>
-    struct __make_signed<char32_t> : __make_signed<uint_least32_t>
-    { };
-# 1708 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp,
-    bool _IsInt = is_integral<_Tp>::value,
-    bool _IsEnum = is_enum<_Tp>::value>
-    class __make_signed_selector;
+#define OB_STOP_NoRST ((uint8_t)0x40)
+#define OB_STOP_RST ((uint8_t)0x00)
+#define IS_OB_STOP_SOURCE(SOURCE) (((SOURCE) == OB_STOP_NoRST) || ((SOURCE) == OB_STOP_RST))
+# 230 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define OB_STDBY_NoRST ((uint8_t)0x80)
+#define OB_STDBY_RST ((uint8_t)0x00)
+#define IS_OB_STDBY_SOURCE(SOURCE) (((SOURCE) == OB_STDBY_NoRST) || ((SOURCE) == OB_STDBY_RST))
 
-  template<typename _Tp>
-    class __make_signed_selector<_Tp, true, false>
-    {
-      typedef __make_signed<typename remove_cv<_Tp>::type> __signedt;
-      typedef typename __signedt::__type __signed_type;
-      typedef __match_cv_qualifiers<_Tp, __signed_type> __cv_signed;
 
-    public:
-      typedef typename __cv_signed::__type __type;
-    };
 
-  template<typename _Tp>
-    class __make_signed_selector<_Tp, false, true>
-    {
 
-      typedef signed char __smallest;
-      static const bool __b0 = sizeof(_Tp) <= sizeof(__smallest);
-      static const bool __b1 = sizeof(_Tp) <= sizeof(signed short);
-      static const bool __b2 = sizeof(_Tp) <= sizeof(signed int);
-      typedef conditional<__b2, signed int, signed long> __cond2;
-      typedef typename __cond2::type __cond2_type;
-      typedef conditional<__b1, signed short, __cond2_type> __cond1;
-      typedef typename __cond1::type __cond1_type;
 
-    public:
-      typedef typename conditional<__b0, __smallest, __cond1_type>::type __type;
-    };
 
 
+#define OB_BOR_LEVEL3 ((uint8_t)0x00)
+#define OB_BOR_LEVEL2 ((uint8_t)0x04)
+#define OB_BOR_LEVEL1 ((uint8_t)0x08)
+#define OB_BOR_OFF ((uint8_t)0x0C)
+#define IS_OB_BOR(LEVEL) (((LEVEL) == OB_BOR_LEVEL1) || ((LEVEL) == OB_BOR_LEVEL2) || ((LEVEL) == OB_BOR_LEVEL3) || ((LEVEL) == OB_BOR_OFF))
+# 253 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define FLASH_IT_EOP ((uint32_t)0x01000000)
+#define FLASH_IT_ERR ((uint32_t)0x02000000)
+#define IS_FLASH_IT(IT) ((((IT) & (uint32_t)0xFCFFFFFF) == 0x00000000) && ((IT) != 0x00000000))
 
 
 
-  template<typename _Tp>
-    struct make_signed
-    { typedef typename __make_signed_selector<_Tp>::__type type; };
 
 
-  template<>
-    struct make_signed<bool>;
-# 1766 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp>
-    struct remove_extent
-    { typedef _Tp type; };
 
-  template<typename _Tp, std::size_t _Size>
-    struct remove_extent<_Tp[_Size]>
-    { typedef _Tp type; };
 
-  template<typename _Tp>
-    struct remove_extent<_Tp[]>
-    { typedef _Tp type; };
+#define FLASH_FLAG_EOP ((uint32_t)0x00000001)
+#define FLASH_FLAG_OPERR ((uint32_t)0x00000002)
+#define FLASH_FLAG_WRPERR ((uint32_t)0x00000010)
+#define FLASH_FLAG_PGAERR ((uint32_t)0x00000020)
+#define FLASH_FLAG_PGPERR ((uint32_t)0x00000040)
+#define FLASH_FLAG_PGSERR ((uint32_t)0x00000080)
+#define FLASH_FLAG_BSY ((uint32_t)0x00010000)
+#define IS_FLASH_CLEAR_FLAG(FLAG) ((((FLAG) & (uint32_t)0xFFFFFE0C) == 0x00000000) && ((FLAG) != 0x00000000))
+#define IS_FLASH_GET_FLAG(FLAG) (((FLAG) == FLASH_FLAG_EOP) || ((FLAG) == FLASH_FLAG_OPERR) || ((FLAG) == FLASH_FLAG_WRPERR) || ((FLAG) == FLASH_FLAG_PGAERR) || ((FLAG) == FLASH_FLAG_PGPERR) || ((FLAG) == FLASH_FLAG_PGSERR) || ((FLAG) == FLASH_FLAG_BSY))
+# 282 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+#define FLASH_PSIZE_BYTE ((uint32_t)0x00000000)
+#define FLASH_PSIZE_HALF_WORD ((uint32_t)0x00000100)
+#define FLASH_PSIZE_WORD ((uint32_t)0x00000200)
+#define FLASH_PSIZE_DOUBLE_WORD ((uint32_t)0x00000300)
+#define CR_PSIZE_MASK ((uint32_t)0xFFFFFCFF)
 
 
-  template<typename _Tp>
-    struct remove_all_extents
-    { typedef _Tp type; };
 
-  template<typename _Tp, std::size_t _Size>
-    struct remove_all_extents<_Tp[_Size]>
-    { typedef typename remove_all_extents<_Tp>::type type; };
 
-  template<typename _Tp>
-    struct remove_all_extents<_Tp[]>
-    { typedef typename remove_all_extents<_Tp>::type type; };
-# 1803 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<typename _Tp, typename>
-    struct __remove_pointer_helper
-    { typedef _Tp type; };
 
-  template<typename _Tp, typename _Up>
-    struct __remove_pointer_helper<_Tp, _Up*>
-    { typedef _Up type; };
 
 
-  template<typename _Tp>
-    struct remove_pointer
-    : public __remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>
-    { };
+#define RDP_KEY ((uint16_t)0x00A5)
+#define FLASH_KEY1 ((uint32_t)0x45670123)
+#define FLASH_KEY2 ((uint32_t)0xCDEF89AB)
+#define FLASH_OPT_KEY1 ((uint32_t)0x08192A3B)
+#define FLASH_OPT_KEY2 ((uint32_t)0x4C5D6E7F)
 
 
-  template<typename _Tp, bool = __or_<__is_referenceable<_Tp>,
-          is_void<_Tp>>::value>
-    struct __add_pointer_helper
-    { typedef _Tp type; };
 
-  template<typename _Tp>
-    struct __add_pointer_helper<_Tp, true>
-    { typedef typename remove_reference<_Tp>::type* type; };
 
-  template<typename _Tp>
-    struct add_pointer
-    : public __add_pointer_helper<_Tp>
-    { };
-# 1842 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<std::size_t _Len>
-    struct __aligned_storage_msa
-    {
-      union __type
-      {
- unsigned char __data[_Len];
- struct __attribute__((__aligned__)) { } __align;
-      };
-    };
-# 1862 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-  template<std::size_t _Len, std::size_t _Align =
-    __alignof__(typename __aligned_storage_msa<_Len>::__type)>
-    struct aligned_storage
-    {
-      union type
-      {
- unsigned char __data[_Len];
- struct __attribute__((__aligned__((_Align)))) { } __align;
-      };
-    };
 
 
 
+#define ACR_BYTE0_ADDRESS ((uint32_t)0x40023C00)
+
 
-  template<typename _Up,
-    bool _IsArray = is_array<_Up>::value,
-    bool _IsFunction = is_function<_Up>::value>
-    struct __decay_selector;
 
+#define OPTCR_BYTE0_ADDRESS ((uint32_t)0x40023C14)
 
-  template<typename _Up>
-    struct __decay_selector<_Up, false, false>
-    { typedef typename remove_cv<_Up>::type __type; };
 
-  template<typename _Up>
-    struct __decay_selector<_Up, true, false>
-    { typedef typename remove_extent<_Up>::type* __type; };
 
-  template<typename _Up>
-    struct __decay_selector<_Up, false, true>
-    { typedef typename add_pointer<_Up>::type __type; };
+#define OPTCR_BYTE1_ADDRESS ((uint32_t)0x40023C15)
 
 
-  template<typename _Tp>
-    class decay
-    {
-      typedef typename remove_reference<_Tp>::type __remove_type;
 
-    public:
-      typedef typename __decay_selector<__remove_type>::__type type;
-    };
+#define OPTCR_BYTE2_ADDRESS ((uint32_t)0x40023C16)
 
-  template<typename _Tp>
-    class reference_wrapper;
 
 
-  template<typename _Tp>
-    struct __strip_reference_wrapper
-    {
-      typedef _Tp __type;
-    };
+#define OPTCR_BYTE3_ADDRESS ((uint32_t)0x40023C17)
 
-  template<typename _Tp>
-    struct __strip_reference_wrapper<reference_wrapper<_Tp> >
-    {
-      typedef _Tp& __type;
-    };
 
-  template<typename _Tp>
-    struct __decay_and_strip
-    {
-      typedef typename __strip_reference_wrapper<
- typename decay<_Tp>::type>::__type __type;
-    };
 
 
+#define OPTCR1_BYTE2_ADDRESS ((uint32_t)0x40023C1A)
+# 337 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
+void FLASH_SetLatency(uint32_t FLASH_Latency);
+void FLASH_PrefetchBufferCmd(FunctionalState NewState);
+void FLASH_InstructionCacheCmd(FunctionalState NewState);
+void FLASH_DataCacheCmd(FunctionalState NewState);
+void FLASH_InstructionCacheReset(void);
+void FLASH_DataCacheReset(void);
 
 
-  template<bool, typename _Tp = void>
-    struct enable_if
-    { };
+void FLASH_Unlock(void);
+void FLASH_Lock(void);
+FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange);
+FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange);
+FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data);
+FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data);
+FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data);
+FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data);
 
 
-  template<typename _Tp>
-    struct enable_if<true, _Tp>
-    { typedef _Tp type; };
+void FLASH_OB_Unlock(void);
+void FLASH_OB_Lock(void);
+void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState);
+void FLASH_OB_WRP1Config(uint32_t OB_WRP, FunctionalState NewState);
+void FLASH_OB_RDPConfig(uint8_t OB_RDP);
+void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY);
+void FLASH_OB_BORConfig(uint8_t OB_BOR);
+FLASH_Status FLASH_OB_Launch(void);
+uint8_t FLASH_OB_GetUser(void);
+uint16_t FLASH_OB_GetWRP(void);
+uint16_t FLASH_OB_GetWRP1(void);
+FlagStatus FLASH_OB_GetRDP(void);
+uint8_t FLASH_OB_GetBOR(void);
 
-  template<typename... _Cond>
-    using _Require = typename enable_if<__and_<_Cond...>::value>::type;
 
+void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState);
+FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG);
+void FLASH_ClearFlag(uint32_t FLASH_FLAG);
+FLASH_Status FLASH_GetStatus(void);
+FLASH_Status FLASH_WaitForLastOperation(void);
 
 
-  template<bool _Cond, typename _Iftrue, typename _Iffalse>
-    struct conditional
-    { typedef _Iftrue type; };
+}
+# 38 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define __STM32F4xx_FSMC_H 
 
 
-  template<typename _Iftrue, typename _Iffalse>
-    struct conditional<false, _Iftrue, _Iffalse>
-    { typedef _Iffalse type; };
+ extern "C" {
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+typedef struct
+{
+  uint32_t FSMC_AddressSetupTime;
 
 
-  template<typename... _Tp>
-    struct common_type;
 
 
+  uint32_t FSMC_AddressHoldTime;
 
-  struct __do_common_type_impl
-  {
-    template<typename _Tp, typename _Up>
-      static __success_type<typename decay<decltype
-       (true ? std::declval<_Tp>()
-        : std::declval<_Up>())>::type> _S_test(int);
 
-    template<typename, typename>
-      static __failure_type _S_test(...);
-  };
 
-  template<typename _Tp, typename _Up>
-    struct __common_type_impl
-    : private __do_common_type_impl
-    {
-      typedef decltype(_S_test<_Tp, _Up>(0)) type;
-    };
 
-  struct __do_member_type_wrapper
-  {
-    template<typename _Tp>
-      static __success_type<typename _Tp::type> _S_test(int);
+  uint32_t FSMC_DataSetupTime;
 
-    template<typename>
-      static __failure_type _S_test(...);
-  };
 
-  template<typename _Tp>
-    struct __member_type_wrapper
-    : private __do_member_type_wrapper
-    {
-      typedef decltype(_S_test<_Tp>(0)) type;
-    };
 
-  template<typename _CTp, typename... _Args>
-    struct __expanded_common_type_wrapper
-    {
-      typedef common_type<typename _CTp::type, _Args...> type;
-    };
 
-  template<typename... _Args>
-    struct __expanded_common_type_wrapper<__failure_type, _Args...>
-    { typedef __failure_type type; };
+  uint32_t FSMC_BusTurnAroundDuration;
 
-  template<typename _Tp>
-    struct common_type<_Tp>
-    { typedef typename decay<_Tp>::type type; };
 
-  template<typename _Tp, typename _Up>
-    struct common_type<_Tp, _Up>
-    : public __common_type_impl<_Tp, _Up>::type
-    { };
 
-  template<typename _Tp, typename _Up, typename... _Vp>
-    struct common_type<_Tp, _Up, _Vp...>
-    : public __expanded_common_type_wrapper<typename __member_type_wrapper<
-               common_type<_Tp, _Up>>::type, _Vp...>::type
-    { };
 
+  uint32_t FSMC_CLKDivision;
 
-  template<typename _Tp>
-    struct underlying_type
-    {
-      typedef __underlying_type(_Tp) type;
-    };
 
-  template<typename _Tp>
-    struct __declval_protector
-    {
-      static const bool __stop = false;
-      static typename add_rvalue_reference<_Tp>::type __delegate();
-    };
 
-  template<typename _Tp>
-    inline typename add_rvalue_reference<_Tp>::type
-    declval() noexcept
-    {
-      static_assert(__declval_protector<_Tp>::__stop,
-      "declval() must not be used!");
-      return __declval_protector<_Tp>::__delegate();
-    }
+  uint32_t FSMC_DataLatency;
 
 
-  template<typename _Signature>
-    class result_of;
 
 
 
 
-  struct __result_of_memfun_ref_impl
-  {
-    template<typename _Fp, typename _Tp1, typename... _Args>
-      static __success_type<decltype(
-      (std::declval<_Tp1>().*std::declval<_Fp>())(std::declval<_Args>()...)
-      )> _S_test(int);
 
-    template<typename...>
-      static __failure_type _S_test(...);
-  };
+  uint32_t FSMC_AccessMode;
 
-  template<typename _MemPtr, typename _Arg, typename... _Args>
-    struct __result_of_memfun_ref
-    : private __result_of_memfun_ref_impl
-    {
-      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;
-    };
+}FSMC_NORSRAMTimingInitTypeDef;
 
 
-  struct __result_of_memfun_deref_impl
-  {
-    template<typename _Fp, typename _Tp1, typename... _Args>
-      static __success_type<decltype(
-      ((*std::declval<_Tp1>()).*std::declval<_Fp>())(std::declval<_Args>()...)
-      )> _S_test(int);
 
-    template<typename...>
-      static __failure_type _S_test(...);
-  };
 
-  template<typename _MemPtr, typename _Arg, typename... _Args>
-    struct __result_of_memfun_deref
-    : private __result_of_memfun_deref_impl
-    {
-      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;
-    };
+typedef struct
+{
+  uint32_t FSMC_Bank;
 
 
-  struct __result_of_memobj_ref_impl
-  {
-    template<typename _Fp, typename _Tp1>
-      static __success_type<decltype(
-      std::declval<_Tp1>().*std::declval<_Fp>()
-      )> _S_test(int);
+  uint32_t FSMC_DataAddressMux;
 
-    template<typename, typename>
-      static __failure_type _S_test(...);
-  };
 
-  template<typename _MemPtr, typename _Arg>
-    struct __result_of_memobj_ref
-    : private __result_of_memobj_ref_impl
-    {
-      typedef decltype(_S_test<_MemPtr, _Arg>(0)) type;
-    };
 
+  uint32_t FSMC_MemoryType;
 
-  struct __result_of_memobj_deref_impl
-  {
-    template<typename _Fp, typename _Tp1>
-      static __success_type<decltype(
-      (*std::declval<_Tp1>()).*std::declval<_Fp>()
-      )> _S_test(int);
 
-    template<typename, typename>
-      static __failure_type _S_test(...);
-  };
 
-  template<typename _MemPtr, typename _Arg>
-    struct __result_of_memobj_deref
-    : private __result_of_memobj_deref_impl
-    {
-      typedef decltype(_S_test<_MemPtr, _Arg>(0)) type;
-    };
+  uint32_t FSMC_MemoryDataWidth;
 
-  template<typename _MemPtr, typename _Arg>
-    struct __result_of_memobj;
 
-  template<typename _Res, typename _Class, typename _Arg>
-    struct __result_of_memobj<_Res _Class::*, _Arg>
-    {
-      typedef typename remove_cv<typename remove_reference<
-        _Arg>::type>::type _Argval;
-      typedef _Res _Class::* _MemPtr;
-      typedef typename conditional<__or_<is_same<_Argval, _Class>,
-        is_base_of<_Class, _Argval>>::value,
-        __result_of_memobj_ref<_MemPtr, _Arg>,
-        __result_of_memobj_deref<_MemPtr, _Arg>
-      >::type::type type;
-    };
+  uint32_t FSMC_BurstAccessMode;
 
-  template<typename _MemPtr, typename _Arg, typename... _Args>
-    struct __result_of_memfun;
 
-  template<typename _Res, typename _Class, typename _Arg, typename... _Args>
-    struct __result_of_memfun<_Res _Class::*, _Arg, _Args...>
-    {
-      typedef typename remove_cv<typename remove_reference<
-        _Arg>::type>::type _Argval;
-      typedef _Res _Class::* _MemPtr;
-      typedef typename conditional<__or_<is_same<_Argval, _Class>,
-        is_base_of<_Class, _Argval>>::value,
-        __result_of_memfun_ref<_MemPtr, _Arg, _Args...>,
-        __result_of_memfun_deref<_MemPtr, _Arg, _Args...>
-      >::type::type type;
-    };
 
-  template<bool, bool, typename _Functor, typename... _ArgTypes>
-    struct __result_of_impl
-    {
-      typedef __failure_type type;
-    };
+  uint32_t FSMC_AsynchronousWait;
 
-  template<typename _MemPtr, typename _Arg>
-    struct __result_of_impl<true, false, _MemPtr, _Arg>
-    : public __result_of_memobj<typename decay<_MemPtr>::type, _Arg>
-    { };
 
-  template<typename _MemPtr, typename _Arg, typename... _Args>
-    struct __result_of_impl<false, true, _MemPtr, _Arg, _Args...>
-    : public __result_of_memfun<typename decay<_MemPtr>::type, _Arg, _Args...>
-    { };
 
+  uint32_t FSMC_WaitSignalPolarity;
 
-  struct __result_of_other_impl
-  {
-    template<typename _Fn, typename... _Args>
-      static __success_type<decltype(
-      std::declval<_Fn>()(std::declval<_Args>()...)
-      )> _S_test(int);
 
-    template<typename...>
-      static __failure_type _S_test(...);
-  };
 
-  template<typename _Functor, typename... _ArgTypes>
-    struct __result_of_impl<false, false, _Functor, _ArgTypes...>
-    : private __result_of_other_impl
-    {
-      typedef decltype(_S_test<_Functor, _ArgTypes...>(0)) type;
-    };
+  uint32_t FSMC_WrapMode;
+
+
+
+  uint32_t FSMC_WaitSignalActive;
 
-  template<typename _Functor, typename... _ArgTypes>
-    struct result_of<_Functor(_ArgTypes...)>
-    : public __result_of_impl<
-        is_member_object_pointer<
-          typename remove_reference<_Functor>::type
-        >::value,
-        is_member_function_pointer<
-          typename remove_reference<_Functor>::type
-        >::value,
-     _Functor, _ArgTypes...
-      >::type
-    { };
-# 2240 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
-#define _GLIBCXX_HAS_NESTED_TYPE(_NTYPE) template<typename _Tp> class __has_ ##_NTYPE ##_helper { template<typename _Up> struct _Wrap_type { }; template<typename _Up> static true_type __test(_Wrap_type<typename _Up::_NTYPE>*); template<typename _Up> static false_type __test(...); public: typedef decltype(__test<_Tp>(0)) type; }; template<typename _Tp> struct __has_ ##_NTYPE : public __has_ ##_NTYPE ##_helper <typename remove_cv<_Tp>::type>::type { };
-# 2264 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/arm-none-eabi/include/c++/4.9.3/type_traits" 3
 
-}
-# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/type_traits" 2
-# 7 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h" 1
-# 21 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h"
        
+  uint32_t FSMC_WriteOperation;
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Boards.h" 1
 
+  uint32_t FSMC_WaitSignal;
 
 
 
+  uint32_t FSMC_ExtendedMode;
 
 
+  uint32_t FSMC_WriteBurst;
        
 
-#define HAL_BOARD_SITL 3
-#define HAL_BOARD_SMACCM 4
-#define HAL_BOARD_PX4 5
-#define HAL_BOARD_LINUX 7
-#define HAL_BOARD_VRBRAIN 8
-#define HAL_BOARD_QURT 9
-#define HAL_BOARD_EMPTY 99
+  FSMC_NORSRAMTimingInitTypeDef* FSMC_ReadWriteTimingStruct;
 
+  FSMC_NORSRAMTimingInitTypeDef* FSMC_WriteTimingStruct;
+}FSMC_NORSRAMInitTypeDef;
 
-#define HAL_BOARD_SUBTYPE_NONE -1
 
 
-#define HAL_BOARD_SUBTYPE_LINUX_NONE 1000
-#define HAL_BOARD_SUBTYPE_LINUX_ERLEBOARD 1001
-#define HAL_BOARD_SUBTYPE_LINUX_PXF 1002
-#define HAL_BOARD_SUBTYPE_LINUX_NAVIO 1003
-#define HAL_BOARD_SUBTYPE_LINUX_ZYNQ 1004
-#define HAL_BOARD_SUBTYPE_LINUX_BBBMINI 1005
-#define HAL_BOARD_SUBTYPE_LINUX_BEBOP 1006
-#define HAL_BOARD_SUBTYPE_LINUX_RASPILOT 1007
-#define HAL_BOARD_SUBTYPE_LINUX_MINLURE 1008
-#define HAL_BOARD_SUBTYPE_LINUX_ERLEBRAIN2 1009
-#define HAL_BOARD_SUBTYPE_LINUX_BH 1010
-#define HAL_BOARD_SUBTYPE_LINUX_QFLIGHT 1011
-#define HAL_BOARD_SUBTYPE_LINUX_PXFMINI 1012
-#define HAL_BOARD_SUBTYPE_LINUX_NAVIO2 1013
-#define HAL_BOARD_SUBTYPE_LINUX_DISCO 1014
-#define HAL_BOARD_SUBTYPE_LINUX_AERO 1015
-#define HAL_BOARD_SUBTYPE_LINUX_DARK 1016
-#define HAL_BOARD_SUBTYPE_LINUX_URUS 1017
 
+typedef struct
+{
+  uint32_t FSMC_SetupTime;
 
-#define HAL_BOARD_SUBTYPE_PX4_V1 2000
-#define HAL_BOARD_SUBTYPE_PX4_V2 2001
-#define HAL_BOARD_SUBTYPE_PX4_V4 2002
-#define HAL_BOARD_SUBTYPE_PX4_V3 2003
 
 
-#define HAL_BOARD_SUBTYPE_VRBRAIN_V45 4000
-#define HAL_BOARD_SUBTYPE_VRBRAIN_V51 4001
-#define HAL_BOARD_SUBTYPE_VRBRAIN_V52 4002
-#define HAL_BOARD_SUBTYPE_VRUBRAIN_V51 4003
-#define HAL_BOARD_SUBTYPE_VRUBRAIN_V52 4004
-#define HAL_BOARD_SUBTYPE_VRCORE_V10 4005
-#define HAL_BOARD_SUBTYPE_VRBRAIN_V54 4006
 
 
-#define HAL_INS_MPU60XX_SPI 2
-#define HAL_INS_MPU60XX_I2C 3
-#define HAL_INS_HIL 4
-#define HAL_INS_PX4 5
-#define HAL_INS_L3G4200D 7
-#define HAL_INS_VRBRAIN 8
-#define HAL_INS_MPU9250_SPI 9
-#define HAL_INS_L3GD20 10
-#define HAL_INS_LSM9DS0 11
-#define HAL_INS_RASPILOT 12
-#define HAL_INS_MPU9250_I2C 13
-#define HAL_INS_BH 14
-#define HAL_INS_QFLIGHT 15
-#define HAL_INS_QURT 16
-#define HAL_INS_BBBMINI 17
-#define HAL_INS_AERO 18
+  uint32_t FSMC_WaitSetupTime;
 
 
-#define HAL_BARO_BMP085 1
-#define HAL_BARO_MS5611_I2C 2
-#define HAL_BARO_MS5611_SPI 3
-#define HAL_BARO_MS5607_I2C 4
-#define HAL_BARO_PX4 5
-#define HAL_BARO_HIL 6
-#define HAL_BARO_VRBRAIN 7
-#define HAL_BARO_MS5637_I2C 8
-#define HAL_BARO_QFLIGHT 9
-#define HAL_BARO_QURT 10
 
 
-#define HAL_COMPASS_HMC5843 1
-#define HAL_COMPASS_PX4 2
-#define HAL_COMPASS_HIL 3
-#define HAL_COMPASS_VRBRAIN 4
-#define HAL_COMPASS_AK8963_MPU9250 5
-#define HAL_COMPASS_AK8963_I2C 6
-#define HAL_COMPASS_HMC5843_MPU6000 7
-#define HAL_COMPASS_RASPILOT 8
-#define HAL_COMPASS_AK8963_MPU9250_I2C 9
-#define HAL_COMPASS_BH 10
-#define HAL_COMPASS_QFLIGHT 11
-#define HAL_COMPASS_QURT 12
-#define HAL_COMPASS_BBBMINI 13
-#define HAL_COMPASS_NAVIO2 14
-#define HAL_COMPASS_NAVIO 15
-#define HAL_COMPASS_AERO 16
 
+  uint32_t FSMC_HoldSetupTime;
 
-#define HAL_LINUX_HEAT_PWM 1
 
 
 
 
 
-#define HAL_CPU_CLASS_16 1
+  uint32_t FSMC_HiZSetupTime;
 
 
 
-#define HAL_CPU_CLASS_150 3
 
-#define HAL_CPU_CLASS_1000 4
-# 131 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Boards.h"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/board/px4.h" 1
+}FSMC_NAND_PCCARDTimingInitTypeDef;
        
 
-#define HAL_BOARD_NAME "PX4"
-#define HAL_CPU_CLASS HAL_CPU_CLASS_150
-#define HAL_OS_POSIX_IO 1
-#define HAL_BOARD_LOG_DIRECTORY "/fs/microsd/APM/LOGS"
-#define HAL_BOARD_TERRAIN_DIRECTORY "/fs/microsd/APM/TERRAIN"
-#define HAL_PARAM_DEFAULTS_PATH "/etc/defaults.parm"
-#define HAL_INS_DEFAULT HAL_INS_PX4
-#define HAL_BARO_DEFAULT HAL_BARO_PX4
-#define HAL_COMPASS_DEFAULT HAL_COMPASS_PX4
-#define HAL_SERIAL0_BAUD_DEFAULT 115200
 
 
+typedef struct
+{
+  uint32_t FSMC_Bank;
 
 
+  uint32_t FSMC_Waitfeature;
 
-#define CONFIG_HAL_BOARD_SUBTYPE HAL_BOARD_SUBTYPE_PX4_V2
-#define HAL_STORAGE_SIZE 16384
-#define HAL_HAVE_IMU_HEATER 1
-#define HAL_IMU_TEMP_DEFAULT -1
-# 36 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/board/px4.h"
-#define HAL_GPIO_A_LED_PIN 27
-#define HAL_GPIO_B_LED_PIN 26
-#define HAL_GPIO_C_LED_PIN 25
-#define HAL_GPIO_LED_ON LOW
-#define HAL_GPIO_LED_OFF HIGH
 
-#define HAL_BARO_MS5611_NAME "ms5611"
-#define HAL_BARO_MS5611_SPI_INT_NAME "ms5611_int"
-#define HAL_BARO_MS5611_SPI_EXT_NAME "ms5611_ext"
+  uint32_t FSMC_MemoryDataWidth;
 
-#define HAL_INS_MPU60x0_NAME "mpu6000"
-#define HAL_INS_MPU60x0_EXT_NAME "mpu6000_ext"
 
-#define HAL_INS_LSM9DS0_G_NAME "lsm9ds0_g"
-#define HAL_INS_LSM9DS0_A_NAME "lsm9ds0_am"
+  uint32_t FSMC_ECC;
 
-#define HAL_INS_LSM9DS0_EXT_G_NAME "lsm9ds0_ext_g"
-#define HAL_INS_LSM9DS0_EXT_A_NAME "lsm9ds0_ext_am"
 
-#define HAL_INS_MPU9250_NAME "mpu9250"
-#define HAL_INS_MPU9250_EXT_NAME "mpu9250_ext"
+  uint32_t FSMC_ECCPageSize;
 
-#define HAL_INS_ICM20608_NAME "icm20608"
-#define HAL_INS_ICM20608_AM_NAME "icm20608-am"
-#define HAL_INS_ICM20608_EXT_NAME "icm20608_ext"
 
-#define HAL_COMPASS_HMC5843_NAME "hmc5843"
-# 132 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Boards.h" 2
-# 153 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Boards.h"
-#define HAL_OS_SOCKETS 0
-# 165 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Boards.h"
-#define HAL_RANGEFINDER_LIGHTWARE_I2C_BUS 1
+  uint32_t FSMC_TCLRSetupTime;
 
 
 
-#define HAL_COMPASS_HMC5843_I2C_ADDR 0x1E
+  uint32_t FSMC_TARSetupTime;
 
 
 
-#define HAL_WITH_UAVCAN 0
-# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h" 2
+  FSMC_NAND_PCCARDTimingInitTypeDef* FSMC_CommonSpaceTimingStruct;
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdlib.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdlib.h"
-#define __INCLUDE_STDLIB_H 
+  FSMC_NAND_PCCARDTimingInitTypeDef* FSMC_AttributeSpaceTimingStruct;
+}FSMC_NANDInitTypeDef;
 
 
 
 
 
+typedef struct
+{
+  uint32_t FSMC_Waitfeature;
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-#define __INCLUDE_SYS_TYPES_H 
-# 57 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-#define TRUE 1
+  uint32_t FSMC_TCLRSetupTime;
 
 
-#define FALSE 0
-# 71 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-#define NULL (0)
-# 84 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-#undef OK
-#define OK 0
 
+  uint32_t FSMC_TARSetupTime;
 
 
-#define PRIOR_RR_MIN 0
-#define PRIOR_RR_MAX 255
-#define PRIOR_FIFO_MIN 0
-#define PRIOR_FIFO_MAX 255
-#define PRIOR_OTHER_MIN 0
-#define PRIOR_OTHER_MAX 255
 
 
+  FSMC_NAND_PCCARDTimingInitTypeDef* FSMC_CommonSpaceTimingStruct;
 
+  FSMC_NAND_PCCARDTimingInitTypeDef* FSMC_AttributeSpaceTimingStruct;
 
-#define SCHED_PRIORITY_MAX 255
-#define SCHED_PRIORITY_DEFAULT 100
-#define SCHED_PRIORITY_MIN 1
-#define SCHED_PRIORITY_IDLE 0
-# 112 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-typedef float float32;
+  FSMC_NAND_PCCARDTimingInitTypeDef* FSMC_IOSpaceTimingStruct;
+}FSMC_PCCARDInitTypeDef;
+# 247 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_Bank1_NORSRAM1 ((uint32_t)0x00000000)
+#define FSMC_Bank1_NORSRAM2 ((uint32_t)0x00000002)
+#define FSMC_Bank1_NORSRAM3 ((uint32_t)0x00000004)
+#define FSMC_Bank1_NORSRAM4 ((uint32_t)0x00000006)
 
 
 
 
-typedef double double_t;
-typedef double float64;
-# 128 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-typedef unsigned int mode_t;
-# 138 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-typedef uint32_t size_t;
-typedef int32_t ssize_t;
 
 
 
+#define FSMC_Bank2_NAND ((uint32_t)0x00000010)
+#define FSMC_Bank3_NAND ((uint32_t)0x00000100)
 
 
 
-typedef int16_t uid_t;
-typedef int16_t gid_t;
 
 
 
-typedef uint16_t dev_t;
 
+#define FSMC_Bank4_PCCARD ((uint32_t)0x00001000)
 
 
-typedef uint16_t ino_t;
 
 
+#define IS_FSMC_NORSRAM_BANK(BANK) (((BANK) == FSMC_Bank1_NORSRAM1) || ((BANK) == FSMC_Bank1_NORSRAM2) || ((BANK) == FSMC_Bank1_NORSRAM3) || ((BANK) == FSMC_Bank1_NORSRAM4))
 
 
 
-typedef int16_t pid_t;
 
+#define IS_FSMC_NAND_BANK(BANK) (((BANK) == FSMC_Bank2_NAND) || ((BANK) == FSMC_Bank3_NAND))
 
 
+#define IS_FSMC_GETFLAG_BANK(BANK) (((BANK) == FSMC_Bank2_NAND) || ((BANK) == FSMC_Bank3_NAND) || ((BANK) == FSMC_Bank4_PCCARD))
 
 
-typedef int16_t id_t;
 
+#define IS_FSMC_IT_BANK(BANK) (((BANK) == FSMC_Bank2_NAND) || ((BANK) == FSMC_Bank3_NAND) || ((BANK) == FSMC_Bank4_PCCARD))
+# 296 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_DataAddressMux_Disable ((uint32_t)0x00000000)
+#define FSMC_DataAddressMux_Enable ((uint32_t)0x00000002)
+#define IS_FSMC_MUX(MUX) (((MUX) == FSMC_DataAddressMux_Disable) || ((MUX) == FSMC_DataAddressMux_Enable))
+# 308 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_MemoryType_SRAM ((uint32_t)0x00000000)
+#define FSMC_MemoryType_PSRAM ((uint32_t)0x00000004)
+#define FSMC_MemoryType_NOR ((uint32_t)0x00000008)
+#define IS_FSMC_MEMORY(MEMORY) (((MEMORY) == FSMC_MemoryType_SRAM) || ((MEMORY) == FSMC_MemoryType_PSRAM)|| ((MEMORY) == FSMC_MemoryType_NOR))
+# 322 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_MemoryDataWidth_8b ((uint32_t)0x00000000)
+#define FSMC_MemoryDataWidth_16b ((uint32_t)0x00000010)
+#define IS_FSMC_MEMORY_WIDTH(WIDTH) (((WIDTH) == FSMC_MemoryDataWidth_8b) || ((WIDTH) == FSMC_MemoryDataWidth_16b))
+# 334 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_BurstAccessMode_Disable ((uint32_t)0x00000000)
+#define FSMC_BurstAccessMode_Enable ((uint32_t)0x00000100)
+#define IS_FSMC_BURSTMODE(STATE) (((STATE) == FSMC_BurstAccessMode_Disable) || ((STATE) == FSMC_BurstAccessMode_Enable))
+# 345 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_AsynchronousWait_Disable ((uint32_t)0x00000000)
+#define FSMC_AsynchronousWait_Enable ((uint32_t)0x00008000)
+#define IS_FSMC_ASYNWAIT(STATE) (((STATE) == FSMC_AsynchronousWait_Disable) || ((STATE) == FSMC_AsynchronousWait_Enable))
+# 356 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_WaitSignalPolarity_Low ((uint32_t)0x00000000)
+#define FSMC_WaitSignalPolarity_High ((uint32_t)0x00000200)
+#define IS_FSMC_WAIT_POLARITY(POLARITY) (((POLARITY) == FSMC_WaitSignalPolarity_Low) || ((POLARITY) == FSMC_WaitSignalPolarity_High))
+# 367 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_WrapMode_Disable ((uint32_t)0x00000000)
+#define FSMC_WrapMode_Enable ((uint32_t)0x00000400)
+#define IS_FSMC_WRAP_MODE(MODE) (((MODE) == FSMC_WrapMode_Disable) || ((MODE) == FSMC_WrapMode_Enable))
+# 378 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_WaitSignalActive_BeforeWaitState ((uint32_t)0x00000000)
+#define FSMC_WaitSignalActive_DuringWaitState ((uint32_t)0x00000800)
+#define IS_FSMC_WAIT_SIGNAL_ACTIVE(ACTIVE) (((ACTIVE) == FSMC_WaitSignalActive_BeforeWaitState) || ((ACTIVE) == FSMC_WaitSignalActive_DuringWaitState))
+# 389 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_WriteOperation_Disable ((uint32_t)0x00000000)
+#define FSMC_WriteOperation_Enable ((uint32_t)0x00001000)
+#define IS_FSMC_WRITE_OPERATION(OPERATION) (((OPERATION) == FSMC_WriteOperation_Disable) || ((OPERATION) == FSMC_WriteOperation_Enable))
+# 400 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_WaitSignal_Disable ((uint32_t)0x00000000)
+#define FSMC_WaitSignal_Enable ((uint32_t)0x00002000)
+#define IS_FSMC_WAITE_SIGNAL(SIGNAL) (((SIGNAL) == FSMC_WaitSignal_Disable) || ((SIGNAL) == FSMC_WaitSignal_Enable))
+# 411 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_ExtendedMode_Disable ((uint32_t)0x00000000)
+#define FSMC_ExtendedMode_Enable ((uint32_t)0x00004000)
 
+#define IS_FSMC_EXTENDED_MODE(MODE) (((MODE) == FSMC_ExtendedMode_Disable) || ((MODE) == FSMC_ExtendedMode_Enable))
+# 424 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_WriteBurst_Disable ((uint32_t)0x00000000)
+#define FSMC_WriteBurst_Enable ((uint32_t)0x00080000)
+#define IS_FSMC_WRITE_BURST(BURST) (((BURST) == FSMC_WriteBurst_Disable) || ((BURST) == FSMC_WriteBurst_Enable))
+# 435 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define IS_FSMC_ADDRESS_SETUP_TIME(TIME) ((TIME) <= 0xF)
 
-typedef intptr_t ptrdiff_t;
-# 191 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/sys/types.h"
-typedef uint32_t blkcnt_t;
-typedef int32_t off_t;
-typedef off_t fpos_t;
 
 
 
 
-typedef int64_t off64_t;
-typedef int64_t fpos64_t;
 
 
+#define IS_FSMC_ADDRESS_HOLD_TIME(TIME) ((TIME) <= 0xF)
 
 
-typedef int16_t blksize_t;
 
 
 
-typedef unsigned int socklen_t;
-typedef uint16_t sa_family_t;
 
 
+#define IS_FSMC_DATASETUP_TIME(TIME) (((TIME) > 0) && ((TIME) <= 0xFF))
 
-typedef uint32_t clock_t;
 
 
 
 
 
 
+#define IS_FSMC_TURNAROUND_TIME(TIME) ((TIME) <= 0xF)
 
-typedef uint32_t useconds_t;
-typedef int32_t suseconds_t;
 
 
 
-typedef int (*main_t)(int argc, char *argv[]);
-# 46 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdlib.h" 2
-# 57 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdlib.h"
-#define EXIT_SUCCESS 0
-#define EXIT_FAILURE 1
 
 
 
+#define IS_FSMC_CLK_DIV(DIV) ((DIV) <= 0xF)
 
 
 
 
-#define MAX_RAND 32767
 
 
 
+#define IS_FSMC_DATA_LATENCY(LATENCY) ((LATENCY) <= 0xF)
 
 
-#define MB_CUR_MAX 1
 
 
 
 
 
+#define FSMC_AccessMode_A ((uint32_t)0x00000000)
+#define FSMC_AccessMode_B ((uint32_t)0x10000000)
+#define FSMC_AccessMode_C ((uint32_t)0x20000000)
+#define FSMC_AccessMode_D ((uint32_t)0x30000000)
+#define IS_FSMC_ACCESS_MODE(MODE) (((MODE) == FSMC_AccessMode_A) || ((MODE) == FSMC_AccessMode_B) || ((MODE) == FSMC_AccessMode_C) || ((MODE) == FSMC_AccessMode_D))
+# 506 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_Waitfeature_Disable ((uint32_t)0x00000000)
+#define FSMC_Waitfeature_Enable ((uint32_t)0x00000002)
+#define IS_FSMC_WAIT_FEATURE(FEATURE) (((FEATURE) == FSMC_Waitfeature_Disable) || ((FEATURE) == FSMC_Waitfeature_Enable))
+# 518 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_ECC_Disable ((uint32_t)0x00000000)
+#define FSMC_ECC_Enable ((uint32_t)0x00000040)
+#define IS_FSMC_ECC_STATE(STATE) (((STATE) == FSMC_ECC_Disable) || ((STATE) == FSMC_ECC_Enable))
+# 529 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_ECCPageSize_256Bytes ((uint32_t)0x00000000)
+#define FSMC_ECCPageSize_512Bytes ((uint32_t)0x00020000)
+#define FSMC_ECCPageSize_1024Bytes ((uint32_t)0x00040000)
+#define FSMC_ECCPageSize_2048Bytes ((uint32_t)0x00060000)
+#define FSMC_ECCPageSize_4096Bytes ((uint32_t)0x00080000)
+#define FSMC_ECCPageSize_8192Bytes ((uint32_t)0x000A0000)
+#define IS_FSMC_ECCPAGE_SIZE(SIZE) (((SIZE) == FSMC_ECCPageSize_256Bytes) || ((SIZE) == FSMC_ECCPageSize_512Bytes) || ((SIZE) == FSMC_ECCPageSize_1024Bytes) || ((SIZE) == FSMC_ECCPageSize_2048Bytes) || ((SIZE) == FSMC_ECCPageSize_4096Bytes) || ((SIZE) == FSMC_ECCPageSize_8192Bytes))
+# 548 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define IS_FSMC_TCLR_TIME(TIME) ((TIME) <= 0xFF)
 
 
-#define environ get_environ_ptr()
 
 
 
 
 
+#define IS_FSMC_TAR_TIME(TIME) ((TIME) <= 0xFF)
 
-struct mallinfo
-{
-  int arena;
 
-  int ordblks;
-  int mxordblk;
-  int uordblks;
 
-  int fordblks;
 
-};
-# 107 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stdlib.h"
-#undef EXTERN
 
-#define EXTERN extern "C"
-extern "C"
-{
 
 
+#define IS_FSMC_SETUP_TIME(TIME) ((TIME) <= 0xFF)
 
 
 
 
-void srand(unsigned int seed);
-int rand(void);
 
 
 
+#define IS_FSMC_WAIT_TIME(TIME) ((TIME) <= 0xFF)
 
- char **get_environ_ptr( void );
- char *getenv( const char *name);
-int putenv( const char *string);
-int clearenv(void);
-int setenv(const char *name, const char *value, int overwrite);
-int unsetenv(const char *name);
 
 
 
 
-void exit(int status) __attribute__ ((noreturn));
-void abort(void) __attribute__ ((noreturn));
 
-int atexit( void (*func)(void));
 
+#define IS_FSMC_HOLD_TIME(TIME) ((TIME) <= 0xFF)
 
 
 
 
 
 
-void _exit(int status);
-#define _Exit(s) _exit(s)
 
+#define IS_FSMC_HIZ_TIME(TIME) ((TIME) <= 0xFF)
 
 
-long strtol(const char *, char **, int);
-unsigned long strtoul(const char *, char **, int);
 
-long long strtoll(const char *, char **, int);
-unsigned long long strtoull(const char *, char **, int);
 
-double_t strtod(const char *, char **);
 
-#define atoi(nptr) strtol((nptr), NULL, 10)
-#define atol(nptr) strtol((nptr), NULL, 10)
 
-#define atoll(nptr) strtoll((nptr), NULL, 10)
 
-#define atof(nptr) strtod((nptr), NULL)
+#define FSMC_IT_RisingEdge ((uint32_t)0x00000008)
+#define FSMC_IT_Level ((uint32_t)0x00000010)
+#define FSMC_IT_FallingEdge ((uint32_t)0x00000020)
+#define IS_FSMC_IT(IT) ((((IT) & (uint32_t)0xFFFFFFC7) == 0x00000000) && ((IT) != 0x00000000))
+#define IS_FSMC_GET_IT(IT) (((IT) == FSMC_IT_RisingEdge) || ((IT) == FSMC_IT_Level) || ((IT) == FSMC_IT_FallingEdge))
+# 610 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+#define FSMC_FLAG_RisingEdge ((uint32_t)0x00000001)
+#define FSMC_FLAG_Level ((uint32_t)0x00000002)
+#define FSMC_FLAG_FallingEdge ((uint32_t)0x00000004)
+#define FSMC_FLAG_FEMPT ((uint32_t)0x00000040)
+#define IS_FSMC_GET_FLAG(FLAG) (((FLAG) == FSMC_FLAG_RisingEdge) || ((FLAG) == FSMC_FLAG_Level) || ((FLAG) == FSMC_FLAG_FallingEdge) || ((FLAG) == FSMC_FLAG_FEMPT))
 
 
 
-char *itoa(int value, char *str, int base);
 
+#define IS_FSMC_CLEAR_FLAG(FLAG) ((((FLAG) & (uint32_t)0xFFFFFFF8) == 0x00000000) && ((FLAG) != 0x00000000))
+# 636 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
+void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank);
+void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct);
+void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct);
+void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState);
 
 
- void *malloc(size_t);
-void free( void*);
- void *realloc( void*, size_t);
- void *memalign(size_t, size_t);
- void *zalloc(size_t);
- void *calloc(size_t, size_t);
+void FSMC_NANDDeInit(uint32_t FSMC_Bank);
+void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct);
+void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct);
+void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState);
+void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState);
+uint32_t FSMC_GetECC(uint32_t FSMC_Bank);
 
 
+void FSMC_PCCARDDeInit(void);
+void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct);
+void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct);
+void FSMC_PCCARDCmd(FunctionalState NewState);
 
-int abs(int j);
-long int labs(long int j);
 
-long long int llabs(long long int j);
+void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState);
+FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG);
+void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG);
+ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT);
+void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT);
 
 
+}
+# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define __STM32F4xx_HASH_H 
 
 
-void qsort(void *base, size_t nmemb, size_t size,
-               int(*compar)(const void *, const void *));
+ extern "C" {
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+typedef struct
+{
+  uint32_t HASH_AlgoSelection;
 
+  uint32_t HASH_AlgoMode;
 
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
-struct mallinfo mallinfo(void);
-#pragma GCC diagnostic pop
+  uint32_t HASH_DataType;
 
 
+  uint32_t HASH_HMACKeyType;
 
+}HASH_InitTypeDef;
 
-#undef EXTERN
 
-}
-# 26 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h" 2
 
 
-#define PACKED __attribute__((__packed__))
+typedef struct
+{
+  uint32_t Data[8];
 
 
-#define UNUSED_FUNCTION __attribute__((unused))
 
+} HASH_MsgDigest;
 
-#define OPTIMIZE(level) __attribute__((optimize(level)))
 
 
-#define NOINLINE __attribute__((noinline))
 
-#define FMT_PRINTF(a,b) __attribute__((format(printf, a, b)))
-#define FMT_SCANF(a,b) __attribute__((format(scanf, a, b)))
+typedef struct
+{
+  uint32_t HASH_IMR;
+  uint32_t HASH_STR;
+  uint32_t HASH_CR;
+  uint32_t HASH_CSR[54];
+}HASH_Context;
+# 97 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define HASH_AlgoSelection_SHA1 ((uint32_t)0x0000)
+#define HASH_AlgoSelection_SHA224 HASH_CR_ALGO_1
+#define HASH_AlgoSelection_SHA256 HASH_CR_ALGO
+#define HASH_AlgoSelection_MD5 HASH_CR_ALGO_0
 
-#define ToRad(x) radians(x)
-#define ToDeg(x) degrees(x)
+#define IS_HASH_ALGOSELECTION(ALGOSELECTION) (((ALGOSELECTION) == HASH_AlgoSelection_SHA1) || ((ALGOSELECTION) == HASH_AlgoSelection_SHA224) || ((ALGOSELECTION) == HASH_AlgoSelection_SHA256) || ((ALGOSELECTION) == HASH_AlgoSelection_MD5))
+# 113 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define HASH_AlgoMode_HASH ((uint32_t)0x00000000)
+#define HASH_AlgoMode_HMAC HASH_CR_MODE
 
+#define IS_HASH_ALGOMODE(ALGOMODE) (((ALGOMODE) == HASH_AlgoMode_HASH) || ((ALGOMODE) == HASH_AlgoMode_HMAC))
+# 125 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define HASH_DataType_32b ((uint32_t)0x0000)
+#define HASH_DataType_16b HASH_CR_DATATYPE_0
+#define HASH_DataType_8b HASH_CR_DATATYPE_1
+#define HASH_DataType_1b HASH_CR_DATATYPE
 
+#define IS_HASH_DATATYPE(DATATYPE) (((DATATYPE) == HASH_DataType_32b)|| ((DATATYPE) == HASH_DataType_16b)|| ((DATATYPE) == HASH_DataType_8b) || ((DATATYPE) == HASH_DataType_1b))
+# 141 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define HASH_HMACKeyType_ShortKey ((uint32_t)0x00000000)
+#define HASH_HMACKeyType_LongKey HASH_CR_LKEY
 
-#define DEFINE_BYTE_ARRAY_METHODS inline uint8_t &operator[](size_t i) { return reinterpret_cast<uint8_t *>(this)[i]; } inline uint8_t operator[](size_t i) const { return reinterpret_cast<const uint8_t *>(this)[i]; }
+#define IS_HASH_HMAC_KEYTYPE(KEYTYPE) (((KEYTYPE) == HASH_HMACKeyType_ShortKey) || ((KEYTYPE) == HASH_HMACKeyType_LongKey))
+# 153 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define IS_HASH_VALIDBITSNUMBER(VALIDBITS) ((VALIDBITS) <= 0x1F)
+# 162 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define HASH_IT_DINI HASH_IMR_DINIM
+#define HASH_IT_DCI HASH_IMR_DCIM
 
+#define IS_HASH_IT(IT) ((((IT) & (uint32_t)0xFFFFFFFC) == 0x00000000) && ((IT) != 0x00000000))
+#define IS_HASH_GET_IT(IT) (((IT) == HASH_IT_DINI) || ((IT) == HASH_IT_DCI))
+# 175 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+#define HASH_FLAG_DINIS HASH_SR_DINIS
+#define HASH_FLAG_DCIS HASH_SR_DCIS
+#define HASH_FLAG_DMAS HASH_SR_DMAS
+#define HASH_FLAG_BUSY HASH_SR_BUSY
+#define HASH_FLAG_DINNE HASH_CR_DINNE
 
+#define IS_HASH_GET_FLAG(FLAG) (((FLAG) == HASH_FLAG_DINIS) || ((FLAG) == HASH_FLAG_DCIS) || ((FLAG) == HASH_FLAG_DMAS) || ((FLAG) == HASH_FLAG_BUSY) || ((FLAG) == HASH_FLAG_DINNE))
 
-#define LOCATION_ALT_MAX_M 83000
 
 
 
 
+#define IS_HASH_CLEAR_FLAG(FLAG) (((FLAG) == HASH_FLAG_DINIS) || ((FLAG) == HASH_FLAG_DCIS))
+# 202 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
+void HASH_DeInit(void);
 
-#define BIT_IS_SET(value,bitnumber) (((value) & (1U<<(bitnumber))) != 0)
 
+void HASH_Init(HASH_InitTypeDef* HASH_InitStruct);
+void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct);
+void HASH_Reset(void);
 
-#define LOWBYTE(i) ((uint8_t)(i))
-#define HIGHBYTE(i) ((uint8_t)(((uint16_t)(i))>>8))
 
-template <typename T, size_t N>
-char (&_ARRAY_SIZE_HELPER(T (&_arr)[N]))[N];
+void HASH_DataIn(uint32_t Data);
+uint8_t HASH_GetInFIFOWordsNbr(void);
+void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber);
+void HASH_StartDigest(void);
+void HASH_AutoStartDigest(FunctionalState NewState);
+void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest);
 
-template <typename T>
-char (&_ARRAY_SIZE_HELPER(T (&_arr)[0]))[0];
 
-#define ARRAY_SIZE(_arr) sizeof(_ARRAY_SIZE_HELPER(_arr))
-# 78 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h"
-#define _UNUSED_RESULT(uniq_,expr_) do { decltype(expr_) uniq_ __attribute__((unused)); uniq_ = expr_; } while (0)
-# 90 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h"
-#define UNUSED_RESULT(expr_) _UNUSED_RESULT(__unique_name_ ##__COUNTER__, expr_)
-# 110 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h"
-struct __attribute__((__packed__)) Location_Option_Flags {
-    uint8_t relative_alt : 1;
-    uint8_t unused1 : 1;
-    uint8_t loiter_ccw : 1;
-    uint8_t terrain_alt : 1;
-    uint8_t origin_alt : 1;
-    uint8_t loiter_xtrack : 1;
-};
+void HASH_SaveContext(HASH_Context* HASH_ContextSave);
+void HASH_RestoreContext(HASH_Context* HASH_ContextRestore);
 
-struct __attribute__((__packed__)) Location {
-    union {
-        Location_Option_Flags flags;
-        uint8_t options;
-    };
 
+void HASH_DMACmd(FunctionalState NewState);
 
 
+void HASH_ITConfig(uint32_t HASH_IT, FunctionalState NewState);
+FlagStatus HASH_GetFlagStatus(uint32_t HASH_FLAG);
+void HASH_ClearFlag(uint32_t HASH_FLAG);
+ITStatus HASH_GetITStatus(uint32_t HASH_IT);
+void HASH_ClearITPendingBit(uint32_t HASH_IT);
 
-    int32_t alt:24;
-    int32_t lat;
-    int32_t lng;
-};
 
+ErrorStatus HASH_SHA1(uint8_t *Input, uint32_t Ilen, uint8_t Output[20]);
+ErrorStatus HMAC_SHA1(uint8_t *Key, uint32_t Keylen,
+                      uint8_t *Input, uint32_t Ilen,
+                      uint8_t Output[20]);
 
 
+ErrorStatus HASH_MD5(uint8_t *Input, uint32_t Ilen, uint8_t Output[16]);
+ErrorStatus HMAC_MD5(uint8_t *Key, uint32_t Keylen,
+                     uint8_t *Input, uint32_t Ilen,
+                     uint8_t Output[16]);
 
-enum HomeState {
-    HOME_UNSET,
-    HOME_SET_NOT_LOCKED,
-    HOME_SET_AND_LOCKED
-};
-# 155 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h"
-bool is_bounded_int32(int32_t value, int32_t lower_bound, int32_t upper_bound);
-# 167 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/AP_Common.h"
-#define SITL_printf(fmt,args...) 
-# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h" 1
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
        
+}
+# 40 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+#define __STM32F4xx_GPIO_H 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stddef.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stddef.h"
-#define __INCLUDE_STDDEF_H 
-# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/stddef.h"
-typedef uint32_t wint_t;
-# 23 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/string.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/string.h"
-#define __INCLUDE_STRING_H 
-# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/string.h"
-#define bzero(s,n) (void)memset(s,0,n)
 
+ extern "C" {
+# 50 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+#define IS_GPIO_ALL_PERIPH(PERIPH) (((PERIPH) == GPIOA) || ((PERIPH) == GPIOB) || ((PERIPH) == GPIOC) || ((PERIPH) == GPIOD) || ((PERIPH) == GPIOE) || ((PERIPH) == GPIOF) || ((PERIPH) == GPIOG) || ((PERIPH) == GPIOH) || ((PERIPH) == GPIOI))
+# 64 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+typedef enum
+{
+  GPIO_Mode_IN = 0x00,
+  GPIO_Mode_OUT = 0x01,
+  GPIO_Mode_AF = 0x02,
+  GPIO_Mode_AN = 0x03
+}GPIOMode_TypeDef;
+#define IS_GPIO_MODE(MODE) (((MODE) == GPIO_Mode_IN) || ((MODE) == GPIO_Mode_OUT) || ((MODE) == GPIO_Mode_AF)|| ((MODE) == GPIO_Mode_AN))
 
-#define bcopy(b1,b2,len) (void)memmove(b2,b1,len)
 
 
 
 
+typedef enum
+{
+  GPIO_OType_PP = 0x00,
+  GPIO_OType_OD = 0x01
+}GPIOOType_TypeDef;
+#define IS_GPIO_OTYPE(OTYPE) (((OTYPE) == GPIO_OType_PP) || ((OTYPE) == GPIO_OType_OD))
 
-#undef EXTERN
 
-#define EXTERN extern "C"
-extern "C" {
 
 
 
+typedef enum
+{
+  GPIO_Speed_2MHz = 0x00,
+  GPIO_Speed_25MHz = 0x01,
+  GPIO_Speed_50MHz = 0x02,
+  GPIO_Speed_100MHz = 0x03
+}GPIOSpeed_TypeDef;
+#define IS_GPIO_SPEED(SPEED) (((SPEED) == GPIO_Speed_2MHz) || ((SPEED) == GPIO_Speed_25MHz) || ((SPEED) == GPIO_Speed_50MHz)|| ((SPEED) == GPIO_Speed_100MHz))
 
-extern "C" char *strdup( const char *s);
-extern "C" char *strndup( const char *s, size_t size);
-extern "C" const char *strerror(int);
-extern "C" size_t strlen( const char *);
-extern "C" size_t strnlen( const char *, size_t);
-extern "C" char *strcat( char *, const char *);
-extern "C" char *strncat( char *, const char *, size_t);
-extern "C" int strcmp( const char *, const char *);
-extern "C" int strncmp( const char *, const char *, size_t);
-extern "C" int strcasecmp( const char *, const char *);
-extern "C" int strncasecmp( const char *, const char *, size_t);
-extern "C" char *strcpy(char *dest, const char *src);
-extern "C" char *strncpy(char *, const char *, size_t);
-extern "C" char *strpbrk( const char *, const char *);
-extern "C" char *strchr( const char *s, int c);
-extern "C" char *strrchr( const char *s, int c);
-extern "C" size_t strspn( const char *, const char *);
-extern "C" size_t strcspn( const char *, const char *);
-extern "C" char *strstr( const char *, const char *);
-extern "C" char *strcasestr( const char *, const char *);
-extern "C" char *strtok( char *, const char *);
-extern "C" char *strtok_r( char *, const char *, char **);
 
-extern "C" void *memchr( const void *s, int c, size_t n);
-extern "C" void *memccpy( void *s1, const void *s2, int c, size_t n);
-extern "C" int memcmp( const void *s1, const void *s2, size_t n);
-extern "C" void *memcpy( void *dest, const void *src, size_t n);
-extern "C" void *memmove( void *dest, const void *src, size_t count);
-extern "C" void *memset( void *s, int c, size_t n);
 
-#undef EXTERN
 
-}
-# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h" 2
 
+typedef enum
+{
+  GPIO_PuPd_NOPULL = 0x00,
+  GPIO_PuPd_UP = 0x01,
+  GPIO_PuPd_DOWN = 0x02
+}GPIOPuPd_TypeDef;
+#define IS_GPIO_PUPD(PUPD) (((PUPD) == GPIO_PuPd_NOPULL) || ((PUPD) == GPIO_PuPd_UP) || ((PUPD) == GPIO_PuPd_DOWN))
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 1
        
 
 
+typedef enum
+{
+  Bit_RESET = 0,
+  Bit_SET
+}BitAction;
+#define IS_GPIO_BIT_ACTION(ACTION) (((ACTION) == Bit_RESET) || ((ACTION) == Bit_SET))
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Namespace.h" 1
        
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/functor.h" 1
-# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/functor.h"
        
+typedef struct
+{
+  uint32_t GPIO_Pin;
 
 
+  GPIOMode_TypeDef GPIO_Mode;
 
-#define FUNCTOR_TYPEDEF(name,rettype,...) typedef Functor<rettype, ## __VA_ARGS__> name
 
+  GPIOSpeed_TypeDef GPIO_Speed;
 
-#define FUNCTOR_DECLARE(name,rettype,...) Functor<rettype, ## __VA_ARGS__> name
 
+  GPIOOType_TypeDef GPIO_OType;
 
-#define FUNCTOR_BIND(obj,func,rettype,...) Functor<rettype, ## __VA_ARGS__>::bind<std::remove_reference<decltype(*obj)>::type, func>(obj)
 
+  GPIOPuPd_TypeDef GPIO_PuPd;
 
-#define FUNCTOR_BIND_MEMBER(func,rettype,...) Functor<rettype, ## __VA_ARGS__>::bind<std::remove_reference<decltype(*this)>::type, func>(this)
+}GPIO_InitTypeDef;
+# 151 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+#define GPIO_Pin_0 ((uint16_t)0x0001)
+#define GPIO_Pin_1 ((uint16_t)0x0002)
+#define GPIO_Pin_2 ((uint16_t)0x0004)
+#define GPIO_Pin_3 ((uint16_t)0x0008)
+#define GPIO_Pin_4 ((uint16_t)0x0010)
+#define GPIO_Pin_5 ((uint16_t)0x0020)
+#define GPIO_Pin_6 ((uint16_t)0x0040)
+#define GPIO_Pin_7 ((uint16_t)0x0080)
+#define GPIO_Pin_8 ((uint16_t)0x0100)
+#define GPIO_Pin_9 ((uint16_t)0x0200)
+#define GPIO_Pin_10 ((uint16_t)0x0400)
+#define GPIO_Pin_11 ((uint16_t)0x0800)
+#define GPIO_Pin_12 ((uint16_t)0x1000)
+#define GPIO_Pin_13 ((uint16_t)0x2000)
+#define GPIO_Pin_14 ((uint16_t)0x4000)
+#define GPIO_Pin_15 ((uint16_t)0x8000)
+#define GPIO_Pin_All ((uint16_t)0xFFFF)
 
+#define IS_GPIO_PIN(PIN) ((((PIN) & (uint16_t)0x00) == 0x00) && ((PIN) != (uint16_t)0x00))
+#define IS_GET_GPIO_PIN(PIN) (((PIN) == GPIO_Pin_0) || ((PIN) == GPIO_Pin_1) || ((PIN) == GPIO_Pin_2) || ((PIN) == GPIO_Pin_3) || ((PIN) == GPIO_Pin_4) || ((PIN) == GPIO_Pin_5) || ((PIN) == GPIO_Pin_6) || ((PIN) == GPIO_Pin_7) || ((PIN) == GPIO_Pin_8) || ((PIN) == GPIO_Pin_9) || ((PIN) == GPIO_Pin_10) || ((PIN) == GPIO_Pin_11) || ((PIN) == GPIO_Pin_12) || ((PIN) == GPIO_Pin_13) || ((PIN) == GPIO_Pin_14) || ((PIN) == GPIO_Pin_15))
+# 194 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+#define GPIO_PinSource0 ((uint8_t)0x00)
+#define GPIO_PinSource1 ((uint8_t)0x01)
+#define GPIO_PinSource2 ((uint8_t)0x02)
+#define GPIO_PinSource3 ((uint8_t)0x03)
+#define GPIO_PinSource4 ((uint8_t)0x04)
+#define GPIO_PinSource5 ((uint8_t)0x05)
+#define GPIO_PinSource6 ((uint8_t)0x06)
+#define GPIO_PinSource7 ((uint8_t)0x07)
+#define GPIO_PinSource8 ((uint8_t)0x08)
+#define GPIO_PinSource9 ((uint8_t)0x09)
+#define GPIO_PinSource10 ((uint8_t)0x0A)
+#define GPIO_PinSource11 ((uint8_t)0x0B)
+#define GPIO_PinSource12 ((uint8_t)0x0C)
+#define GPIO_PinSource13 ((uint8_t)0x0D)
+#define GPIO_PinSource14 ((uint8_t)0x0E)
+#define GPIO_PinSource15 ((uint8_t)0x0F)
 
-template <class RetType, class... Args>
-class Functor
-{
-public:
-    constexpr Functor(void *obj, RetType (*method)(void *obj, Args...))
-        : _obj(obj)
-        , _method(method)
-    {
-    }
+#define IS_GPIO_PIN_SOURCE(PINSOURCE) (((PINSOURCE) == GPIO_PinSource0) || ((PINSOURCE) == GPIO_PinSource1) || ((PINSOURCE) == GPIO_PinSource2) || ((PINSOURCE) == GPIO_PinSource3) || ((PINSOURCE) == GPIO_PinSource4) || ((PINSOURCE) == GPIO_PinSource5) || ((PINSOURCE) == GPIO_PinSource6) || ((PINSOURCE) == GPIO_PinSource7) || ((PINSOURCE) == GPIO_PinSource8) || ((PINSOURCE) == GPIO_PinSource9) || ((PINSOURCE) == GPIO_PinSource10) || ((PINSOURCE) == GPIO_PinSource11) || ((PINSOURCE) == GPIO_PinSource12) || ((PINSOURCE) == GPIO_PinSource13) || ((PINSOURCE) == GPIO_PinSource14) || ((PINSOURCE) == GPIO_PinSource15))
+# 237 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+#define GPIO_AF_RTC_50Hz ((uint8_t)0x00)
+#define GPIO_AF_MCO ((uint8_t)0x00)
+#define GPIO_AF_TAMPER ((uint8_t)0x00)
+#define GPIO_AF_SWJ ((uint8_t)0x00)
+#define GPIO_AF_TRACE ((uint8_t)0x00)
 
 
-    constexpr Functor(decltype(nullptr))
-        : Functor(nullptr, nullptr) { }
 
-    constexpr Functor()
-        : Functor(nullptr, nullptr) { }
 
+#define GPIO_AF_TIM1 ((uint8_t)0x01)
+#define GPIO_AF_TIM2 ((uint8_t)0x01)
 
-    RetType operator()(Args... args) const
-    {
-        return _method(_obj, args...);
-    }
 
 
 
-    inline bool operator==(const Functor<RetType, Args...>& rhs)
-    {
-        return _obj == rhs._obj && _method == rhs._method;
-    }
+#define GPIO_AF_TIM3 ((uint8_t)0x02)
+#define GPIO_AF_TIM4 ((uint8_t)0x02)
+#define GPIO_AF_TIM5 ((uint8_t)0x02)
 
 
-    explicit operator bool() const
-    {
-        return _method != nullptr;
-    }
 
-    template<class T, RetType (T::*method)(Args...)>
-    static constexpr Functor bind(T *obj)
-    {
-        return { obj, method_wrapper<T, method> };
-    }
 
-private:
-    void *_obj;
-    RetType (*_method)(void *obj, Args...);
+#define GPIO_AF_TIM8 ((uint8_t)0x03)
+#define GPIO_AF_TIM9 ((uint8_t)0x03)
+#define GPIO_AF_TIM10 ((uint8_t)0x03)
+#define GPIO_AF_TIM11 ((uint8_t)0x03)
 
-    template<class T, RetType (T::*method)(Args...)>
-    static RetType method_wrapper(void *obj, Args... args)
-    {
-        T *t = static_cast<T*>(obj);
-        return (t->*method)(args...);
-    }
-};
-# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Namespace.h" 2
 
-namespace AP_HAL {
 
 
-    class HAL;
+#define GPIO_AF_I2C1 ((uint8_t)0x04)
+#define GPIO_AF_I2C2 ((uint8_t)0x04)
+#define GPIO_AF_I2C3 ((uint8_t)0x04)
 
 
-    class UARTDriver;
-    class I2CDevice;
-    class I2CDeviceManager;
-    class Device;
 
-    class SPIDevice;
-    class SPIDeviceDriver;
-    class SPIDeviceManager;
 
-    class AnalogSource;
-    class AnalogIn;
-    class Storage;
-    class DigitalSource;
-    class GPIO;
-    class RCInput;
-    class RCOutput;
-    class Scheduler;
-    class Semaphore;
-    class OpticalFlow;
+#define GPIO_AF_SPI1 ((uint8_t)0x05)
+#define GPIO_AF_SPI2 ((uint8_t)0x05)
+#define GPIO_AF_SPI4 ((uint8_t)0x05)
+#define GPIO_AF_SPI5 ((uint8_t)0x05)
+#define GPIO_AF_SPI6 ((uint8_t)0x05)
 
-    class Util;
 
 
-    class Print;
-    class Stream;
-    class BetterStream;
 
+#define GPIO_AF_SPI3 ((uint8_t)0x06)
 
 
 
 
+#define GPIO_AF_USART1 ((uint8_t)0x07)
+#define GPIO_AF_USART2 ((uint8_t)0x07)
+#define GPIO_AF_USART3 ((uint8_t)0x07)
+#define GPIO_AF_I2S3ext ((uint8_t)0x07)
 
-    typedef void(*Proc)(void);
-    typedef Functor<void> MemberProc;
 
 
 
+#define GPIO_AF_UART4 ((uint8_t)0x08)
+#define GPIO_AF_UART5 ((uint8_t)0x08)
+#define GPIO_AF_USART6 ((uint8_t)0x08)
+#define GPIO_AF_UART7 ((uint8_t)0x08)
+#define GPIO_AF_UART8 ((uint8_t)0x08)
 
 
-    enum SPIDeviceType {
 
-        SPIDevice_Type = -1,
-    };
 
+#define GPIO_AF_CAN1 ((uint8_t)0x09)
+#define GPIO_AF_CAN2 ((uint8_t)0x09)
+#define GPIO_AF_TIM12 ((uint8_t)0x09)
+#define GPIO_AF_TIM13 ((uint8_t)0x09)
+#define GPIO_AF_TIM14 ((uint8_t)0x09)
 
-    const HAL& get_HAL();
-}
-# 6 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 2
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Macros.h" 1
        
 
+#define GPIO_AF_OTG_FS ((uint8_t)0xA)
+#define GPIO_AF_OTG_HS ((uint8_t)0xA)
 
 
 
 
+#define GPIO_AF_ETH ((uint8_t)0x0B)
 
-#define WARN_IF_UNUSED __attribute__ ((warn_unused_result))
-# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Macros.h"
-#define NORETURN __attribute__ ((noreturn))
-# 8 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Main.h" 1
-# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Main.h"
        
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 1
        
+#define GPIO_AF_FSMC ((uint8_t)0xC)
 
+#define GPIO_AF_OTG_HS_FS ((uint8_t)0xC)
+#define GPIO_AF_SDIO ((uint8_t)0xC)
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AnalogIn.h" 1
        
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/inttypes.h" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/inttypes.h"
-#define __INCLUDE_INTTYPES_H 
-# 160 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/inttypes.h"
-typedef void *imaxdiv_t;
+#define GPIO_AF_DCMI ((uint8_t)0x0D)
 
 
 
 
+#define GPIO_AF_EVENTOUT ((uint8_t)0x0F)
 
+#define IS_GPIO_AF(AF) (((AF) == GPIO_AF_RTC_50Hz) || ((AF) == GPIO_AF_TIM14) || ((AF) == GPIO_AF_MCO) || ((AF) == GPIO_AF_TAMPER) || ((AF) == GPIO_AF_SWJ) || ((AF) == GPIO_AF_TRACE) || ((AF) == GPIO_AF_TIM1) || ((AF) == GPIO_AF_TIM2) || ((AF) == GPIO_AF_TIM3) || ((AF) == GPIO_AF_TIM4) || ((AF) == GPIO_AF_TIM5) || ((AF) == GPIO_AF_TIM8) || ((AF) == GPIO_AF_I2C1) || ((AF) == GPIO_AF_I2C2) || ((AF) == GPIO_AF_I2C3) || ((AF) == GPIO_AF_SPI1) || ((AF) == GPIO_AF_SPI2) || ((AF) == GPIO_AF_TIM13) || ((AF) == GPIO_AF_SPI3) || ((AF) == GPIO_AF_TIM14) || ((AF) == GPIO_AF_USART1) || ((AF) == GPIO_AF_USART2) || ((AF) == GPIO_AF_USART3) || ((AF) == GPIO_AF_UART4) || ((AF) == GPIO_AF_UART5) || ((AF) == GPIO_AF_USART6) || ((AF) == GPIO_AF_CAN1) || ((AF) == GPIO_AF_CAN2) || ((AF) == GPIO_AF_OTG_FS) || ((AF) == GPIO_AF_OTG_HS) || ((AF) == GPIO_AF_ETH) || ((AF) == GPIO_AF_OTG_HS_FS) || ((AF) == GPIO_AF_SDIO) || ((AF) == GPIO_AF_DCMI) || ((AF) == GPIO_AF_EVENTOUT) || ((AF) == GPIO_AF_SPI4) || ((AF) == GPIO_AF_SPI5) || ((AF) == GPIO_AF_SPI6) || ((AF) == GPIO_AF_UART7) || ((AF) == GPIO_AF_UART8) || ((AF) == GPIO_AF_FSMC))
+# 370 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+#define GPIO_Mode_AIN GPIO_Mode_AN
 
-#define EXTERN extern "C"
-extern "C" {
-# 177 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/inttypes.h"
-extern "C" intmax_t imaxabs(intmax_t);
-extern "C" imaxdiv_t imaxdiv(intmax_t, intmax_t);
-extern "C" intmax_t strtoimax(const char *, char **, int);
-extern "C" uintmax_t strtoumax(const char *, char **, int);
+#define GPIO_AF_OTG1_FS GPIO_AF_OTG_FS
+#define GPIO_AF_OTG2_HS GPIO_AF_OTG_HS
+#define GPIO_AF_OTG2_FS GPIO_AF_OTG_HS_FS
+# 388 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
+void GPIO_DeInit(GPIO_TypeDef* GPIOx);
+
+
+void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct);
+void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct);
+void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
+
+
+uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
+uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx);
+uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
+uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx);
+void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
+void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
+void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal);
+void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal);
+void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
 
-extern "C" intmax_t wcstoimax(const wchar_t *, wchar_t **, int);
-extern "C" uintmax_t wcstoumax(const wchar_t *, wchar_t **, int);
 
-#undef EXTERN
+void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF);
+
 
 }
-# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AnalogIn.h" 2
+# 41 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define __STM32F4xx_I2C_H 
 
 
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+typedef struct
+{
+  uint32_t I2C_ClockSpeed;
 
-class AP_HAL::AnalogSource {
-public:
-    virtual float read_average() = 0;
-    virtual float read_latest() = 0;
-    virtual void set_pin(uint8_t p) = 0;
 
+  uint16_t I2C_Mode;
+
+
+  uint16_t I2C_DutyCycle;
+
+
+  uint16_t I2C_OwnAddress1;
+
+
+  uint16_t I2C_Ack;
+
+
+  uint16_t I2C_AcknowledgedAddress;
+
+}I2C_InitTypeDef;
+# 82 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define IS_I2C_ALL_PERIPH(PERIPH) (((PERIPH) == I2C1) || ((PERIPH) == I2C2) || ((PERIPH) == I2C3))
 
 
 
 
 
-    virtual void set_stop_pin(uint8_t p) = 0;
 
 
+#define IS_I2C_DIGITAL_FILTER(FILTER) ((FILTER) <= 0x0000000F)
+# 100 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_Mode_I2C ((uint16_t)0x0000)
+#define I2C_Mode_SMBusDevice ((uint16_t)0x0002)
+#define I2C_Mode_SMBusHost ((uint16_t)0x000A)
+#define IS_I2C_MODE(MODE) (((MODE) == I2C_Mode_I2C) || ((MODE) == I2C_Mode_SMBusDevice) || ((MODE) == I2C_Mode_SMBusHost))
+# 114 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_DutyCycle_16_9 ((uint16_t)0x4000)
+#define I2C_DutyCycle_2 ((uint16_t)0xBFFF)
+#define IS_I2C_DUTY_CYCLE(CYCLE) (((CYCLE) == I2C_DutyCycle_16_9) || ((CYCLE) == I2C_DutyCycle_2))
+# 126 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_Ack_Enable ((uint16_t)0x0400)
+#define I2C_Ack_Disable ((uint16_t)0x0000)
+#define IS_I2C_ACK_STATE(STATE) (((STATE) == I2C_Ack_Enable) || ((STATE) == I2C_Ack_Disable))
+# 138 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_Direction_Transmitter ((uint8_t)0x00)
+#define I2C_Direction_Receiver ((uint8_t)0x01)
+#define IS_I2C_DIRECTION(DIRECTION) (((DIRECTION) == I2C_Direction_Transmitter) || ((DIRECTION) == I2C_Direction_Receiver))
+# 150 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_AcknowledgedAddress_7bit ((uint16_t)0x4000)
+#define I2C_AcknowledgedAddress_10bit ((uint16_t)0xC000)
+#define IS_I2C_ACKNOWLEDGE_ADDRESS(ADDRESS) (((ADDRESS) == I2C_AcknowledgedAddress_7bit) || ((ADDRESS) == I2C_AcknowledgedAddress_10bit))
+# 162 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_Register_CR1 ((uint8_t)0x00)
+#define I2C_Register_CR2 ((uint8_t)0x04)
+#define I2C_Register_OAR1 ((uint8_t)0x08)
+#define I2C_Register_OAR2 ((uint8_t)0x0C)
+#define I2C_Register_DR ((uint8_t)0x10)
+#define I2C_Register_SR1 ((uint8_t)0x14)
+#define I2C_Register_SR2 ((uint8_t)0x18)
+#define I2C_Register_CCR ((uint8_t)0x1C)
+#define I2C_Register_TRISE ((uint8_t)0x20)
+#define IS_I2C_REGISTER(REGISTER) (((REGISTER) == I2C_Register_CR1) || ((REGISTER) == I2C_Register_CR2) || ((REGISTER) == I2C_Register_OAR1) || ((REGISTER) == I2C_Register_OAR2) || ((REGISTER) == I2C_Register_DR) || ((REGISTER) == I2C_Register_SR1) || ((REGISTER) == I2C_Register_SR2) || ((REGISTER) == I2C_Register_CCR) || ((REGISTER) == I2C_Register_TRISE))
+# 188 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_NACKPosition_Next ((uint16_t)0x0800)
+#define I2C_NACKPosition_Current ((uint16_t)0xF7FF)
+#define IS_I2C_NACK_POSITION(POSITION) (((POSITION) == I2C_NACKPosition_Next) || ((POSITION) == I2C_NACKPosition_Current))
+# 200 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_SMBusAlert_Low ((uint16_t)0x2000)
+#define I2C_SMBusAlert_High ((uint16_t)0xDFFF)
+#define IS_I2C_SMBUS_ALERT(ALERT) (((ALERT) == I2C_SMBusAlert_Low) || ((ALERT) == I2C_SMBusAlert_High))
+# 212 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_PECPosition_Next ((uint16_t)0x0800)
+#define I2C_PECPosition_Current ((uint16_t)0xF7FF)
+#define IS_I2C_PEC_POSITION(POSITION) (((POSITION) == I2C_PECPosition_Next) || ((POSITION) == I2C_PECPosition_Current))
+# 224 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_IT_BUF ((uint16_t)0x0400)
+#define I2C_IT_EVT ((uint16_t)0x0200)
+#define I2C_IT_ERR ((uint16_t)0x0100)
+#define IS_I2C_CONFIG_IT(IT) ((((IT) & (uint16_t)0xF8FF) == 0x00) && ((IT) != 0x00))
+# 236 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_IT_SMBALERT ((uint32_t)0x01008000)
+#define I2C_IT_TIMEOUT ((uint32_t)0x01004000)
+#define I2C_IT_PECERR ((uint32_t)0x01001000)
+#define I2C_IT_OVR ((uint32_t)0x01000800)
+#define I2C_IT_AF ((uint32_t)0x01000400)
+#define I2C_IT_ARLO ((uint32_t)0x01000200)
+#define I2C_IT_BERR ((uint32_t)0x01000100)
+#define I2C_IT_TXE ((uint32_t)0x06000080)
+#define I2C_IT_RXNE ((uint32_t)0x06000040)
+#define I2C_IT_STOPF ((uint32_t)0x02000010)
+#define I2C_IT_ADD10 ((uint32_t)0x02000008)
+#define I2C_IT_BTF ((uint32_t)0x02000004)
+#define I2C_IT_ADDR ((uint32_t)0x02000002)
+#define I2C_IT_SB ((uint32_t)0x02000001)
 
+#define IS_I2C_CLEAR_IT(IT) ((((IT) & (uint16_t)0x20FF) == 0x00) && ((IT) != (uint16_t)0x00))
 
+#define IS_I2C_GET_IT(IT) (((IT) == I2C_IT_SMBALERT) || ((IT) == I2C_IT_TIMEOUT) || ((IT) == I2C_IT_PECERR) || ((IT) == I2C_IT_OVR) || ((IT) == I2C_IT_AF) || ((IT) == I2C_IT_ARLO) || ((IT) == I2C_IT_BERR) || ((IT) == I2C_IT_TXE) || ((IT) == I2C_IT_RXNE) || ((IT) == I2C_IT_STOPF) || ((IT) == I2C_IT_ADD10) || ((IT) == I2C_IT_BTF) || ((IT) == I2C_IT_ADDR) || ((IT) == I2C_IT_SB))
+# 272 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_FLAG_DUALF ((uint32_t)0x00800000)
+#define I2C_FLAG_SMBHOST ((uint32_t)0x00400000)
+#define I2C_FLAG_SMBDEFAULT ((uint32_t)0x00200000)
+#define I2C_FLAG_GENCALL ((uint32_t)0x00100000)
+#define I2C_FLAG_TRA ((uint32_t)0x00040000)
+#define I2C_FLAG_BUSY ((uint32_t)0x00020000)
+#define I2C_FLAG_MSL ((uint32_t)0x00010000)
 
 
-    virtual void set_settle_time(uint16_t settle_time_ms) = 0;
 
 
 
-    virtual float voltage_average() = 0;
+#define I2C_FLAG_SMBALERT ((uint32_t)0x10008000)
+#define I2C_FLAG_TIMEOUT ((uint32_t)0x10004000)
+#define I2C_FLAG_PECERR ((uint32_t)0x10001000)
+#define I2C_FLAG_OVR ((uint32_t)0x10000800)
+#define I2C_FLAG_AF ((uint32_t)0x10000400)
+#define I2C_FLAG_ARLO ((uint32_t)0x10000200)
+#define I2C_FLAG_BERR ((uint32_t)0x10000100)
+#define I2C_FLAG_TXE ((uint32_t)0x10000080)
+#define I2C_FLAG_RXNE ((uint32_t)0x10000040)
+#define I2C_FLAG_STOPF ((uint32_t)0x10000010)
+#define I2C_FLAG_ADD10 ((uint32_t)0x10000008)
+#define I2C_FLAG_BTF ((uint32_t)0x10000004)
+#define I2C_FLAG_ADDR ((uint32_t)0x10000002)
+#define I2C_FLAG_SB ((uint32_t)0x10000001)
 
+#define IS_I2C_CLEAR_FLAG(FLAG) ((((FLAG) & (uint16_t)0x20FF) == 0x00) && ((FLAG) != (uint16_t)0x00))
 
+#define IS_I2C_GET_FLAG(FLAG) (((FLAG) == I2C_FLAG_DUALF) || ((FLAG) == I2C_FLAG_SMBHOST) || ((FLAG) == I2C_FLAG_SMBDEFAULT) || ((FLAG) == I2C_FLAG_GENCALL) || ((FLAG) == I2C_FLAG_TRA) || ((FLAG) == I2C_FLAG_BUSY) || ((FLAG) == I2C_FLAG_MSL) || ((FLAG) == I2C_FLAG_SMBALERT) || ((FLAG) == I2C_FLAG_TIMEOUT) || ((FLAG) == I2C_FLAG_PECERR) || ((FLAG) == I2C_FLAG_OVR) || ((FLAG) == I2C_FLAG_AF) || ((FLAG) == I2C_FLAG_ARLO) || ((FLAG) == I2C_FLAG_BERR) || ((FLAG) == I2C_FLAG_TXE) || ((FLAG) == I2C_FLAG_RXNE) || ((FLAG) == I2C_FLAG_STOPF) || ((FLAG) == I2C_FLAG_ADD10) || ((FLAG) == I2C_FLAG_BTF) || ((FLAG) == I2C_FLAG_ADDR) || ((FLAG) == I2C_FLAG_SB))
+# 335 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_EVENT_MASTER_MODE_SELECT ((uint32_t)0x00030001)
+# 363 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED ((uint32_t)0x00070082)
+#define I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED ((uint32_t)0x00030002)
 
-    virtual float voltage_latest() = 0;
+#define I2C_EVENT_MASTER_MODE_ADDRESS10 ((uint32_t)0x00030008)
+# 399 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_EVENT_MASTER_BYTE_RECEIVED ((uint32_t)0x00030040)
 
 
 
-    virtual float voltage_average_ratiometric() = 0;
-};
+#define I2C_EVENT_MASTER_BYTE_TRANSMITTING ((uint32_t)0x00070080)
 
-class AP_HAL::AnalogIn {
-public:
-    virtual void init() = 0;
-    virtual AP_HAL::AnalogSource* channel(int16_t n) = 0;
+#define I2C_EVENT_MASTER_BYTE_TRANSMITTED ((uint32_t)0x00070084)
+# 442 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED ((uint32_t)0x00020002)
+#define I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED ((uint32_t)0x00060082)
 
 
-    virtual float board_voltage(void) = 0;
+#define I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED ((uint32_t)0x00820000)
+#define I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED ((uint32_t)0x00860080)
 
 
-    virtual float servorail_voltage(void) { return 0; }
+#define I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED ((uint32_t)0x00120000)
+# 481 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define I2C_EVENT_SLAVE_BYTE_RECEIVED ((uint32_t)0x00020040)
 
+#define I2C_EVENT_SLAVE_STOP_DETECTED ((uint32_t)0x00000010)
 
-    virtual uint16_t power_status_flags(void) { return 0; }
-};
 
-#define ANALOG_INPUT_BOARD_VCC 254
-#define ANALOG_INPUT_NONE 255
-# 6 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/GPIO.h" 1
        
+#define I2C_EVENT_SLAVE_BYTE_TRANSMITTED ((uint32_t)0x00060084)
+#define I2C_EVENT_SLAVE_BYTE_TRANSMITTING ((uint32_t)0x00060080)
 
+#define I2C_EVENT_SLAVE_ACK_FAILURE ((uint32_t)0x00000400)
 
 
 
 
-#define HAL_GPIO_INPUT 0
-#define HAL_GPIO_OUTPUT 1
-#define HAL_GPIO_ALT 2
-#define HAL_GPIO_INTERRUPT_LOW 0
-#define HAL_GPIO_INTERRUPT_HIGH 1
-#define HAL_GPIO_INTERRUPT_FALLING 2
-#define HAL_GPIO_INTERRUPT_RISING 3
 
-class AP_HAL::DigitalSource {
-public:
-    virtual void mode(uint8_t output) = 0;
-    virtual uint8_t read() = 0;
-    virtual void write(uint8_t value) = 0;
-    virtual void toggle() = 0;
-};
 
-class AP_HAL::GPIO {
-public:
-    GPIO() {}
-    virtual void init() = 0;
-    virtual void pinMode(uint8_t pin, uint8_t output) = 0;
 
+#define IS_I2C_EVENT(EVENT) (((EVENT) == I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED) || ((EVENT) == I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED) || ((EVENT) == I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED) || ((EVENT) == I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED) || ((EVENT) == I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED) || ((EVENT) == I2C_EVENT_SLAVE_BYTE_RECEIVED) || ((EVENT) == (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF)) || ((EVENT) == (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL)) || ((EVENT) == I2C_EVENT_SLAVE_BYTE_TRANSMITTED) || ((EVENT) == (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF)) || ((EVENT) == (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL)) || ((EVENT) == I2C_EVENT_SLAVE_STOP_DETECTED) || ((EVENT) == I2C_EVENT_MASTER_MODE_SELECT) || ((EVENT) == I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED) || ((EVENT) == I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED) || ((EVENT) == I2C_EVENT_MASTER_BYTE_RECEIVED) || ((EVENT) == I2C_EVENT_MASTER_BYTE_TRANSMITTED) || ((EVENT) == I2C_EVENT_MASTER_BYTE_TRANSMITTING) || ((EVENT) == I2C_EVENT_MASTER_MODE_ADDRESS10) || ((EVENT) == I2C_EVENT_SLAVE_ACK_FAILURE))
+# 526 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define IS_I2C_OWN_ADDRESS1(ADDRESS1) ((ADDRESS1) <= 0x3FF)
+# 535 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+#define IS_I2C_CLOCK_SPEED(SPEED) (((SPEED) >= 0x1) && ((SPEED) <= 400000))
+# 548 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+void I2C_DeInit(I2C_TypeDef* I2Cx);
 
-    virtual void pinMode(uint8_t pin, uint8_t output, uint8_t alt) {};
 
-    virtual uint8_t read(uint8_t pin) = 0;
-    virtual void write(uint8_t pin, uint8_t value) = 0;
-    virtual void toggle(uint8_t pin) = 0;
-    virtual int8_t analogPinToDigitalPin(uint8_t pin) = 0;
+void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct);
+void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct);
+void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_DigitalFilterConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DigitalFilter);
+void I2C_AnalogFilterCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction);
+void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address);
+void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle);
+void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition);
+void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert);
+void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
 
 
-    virtual AP_HAL::DigitalSource* channel(uint16_t n) = 0;
+void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data);
+uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx);
 
 
-    virtual bool attach_interrupt(uint8_t interrupt_num, AP_HAL::Proc p,
-            uint8_t mode) = 0;
+void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition);
+void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState);
+uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx);
 
 
-    virtual bool usb_connected(void) = 0;
-};
-# 7 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/RCInput.h" 1
+void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
+void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState);
        
 
+uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register);
+void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState);
+# 678 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
+ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT);
 
 
-#define RC_INPUT_MIN_PULSEWIDTH 900
-#define RC_INPUT_MAX_PULSEWIDTH 2100
 
-class AP_HAL::RCInput {
-public:
 
 
+uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx);
 
 
 
 
-    virtual void init() = 0;
-    virtual void teardown() {};
 
+FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG);
 
 
+void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG);
+ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT);
+void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT);
 
 
+}
+# 42 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h"
+#define __STM32F4xx_IWDG_H 
+
+
+ extern "C" {
+# 58 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h"
+#define IWDG_WriteAccess_Enable ((uint16_t)0x5555)
+#define IWDG_WriteAccess_Disable ((uint16_t)0x0000)
+#define IS_IWDG_WRITE_ACCESS(ACCESS) (((ACCESS) == IWDG_WriteAccess_Enable) || ((ACCESS) == IWDG_WriteAccess_Disable))
+# 69 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h"
+#define IWDG_Prescaler_4 ((uint8_t)0x00)
+#define IWDG_Prescaler_8 ((uint8_t)0x01)
+#define IWDG_Prescaler_16 ((uint8_t)0x02)
+#define IWDG_Prescaler_32 ((uint8_t)0x03)
+#define IWDG_Prescaler_64 ((uint8_t)0x04)
+#define IWDG_Prescaler_128 ((uint8_t)0x05)
+#define IWDG_Prescaler_256 ((uint8_t)0x06)
+#define IS_IWDG_PRESCALER(PRESCALER) (((PRESCALER) == IWDG_Prescaler_4) || ((PRESCALER) == IWDG_Prescaler_8) || ((PRESCALER) == IWDG_Prescaler_16) || ((PRESCALER) == IWDG_Prescaler_32) || ((PRESCALER) == IWDG_Prescaler_64) || ((PRESCALER) == IWDG_Prescaler_128)|| ((PRESCALER) == IWDG_Prescaler_256))
+# 90 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h"
+#define IWDG_FLAG_PVU ((uint16_t)0x0001)
+#define IWDG_FLAG_RVU ((uint16_t)0x0002)
+#define IS_IWDG_FLAG(FLAG) (((FLAG) == IWDG_FLAG_PVU) || ((FLAG) == IWDG_FLAG_RVU))
+#define IS_IWDG_RELOAD(RELOAD) ((RELOAD) <= 0xFFF)
+# 106 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h"
+void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess);
+void IWDG_SetPrescaler(uint8_t IWDG_Prescaler);
+void IWDG_SetReload(uint16_t Reload);
+void IWDG_ReloadCounter(void);
 
 
-    virtual bool new_input() = 0;
+void IWDG_Enable(void);
 
 
+FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG);
 
 
-    virtual uint8_t num_channels() = 0;
+}
+# 43 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h"
+#define __STM32F4xx_PWR_H 
 
 
-    virtual uint16_t read(uint8_t ch) = 0;
+ extern "C" {
+# 59 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h"
+#define PWR_PVDLevel_0 PWR_CR_PLS_LEV0
+#define PWR_PVDLevel_1 PWR_CR_PLS_LEV1
+#define PWR_PVDLevel_2 PWR_CR_PLS_LEV2
+#define PWR_PVDLevel_3 PWR_CR_PLS_LEV3
+#define PWR_PVDLevel_4 PWR_CR_PLS_LEV4
+#define PWR_PVDLevel_5 PWR_CR_PLS_LEV5
+#define PWR_PVDLevel_6 PWR_CR_PLS_LEV6
+#define PWR_PVDLevel_7 PWR_CR_PLS_LEV7
 
+#define IS_PWR_PVD_LEVEL(LEVEL) (((LEVEL) == PWR_PVDLevel_0) || ((LEVEL) == PWR_PVDLevel_1)|| ((LEVEL) == PWR_PVDLevel_2) || ((LEVEL) == PWR_PVDLevel_3)|| ((LEVEL) == PWR_PVDLevel_4) || ((LEVEL) == PWR_PVDLevel_5)|| ((LEVEL) == PWR_PVDLevel_6) || ((LEVEL) == PWR_PVDLevel_7))
+# 81 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h"
+#define PWR_Regulator_ON ((uint32_t)0x00000000)
+#define PWR_Regulator_LowPower PWR_CR_LPDS
+#define IS_PWR_REGULATOR(REGULATOR) (((REGULATOR) == PWR_Regulator_ON) || ((REGULATOR) == PWR_Regulator_LowPower))
+# 93 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h"
+#define PWR_STOPEntry_WFI ((uint8_t)0x01)
+#define PWR_STOPEntry_WFE ((uint8_t)0x02)
+#define IS_PWR_STOP_ENTRY(ENTRY) (((ENTRY) == PWR_STOPEntry_WFI) || ((ENTRY) == PWR_STOPEntry_WFE))
 
-    virtual uint8_t read(uint16_t* periods, uint8_t len) = 0;
-# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/RCInput.h"
-    virtual bool set_overrides(int16_t *overrides, uint8_t len) = 0;
 
-    virtual bool set_override(uint8_t channel, int16_t override) = 0;
 
-    virtual void clear_overrides() = 0;
 
 
-    virtual bool rc_bind(int dsmMode) { return false; }
-};
-# 8 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/RCOutput.h" 1
+#define PWR_Regulator_Voltage_Scale1 ((uint32_t)0x0000C000)
+#define PWR_Regulator_Voltage_Scale2 ((uint32_t)0x00008000)
+#define PWR_Regulator_Voltage_Scale3 ((uint32_t)0x00004000)
+#define IS_PWR_REGULATOR_VOLTAGE(VOLTAGE) (((VOLTAGE) == PWR_Regulator_Voltage_Scale1) || ((VOLTAGE) == PWR_Regulator_Voltage_Scale2) || ((VOLTAGE) == PWR_Regulator_Voltage_Scale3))
+# 116 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h"
+#define PWR_FLAG_WU PWR_CSR_WUF
+#define PWR_FLAG_SB PWR_CSR_SBF
+#define PWR_FLAG_PVDO PWR_CSR_PVDO
+#define PWR_FLAG_BRR PWR_CSR_BRR
+#define PWR_FLAG_VOSRDY PWR_CSR_VOSRDY
        
 
 
 
-#define RC_OUTPUT_MIN_PULSEWIDTH 400
-#define RC_OUTPUT_MAX_PULSEWIDTH 2100
+#define PWR_FLAG_REGRDY PWR_FLAG_VOSRDY
 
 
 
-#define CH_1 0
-#define CH_2 1
-#define CH_3 2
-#define CH_4 3
-#define CH_5 4
-#define CH_6 5
-#define CH_7 6
-#define CH_8 7
-#define CH_9 8
-#define CH_10 9
-#define CH_11 10
-#define CH_12 11
-#define CH_13 12
-#define CH_14 13
-#define CH_15 14
-#define CH_16 15
-#define CH_17 16
-#define CH_18 17
-#define CH_NONE 255
 
+#define IS_PWR_GET_FLAG(FLAG) (((FLAG) == PWR_FLAG_WU) || ((FLAG) == PWR_FLAG_SB) || ((FLAG) == PWR_FLAG_PVDO) || ((FLAG) == PWR_FLAG_BRR) || ((FLAG) == PWR_FLAG_VOSRDY))
 
 
-class AP_HAL::RCOutput {
-public:
-    virtual void init() = 0;
 
+#define IS_PWR_CLEAR_FLAG(FLAG) (((FLAG) == PWR_FLAG_WU) || ((FLAG) == PWR_FLAG_SB))
+# 147 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h"
+void PWR_DeInit(void);
 
-    virtual void set_freq(uint32_t chmask, uint16_t freq_hz) = 0;
-    virtual uint16_t get_freq(uint8_t ch) = 0;
 
+void PWR_BackupAccessCmd(FunctionalState NewState);
 
 
-    virtual void enable_ch(uint8_t ch) = 0;
-    virtual void disable_ch(uint8_t ch) = 0;
+void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel);
+void PWR_PVDCmd(FunctionalState NewState);
 
 
+void PWR_WakeUpPinCmd(FunctionalState NewState);
 
 
+void PWR_BackupRegulatorCmd(FunctionalState NewState);
+void PWR_MainRegulatorModeConfig(uint32_t PWR_Regulator_Voltage);
 
-    virtual void write(uint8_t ch, uint16_t period_us) = 0;
 
+void PWR_FlashPowerDownCmd(FunctionalState NewState);
 
 
+void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry);
+void PWR_EnterSTANDBYMode(void);
 
 
+FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG);
+void PWR_ClearFlag(uint32_t PWR_FLAG);
 
-    virtual void cork() = 0;
 
+}
+# 44 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h" 1
+# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define __STM32F4xx_RCC_H 
 
 
+ extern "C" {
+# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+typedef struct
+{
+  uint32_t SYSCLK_Frequency;
+  uint32_t HCLK_Frequency;
+  uint32_t PCLK1_Frequency;
+  uint32_t PCLK2_Frequency;
+}RCC_ClocksTypeDef;
+# 65 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_HSE_OFF ((uint8_t)0x00)
+#define RCC_HSE_ON ((uint8_t)0x01)
+#define RCC_HSE_Bypass ((uint8_t)0x05)
+#define IS_RCC_HSE(HSE) (((HSE) == RCC_HSE_OFF) || ((HSE) == RCC_HSE_ON) || ((HSE) == RCC_HSE_Bypass))
+# 77 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_PLLSource_HSI ((uint32_t)0x00000000)
+#define RCC_PLLSource_HSE ((uint32_t)0x00400000)
+#define IS_RCC_PLL_SOURCE(SOURCE) (((SOURCE) == RCC_PLLSource_HSI) || ((SOURCE) == RCC_PLLSource_HSE))
+
+#define IS_RCC_PLLM_VALUE(VALUE) ((VALUE) <= 63)
+#define IS_RCC_PLLN_VALUE(VALUE) ((192 <= (VALUE)) && ((VALUE) <= 432))
+#define IS_RCC_PLLP_VALUE(VALUE) (((VALUE) == 2) || ((VALUE) == 4) || ((VALUE) == 6) || ((VALUE) == 8))
+#define IS_RCC_PLLQ_VALUE(VALUE) ((4 <= (VALUE)) && ((VALUE) <= 15))
+
+#define IS_RCC_PLLI2SN_VALUE(VALUE) ((192 <= (VALUE)) && ((VALUE) <= 432))
+#define IS_RCC_PLLI2SR_VALUE(VALUE) ((2 <= (VALUE)) && ((VALUE) <= 7))
+# 96 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_SYSCLKSource_HSI ((uint32_t)0x00000000)
+#define RCC_SYSCLKSource_HSE ((uint32_t)0x00000001)
+#define RCC_SYSCLKSource_PLLCLK ((uint32_t)0x00000002)
+#define IS_RCC_SYSCLK_SOURCE(SOURCE) (((SOURCE) == RCC_SYSCLKSource_HSI) || ((SOURCE) == RCC_SYSCLKSource_HSE) || ((SOURCE) == RCC_SYSCLKSource_PLLCLK))
+# 109 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_SYSCLK_Div1 ((uint32_t)0x00000000)
+#define RCC_SYSCLK_Div2 ((uint32_t)0x00000080)
+#define RCC_SYSCLK_Div4 ((uint32_t)0x00000090)
+#define RCC_SYSCLK_Div8 ((uint32_t)0x000000A0)
+#define RCC_SYSCLK_Div16 ((uint32_t)0x000000B0)
+#define RCC_SYSCLK_Div64 ((uint32_t)0x000000C0)
+#define RCC_SYSCLK_Div128 ((uint32_t)0x000000D0)
+#define RCC_SYSCLK_Div256 ((uint32_t)0x000000E0)
+#define RCC_SYSCLK_Div512 ((uint32_t)0x000000F0)
+#define IS_RCC_HCLK(HCLK) (((HCLK) == RCC_SYSCLK_Div1) || ((HCLK) == RCC_SYSCLK_Div2) || ((HCLK) == RCC_SYSCLK_Div4) || ((HCLK) == RCC_SYSCLK_Div8) || ((HCLK) == RCC_SYSCLK_Div16) || ((HCLK) == RCC_SYSCLK_Div64) || ((HCLK) == RCC_SYSCLK_Div128) || ((HCLK) == RCC_SYSCLK_Div256) || ((HCLK) == RCC_SYSCLK_Div512))
+# 130 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_HCLK_Div1 ((uint32_t)0x00000000)
+#define RCC_HCLK_Div2 ((uint32_t)0x00001000)
+#define RCC_HCLK_Div4 ((uint32_t)0x00001400)
+#define RCC_HCLK_Div8 ((uint32_t)0x00001800)
+#define RCC_HCLK_Div16 ((uint32_t)0x00001C00)
+#define IS_RCC_PCLK(PCLK) (((PCLK) == RCC_HCLK_Div1) || ((PCLK) == RCC_HCLK_Div2) || ((PCLK) == RCC_HCLK_Div4) || ((PCLK) == RCC_HCLK_Div8) || ((PCLK) == RCC_HCLK_Div16))
+# 145 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_IT_LSIRDY ((uint8_t)0x01)
+#define RCC_IT_LSERDY ((uint8_t)0x02)
+#define RCC_IT_HSIRDY ((uint8_t)0x04)
+#define RCC_IT_HSERDY ((uint8_t)0x08)
+#define RCC_IT_PLLRDY ((uint8_t)0x10)
+#define RCC_IT_PLLI2SRDY ((uint8_t)0x20)
+#define RCC_IT_CSS ((uint8_t)0x80)
+
+#define IS_RCC_IT(IT) ((((IT) & (uint8_t)0xC0) == 0x00) && ((IT) != 0x00))
+#define IS_RCC_GET_IT(IT) (((IT) == RCC_IT_LSIRDY) || ((IT) == RCC_IT_LSERDY) || ((IT) == RCC_IT_HSIRDY) || ((IT) == RCC_IT_HSERDY) || ((IT) == RCC_IT_PLLRDY) || ((IT) == RCC_IT_CSS) || ((IT) == RCC_IT_PLLI2SRDY))
+
+
+
+#define IS_RCC_CLEAR_IT(IT) ((((IT) & (uint8_t)0x40) == 0x00) && ((IT) != 0x00))
+# 167 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_LSE_OFF ((uint8_t)0x00)
+#define RCC_LSE_ON ((uint8_t)0x01)
+#define RCC_LSE_Bypass ((uint8_t)0x04)
+#define IS_RCC_LSE(LSE) (((LSE) == RCC_LSE_OFF) || ((LSE) == RCC_LSE_ON) || ((LSE) == RCC_LSE_Bypass))
+# 179 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_RTCCLKSource_LSE ((uint32_t)0x00000100)
+#define RCC_RTCCLKSource_LSI ((uint32_t)0x00000200)
+#define RCC_RTCCLKSource_HSE_Div2 ((uint32_t)0x00020300)
+#define RCC_RTCCLKSource_HSE_Div3 ((uint32_t)0x00030300)
+#define RCC_RTCCLKSource_HSE_Div4 ((uint32_t)0x00040300)
+#define RCC_RTCCLKSource_HSE_Div5 ((uint32_t)0x00050300)
+#define RCC_RTCCLKSource_HSE_Div6 ((uint32_t)0x00060300)
+#define RCC_RTCCLKSource_HSE_Div7 ((uint32_t)0x00070300)
+#define RCC_RTCCLKSource_HSE_Div8 ((uint32_t)0x00080300)
+#define RCC_RTCCLKSource_HSE_Div9 ((uint32_t)0x00090300)
+#define RCC_RTCCLKSource_HSE_Div10 ((uint32_t)0x000A0300)
+#define RCC_RTCCLKSource_HSE_Div11 ((uint32_t)0x000B0300)
+#define RCC_RTCCLKSource_HSE_Div12 ((uint32_t)0x000C0300)
+#define RCC_RTCCLKSource_HSE_Div13 ((uint32_t)0x000D0300)
+#define RCC_RTCCLKSource_HSE_Div14 ((uint32_t)0x000E0300)
+#define RCC_RTCCLKSource_HSE_Div15 ((uint32_t)0x000F0300)
+#define RCC_RTCCLKSource_HSE_Div16 ((uint32_t)0x00100300)
+#define RCC_RTCCLKSource_HSE_Div17 ((uint32_t)0x00110300)
+#define RCC_RTCCLKSource_HSE_Div18 ((uint32_t)0x00120300)
+#define RCC_RTCCLKSource_HSE_Div19 ((uint32_t)0x00130300)
+#define RCC_RTCCLKSource_HSE_Div20 ((uint32_t)0x00140300)
+#define RCC_RTCCLKSource_HSE_Div21 ((uint32_t)0x00150300)
+#define RCC_RTCCLKSource_HSE_Div22 ((uint32_t)0x00160300)
+#define RCC_RTCCLKSource_HSE_Div23 ((uint32_t)0x00170300)
+#define RCC_RTCCLKSource_HSE_Div24 ((uint32_t)0x00180300)
+#define RCC_RTCCLKSource_HSE_Div25 ((uint32_t)0x00190300)
+#define RCC_RTCCLKSource_HSE_Div26 ((uint32_t)0x001A0300)
+#define RCC_RTCCLKSource_HSE_Div27 ((uint32_t)0x001B0300)
+#define RCC_RTCCLKSource_HSE_Div28 ((uint32_t)0x001C0300)
+#define RCC_RTCCLKSource_HSE_Div29 ((uint32_t)0x001D0300)
+#define RCC_RTCCLKSource_HSE_Div30 ((uint32_t)0x001E0300)
+#define RCC_RTCCLKSource_HSE_Div31 ((uint32_t)0x001F0300)
+#define IS_RCC_RTCCLK_SOURCE(SOURCE) (((SOURCE) == RCC_RTCCLKSource_LSE) || ((SOURCE) == RCC_RTCCLKSource_LSI) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div2) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div3) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div4) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div5) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div6) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div7) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div8) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div9) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div10) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div11) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div12) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div13) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div14) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div15) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div16) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div17) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div18) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div19) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div20) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div21) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div22) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div23) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div24) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div25) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div26) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div27) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div28) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div29) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div30) || ((SOURCE) == RCC_RTCCLKSource_HSE_Div31))
+# 250 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_I2S2CLKSource_PLLI2S ((uint8_t)0x00)
+#define RCC_I2S2CLKSource_Ext ((uint8_t)0x01)
+
+#define IS_RCC_I2SCLK_SOURCE(SOURCE) (((SOURCE) == RCC_I2S2CLKSource_PLLI2S) || ((SOURCE) == RCC_I2S2CLKSource_Ext))
+
+
+
+
+
+
+
+#define RCC_TIMPrescDesactivated ((uint8_t)0x00)
+#define RCC_TIMPrescActivated ((uint8_t)0x01)
+
+#define IS_RCC_TIMCLK_PRESCALER(VALUE) (((VALUE) == RCC_TIMPrescDesactivated) || ((VALUE) == RCC_TIMPrescActivated))
+
+
+
+
+
+
+
+#define RCC_AHB1Periph_GPIOA ((uint32_t)0x00000001)
+#define RCC_AHB1Periph_GPIOB ((uint32_t)0x00000002)
+#define RCC_AHB1Periph_GPIOC ((uint32_t)0x00000004)
+#define RCC_AHB1Periph_GPIOD ((uint32_t)0x00000008)
+#define RCC_AHB1Periph_GPIOE ((uint32_t)0x00000010)
+#define RCC_AHB1Periph_GPIOF ((uint32_t)0x00000020)
+#define RCC_AHB1Periph_GPIOG ((uint32_t)0x00000040)
+#define RCC_AHB1Periph_GPIOH ((uint32_t)0x00000080)
+#define RCC_AHB1Periph_GPIOI ((uint32_t)0x00000100)
+#define RCC_AHB1Periph_CRC ((uint32_t)0x00001000)
+#define RCC_AHB1Periph_FLITF ((uint32_t)0x00008000)
+#define RCC_AHB1Periph_SRAM1 ((uint32_t)0x00010000)
+#define RCC_AHB1Periph_SRAM2 ((uint32_t)0x00020000)
+#define RCC_AHB1Periph_BKPSRAM ((uint32_t)0x00040000)
+#define RCC_AHB1Periph_SRAM3 ((uint32_t)0x00080000)
+#define RCC_AHB1Periph_CCMDATARAMEN ((uint32_t)0x00100000)
+#define RCC_AHB1Periph_DMA1 ((uint32_t)0x00200000)
+#define RCC_AHB1Periph_DMA2 ((uint32_t)0x00400000)
+#define RCC_AHB1Periph_ETH_MAC ((uint32_t)0x02000000)
+#define RCC_AHB1Periph_ETH_MAC_Tx ((uint32_t)0x04000000)
+#define RCC_AHB1Periph_ETH_MAC_Rx ((uint32_t)0x08000000)
+#define RCC_AHB1Periph_ETH_MAC_PTP ((uint32_t)0x10000000)
+#define RCC_AHB1Periph_OTG_HS ((uint32_t)0x20000000)
+#define RCC_AHB1Periph_OTG_HS_ULPI ((uint32_t)0x40000000)
+
+#define IS_RCC_AHB1_CLOCK_PERIPH(PERIPH) ((((PERIPH) & 0x818BEE00) == 0x00) && ((PERIPH) != 0x00))
+#define IS_RCC_AHB1_RESET_PERIPH(PERIPH) ((((PERIPH) & 0xDD9FEE00) == 0x00) && ((PERIPH) != 0x00))
+#define IS_RCC_AHB1_LPMODE_PERIPH(PERIPH) ((((PERIPH) & 0x81906E00) == 0x00) && ((PERIPH) != 0x00))
+# 309 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_AHB2Periph_DCMI ((uint32_t)0x00000001)
+#define RCC_AHB2Periph_CRYP ((uint32_t)0x00000010)
+#define RCC_AHB2Periph_HASH ((uint32_t)0x00000020)
+#define RCC_AHB2Periph_RNG ((uint32_t)0x00000040)
+#define RCC_AHB2Periph_OTG_FS ((uint32_t)0x00000080)
+#define IS_RCC_AHB2_PERIPH(PERIPH) ((((PERIPH) & 0xFFFFFF0E) == 0x00) && ((PERIPH) != 0x00))
+
+
+
+
+
+
+
+#define RCC_AHB3Periph_FSMC ((uint32_t)0x00000001)
+
+#define IS_RCC_AHB3_PERIPH(PERIPH) ((((PERIPH) & 0xFFFFFFFE) == 0x00) && ((PERIPH) != 0x00))
+
+
+
+
+
+
+
+#define RCC_APB1Periph_TIM2 ((uint32_t)0x00000001)
+#define RCC_APB1Periph_TIM3 ((uint32_t)0x00000002)
+#define RCC_APB1Periph_TIM4 ((uint32_t)0x00000004)
+#define RCC_APB1Periph_TIM5 ((uint32_t)0x00000008)
+#define RCC_APB1Periph_TIM6 ((uint32_t)0x00000010)
+#define RCC_APB1Periph_TIM7 ((uint32_t)0x00000020)
+#define RCC_APB1Periph_TIM12 ((uint32_t)0x00000040)
+#define RCC_APB1Periph_TIM13 ((uint32_t)0x00000080)
+#define RCC_APB1Periph_TIM14 ((uint32_t)0x00000100)
+#define RCC_APB1Periph_WWDG ((uint32_t)0x00000800)
+#define RCC_APB1Periph_SPI2 ((uint32_t)0x00004000)
+#define RCC_APB1Periph_SPI3 ((uint32_t)0x00008000)
+#define RCC_APB1Periph_USART2 ((uint32_t)0x00020000)
+#define RCC_APB1Periph_USART3 ((uint32_t)0x00040000)
+#define RCC_APB1Periph_UART4 ((uint32_t)0x00080000)
+#define RCC_APB1Periph_UART5 ((uint32_t)0x00100000)
+#define RCC_APB1Periph_I2C1 ((uint32_t)0x00200000)
+#define RCC_APB1Periph_I2C2 ((uint32_t)0x00400000)
+#define RCC_APB1Periph_I2C3 ((uint32_t)0x00800000)
+#define RCC_APB1Periph_CAN1 ((uint32_t)0x02000000)
+#define RCC_APB1Periph_CAN2 ((uint32_t)0x04000000)
+#define RCC_APB1Periph_PWR ((uint32_t)0x10000000)
+#define RCC_APB1Periph_DAC ((uint32_t)0x20000000)
+#define RCC_APB1Periph_UART7 ((uint32_t)0x40000000)
+#define RCC_APB1Periph_UART8 ((uint32_t)0x80000000)
+#define IS_RCC_APB1_PERIPH(PERIPH) ((((PERIPH) & 0x09013600) == 0x00) && ((PERIPH) != 0x00))
+
+
+
+
+
+
+
+#define RCC_APB2Periph_TIM1 ((uint32_t)0x00000001)
+#define RCC_APB2Periph_TIM8 ((uint32_t)0x00000002)
+#define RCC_APB2Periph_USART1 ((uint32_t)0x00000010)
+#define RCC_APB2Periph_USART6 ((uint32_t)0x00000020)
+#define RCC_APB2Periph_ADC ((uint32_t)0x00000100)
+#define RCC_APB2Periph_ADC1 ((uint32_t)0x00000100)
+#define RCC_APB2Periph_ADC2 ((uint32_t)0x00000200)
+#define RCC_APB2Periph_ADC3 ((uint32_t)0x00000400)
+#define RCC_APB2Periph_SDIO ((uint32_t)0x00000800)
+#define RCC_APB2Periph_SPI1 ((uint32_t)0x00001000)
+#define RCC_APB2Periph_SPI4 ((uint32_t)0x00002000)
+#define RCC_APB2Periph_SYSCFG ((uint32_t)0x00004000)
+#define RCC_APB2Periph_TIM9 ((uint32_t)0x00010000)
+#define RCC_APB2Periph_TIM10 ((uint32_t)0x00020000)
+#define RCC_APB2Periph_TIM11 ((uint32_t)0x00040000)
+#define RCC_APB2Periph_SPI5 ((uint32_t)0x00100000)
+#define RCC_APB2Periph_SPI6 ((uint32_t)0x00200000)
+
+#define IS_RCC_APB2_PERIPH(PERIPH) ((((PERIPH) & 0xFFC880CC) == 0x00) && ((PERIPH) != 0x00))
+#define IS_RCC_APB2_RESET_PERIPH(PERIPH) ((((PERIPH) & 0xFFC886CC) == 0x00) && ((PERIPH) != 0x00))
+# 394 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_MCO1Source_HSI ((uint32_t)0x00000000)
+#define RCC_MCO1Source_LSE ((uint32_t)0x00200000)
+#define RCC_MCO1Source_HSE ((uint32_t)0x00400000)
+#define RCC_MCO1Source_PLLCLK ((uint32_t)0x00600000)
+#define RCC_MCO1Div_1 ((uint32_t)0x00000000)
+#define RCC_MCO1Div_2 ((uint32_t)0x04000000)
+#define RCC_MCO1Div_3 ((uint32_t)0x05000000)
+#define RCC_MCO1Div_4 ((uint32_t)0x06000000)
+#define RCC_MCO1Div_5 ((uint32_t)0x07000000)
+#define IS_RCC_MCO1SOURCE(SOURCE) (((SOURCE) == RCC_MCO1Source_HSI) || ((SOURCE) == RCC_MCO1Source_LSE) || ((SOURCE) == RCC_MCO1Source_HSE) || ((SOURCE) == RCC_MCO1Source_PLLCLK))
+
+
+#define IS_RCC_MCO1DIV(DIV) (((DIV) == RCC_MCO1Div_1) || ((DIV) == RCC_MCO1Div_2) || ((DIV) == RCC_MCO1Div_3) || ((DIV) == RCC_MCO1Div_4) || ((DIV) == RCC_MCO1Div_5))
+# 416 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_MCO2Source_SYSCLK ((uint32_t)0x00000000)
+#define RCC_MCO2Source_PLLI2SCLK ((uint32_t)0x40000000)
+#define RCC_MCO2Source_HSE ((uint32_t)0x80000000)
+#define RCC_MCO2Source_PLLCLK ((uint32_t)0xC0000000)
+#define RCC_MCO2Div_1 ((uint32_t)0x00000000)
+#define RCC_MCO2Div_2 ((uint32_t)0x20000000)
+#define RCC_MCO2Div_3 ((uint32_t)0x28000000)
+#define RCC_MCO2Div_4 ((uint32_t)0x30000000)
+#define RCC_MCO2Div_5 ((uint32_t)0x38000000)
+#define IS_RCC_MCO2SOURCE(SOURCE) (((SOURCE) == RCC_MCO2Source_SYSCLK) || ((SOURCE) == RCC_MCO2Source_PLLI2SCLK)|| ((SOURCE) == RCC_MCO2Source_HSE) || ((SOURCE) == RCC_MCO2Source_PLLCLK))
+
+
+#define IS_RCC_MCO2DIV(DIV) (((DIV) == RCC_MCO2Div_1) || ((DIV) == RCC_MCO2Div_2) || ((DIV) == RCC_MCO2Div_3) || ((DIV) == RCC_MCO2Div_4) || ((DIV) == RCC_MCO2Div_5))
+# 438 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+#define RCC_FLAG_HSIRDY ((uint8_t)0x21)
+#define RCC_FLAG_HSERDY ((uint8_t)0x31)
+#define RCC_FLAG_PLLRDY ((uint8_t)0x39)
+#define RCC_FLAG_PLLI2SRDY ((uint8_t)0x3B)
+#define RCC_FLAG_LSERDY ((uint8_t)0x41)
+#define RCC_FLAG_LSIRDY ((uint8_t)0x61)
+#define RCC_FLAG_BORRST ((uint8_t)0x79)
+#define RCC_FLAG_PINRST ((uint8_t)0x7A)
+#define RCC_FLAG_PORRST ((uint8_t)0x7B)
+#define RCC_FLAG_SFTRST ((uint8_t)0x7C)
+#define RCC_FLAG_IWDGRST ((uint8_t)0x7D)
+#define RCC_FLAG_WWDGRST ((uint8_t)0x7E)
+#define RCC_FLAG_LPWRRST ((uint8_t)0x7F)
+
+#define IS_RCC_FLAG(FLAG) (((FLAG) == RCC_FLAG_HSIRDY) || ((FLAG) == RCC_FLAG_HSERDY) || ((FLAG) == RCC_FLAG_PLLRDY) || ((FLAG) == RCC_FLAG_LSERDY) || ((FLAG) == RCC_FLAG_LSIRDY) || ((FLAG) == RCC_FLAG_BORRST) || ((FLAG) == RCC_FLAG_PINRST) || ((FLAG) == RCC_FLAG_PORRST) || ((FLAG) == RCC_FLAG_SFTRST) || ((FLAG) == RCC_FLAG_IWDGRST)|| ((FLAG) == RCC_FLAG_WWDGRST)|| ((FLAG) == RCC_FLAG_LPWRRST)|| ((FLAG) == RCC_FLAG_PLLI2SRDY))
+
+
+
+
+
+
+
+#define IS_RCC_CALIBRATION_VALUE(VALUE) ((VALUE) <= 0x1F)
+# 473 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
+void RCC_DeInit(void);
+
+
+void RCC_HSEConfig(uint8_t RCC_HSE);
+ErrorStatus RCC_WaitForHSEStartUp(void);
+void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue);
+void RCC_HSICmd(FunctionalState NewState);
+void RCC_LSEConfig(uint8_t RCC_LSE);
+void RCC_LSICmd(FunctionalState NewState);
+
+void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PLLQ);
+void RCC_PLLCmd(FunctionalState NewState);
+void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR);
+void RCC_PLLI2SCmd(FunctionalState NewState);
+void RCC_ClockSecuritySystemCmd(FunctionalState NewState);
+void RCC_MCO1Config(uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div);
+void RCC_MCO2Config(uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div);
+
+
+void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource);
+uint8_t RCC_GetSYSCLKSource(void);
+void RCC_HCLKConfig(uint32_t RCC_SYSCLK);
+void RCC_PCLK1Config(uint32_t RCC_HCLK);
+void RCC_PCLK2Config(uint32_t RCC_HCLK);
+void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks);
+
+
+void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource);
+void RCC_RTCCLKCmd(FunctionalState NewState);
+void RCC_BackupResetCmd(FunctionalState NewState);
+void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource);
+void RCC_TIMCLKPresConfig(uint32_t RCC_TIMCLKPrescaler);
+
+void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState);
+void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState);
+void RCC_AHB3PeriphClockCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState);
+void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState);
+void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);
+
+void RCC_AHB1PeriphResetCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState);
+void RCC_AHB2PeriphResetCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState);
+void RCC_AHB3PeriphResetCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState);
+void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState);
+void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);
+
+void RCC_AHB1PeriphClockLPModeCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState);
+void RCC_AHB2PeriphClockLPModeCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState);
+void RCC_AHB3PeriphClockLPModeCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState);
+void RCC_APB1PeriphClockLPModeCmd(uint32_t RCC_APB1Periph, FunctionalState NewState);
+void RCC_APB2PeriphClockLPModeCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);
+
+
+void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState);
+FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG);
+void RCC_ClearFlag(void);
+ITStatus RCC_GetITStatus(uint8_t RCC_IT);
+void RCC_ClearITPendingBit(uint8_t RCC_IT);
 
 
-    virtual void push() = 0;
+}
+# 45 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rng.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rng.h"
+#define __STM32F4xx_RNG_H 
 
 
+ extern "C" {
+# 58 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rng.h"
+#define RNG_FLAG_DRDY ((uint8_t)0x0001)
+#define RNG_FLAG_CECS ((uint8_t)0x0002)
+#define RNG_FLAG_SECS ((uint8_t)0x0004)
 
+#define IS_RNG_GET_FLAG(RNG_FLAG) (((RNG_FLAG) == RNG_FLAG_DRDY) || ((RNG_FLAG) == RNG_FLAG_CECS) || ((RNG_FLAG) == RNG_FLAG_SECS))
 
 
-    virtual uint16_t read(uint8_t ch) = 0;
-    virtual void read(uint16_t* period_us, uint8_t len) = 0;
+#define IS_RNG_CLEAR_FLAG(RNG_FLAG) (((RNG_FLAG) == RNG_FLAG_CECS) || ((RNG_FLAG) == RNG_FLAG_SECS))
+# 74 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rng.h"
+#define RNG_IT_CEI ((uint8_t)0x20)
+#define RNG_IT_SEI ((uint8_t)0x40)
 
+#define IS_RNG_IT(IT) ((((IT) & (uint8_t)0x9F) == 0x00) && ((IT) != 0x00))
+#define IS_RNG_GET_IT(RNG_IT) (((RNG_IT) == RNG_IT_CEI) || ((RNG_IT) == RNG_IT_SEI))
+# 91 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rng.h"
+void RNG_DeInit(void);
 
-    virtual uint16_t read_last_sent(uint8_t ch) { return read(ch); }
-    virtual void read_last_sent(uint16_t* period_us, uint8_t len) { read(period_us, len); };
 
+void RNG_Cmd(FunctionalState NewState);
 
 
+uint32_t RNG_GetRandomNumber(void);
 
 
-    virtual void set_safety_pwm(uint32_t chmask, uint16_t period_us) {}
+void RNG_ITConfig(FunctionalState NewState);
+FlagStatus RNG_GetFlagStatus(uint8_t RNG_FLAG);
+void RNG_ClearFlag(uint8_t RNG_FLAG);
+ITStatus RNG_GetITStatus(uint8_t RNG_IT);
+void RNG_ClearITPendingBit(uint8_t RNG_IT);
 
 
+}
+# 46 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define __STM32F4xx_RTC_H 
 
 
-    virtual void set_failsafe_pwm(uint32_t chmask, uint16_t period_us) {}
+ extern "C" {
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+typedef struct
+{
+  uint32_t RTC_HourFormat;
 
 
+  uint32_t RTC_AsynchPrediv;
 
 
+  uint32_t RTC_SynchPrediv;
 
+}RTC_InitTypeDef;
 
-    virtual bool force_safety_on(void) { return false; }
 
 
 
+typedef struct
+{
+  uint8_t RTC_Hours;
 
-    virtual void force_safety_off(void) {}
 
 
 
+  uint8_t RTC_Minutes;
 
-    virtual void force_safety_no_wait(void) {}
 
+  uint8_t RTC_Seconds;
 
 
+  uint8_t RTC_H12;
 
+}RTC_TimeTypeDef;
 
 
 
-    virtual void set_esc_scaling(uint16_t min_pwm, uint16_t max_pwm) {}
 
+typedef struct
+{
+  uint8_t RTC_WeekDay;
 
 
+  uint8_t RTC_Month;
 
-    virtual bool enable_sbus_out(uint16_t rate_gz) { return false; }
 
+  uint8_t RTC_Date;
 
 
+  uint8_t RTC_Year;
 
-    enum output_mode {
-        MODE_PWM_NORMAL,
-        MODE_PWM_ONESHOT,
-        MODE_PWM_BRUSHED16KHZ
-    };
-    virtual void set_output_mode(enum output_mode mode) {}
-};
-# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/SPIDevice.h" 1
-# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/SPIDevice.h"
+}RTC_DateTypeDef;
        
 
 
 
+typedef struct
+{
+  RTC_TimeTypeDef RTC_AlarmTime;
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h" 1
-# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h"
+  uint32_t RTC_AlarmMask;
        
-# 27 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h"
-class AP_HAL::Device {
-public:
-    enum BusType {
-        BUS_TYPE_UNKNOWN = 0,
-        BUS_TYPE_I2C = 1,
-        BUS_TYPE_SPI = 2,
-        BUS_TYPE_UAVCAN = 3
-    };
 
-    enum Speed {
-        SPEED_HIGH,
-        SPEED_LOW,
-    };
+  uint32_t RTC_AlarmDateWeekDaySel;
 
-    typedef Functor<bool> PeriodicCb;
-    typedef void* PeriodicHandle;
 
-    Device(enum BusType type)
-    {
-        _bus_id.devid_s.bus_type = type;
-    }
+  uint8_t RTC_AlarmDateWeekDay;
 
 
-    enum BusType bus_type(void) const {
-        return _bus_id.devid_s.bus_type;
-    }
 
 
-    uint8_t bus_num(void) const {
-        return _bus_id.devid_s.bus;
-    }
+}RTC_AlarmTypeDef;
+# 133 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_HourFormat_24 ((uint32_t)0x00000000)
+#define RTC_HourFormat_12 ((uint32_t)0x00000040)
+#define IS_RTC_HOUR_FORMAT(FORMAT) (((FORMAT) == RTC_HourFormat_12) || ((FORMAT) == RTC_HourFormat_24))
+# 144 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_ASYNCH_PREDIV(PREDIV) ((PREDIV) <= 0x7F)
+# 154 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_SYNCH_PREDIV(PREDIV) ((PREDIV) <= 0x7FFF)
+# 163 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_HOUR12(HOUR) (((HOUR) > 0) && ((HOUR) <= 12))
+#define IS_RTC_HOUR24(HOUR) ((HOUR) <= 23)
+#define IS_RTC_MINUTES(MINUTES) ((MINUTES) <= 59)
+#define IS_RTC_SECONDS(SECONDS) ((SECONDS) <= 59)
+# 175 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_H12_AM ((uint8_t)0x00)
+#define RTC_H12_PM ((uint8_t)0x40)
+#define IS_RTC_H12(PM) (((PM) == RTC_H12_AM) || ((PM) == RTC_H12_PM))
+# 186 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_YEAR(YEAR) ((YEAR) <= 99)
+# 197 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_Month_January ((uint8_t)0x01)
+#define RTC_Month_February ((uint8_t)0x02)
+#define RTC_Month_March ((uint8_t)0x03)
+#define RTC_Month_April ((uint8_t)0x04)
+#define RTC_Month_May ((uint8_t)0x05)
+#define RTC_Month_June ((uint8_t)0x06)
+#define RTC_Month_July ((uint8_t)0x07)
+#define RTC_Month_August ((uint8_t)0x08)
+#define RTC_Month_September ((uint8_t)0x09)
+#define RTC_Month_October ((uint8_t)0x10)
+#define RTC_Month_November ((uint8_t)0x11)
+#define RTC_Month_December ((uint8_t)0x12)
+#define IS_RTC_MONTH(MONTH) (((MONTH) >= 1) && ((MONTH) <= 12))
+#define IS_RTC_DATE(DATE) (((DATE) >= 1) && ((DATE) <= 31))
+# 220 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_Weekday_Monday ((uint8_t)0x01)
+#define RTC_Weekday_Tuesday ((uint8_t)0x02)
+#define RTC_Weekday_Wednesday ((uint8_t)0x03)
+#define RTC_Weekday_Thursday ((uint8_t)0x04)
+#define RTC_Weekday_Friday ((uint8_t)0x05)
+#define RTC_Weekday_Saturday ((uint8_t)0x06)
+#define RTC_Weekday_Sunday ((uint8_t)0x07)
+#define IS_RTC_WEEKDAY(WEEKDAY) (((WEEKDAY) == RTC_Weekday_Monday) || ((WEEKDAY) == RTC_Weekday_Tuesday) || ((WEEKDAY) == RTC_Weekday_Wednesday) || ((WEEKDAY) == RTC_Weekday_Thursday) || ((WEEKDAY) == RTC_Weekday_Friday) || ((WEEKDAY) == RTC_Weekday_Saturday) || ((WEEKDAY) == RTC_Weekday_Sunday))
+# 242 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_ALARM_DATE_WEEKDAY_DATE(DATE) (((DATE) > 0) && ((DATE) <= 31))
+#define IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(WEEKDAY) (((WEEKDAY) == RTC_Weekday_Monday) || ((WEEKDAY) == RTC_Weekday_Tuesday) || ((WEEKDAY) == RTC_Weekday_Wednesday) || ((WEEKDAY) == RTC_Weekday_Thursday) || ((WEEKDAY) == RTC_Weekday_Friday) || ((WEEKDAY) == RTC_Weekday_Saturday) || ((WEEKDAY) == RTC_Weekday_Sunday))
+# 259 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_AlarmDateWeekDaySel_Date ((uint32_t)0x00000000)
+#define RTC_AlarmDateWeekDaySel_WeekDay ((uint32_t)0x40000000)
 
+#define IS_RTC_ALARM_DATE_WEEKDAY_SEL(SEL) (((SEL) == RTC_AlarmDateWeekDaySel_Date) || ((SEL) == RTC_AlarmDateWeekDaySel_WeekDay))
+# 273 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_AlarmMask_None ((uint32_t)0x00000000)
+#define RTC_AlarmMask_DateWeekDay ((uint32_t)0x80000000)
+#define RTC_AlarmMask_Hours ((uint32_t)0x00800000)
+#define RTC_AlarmMask_Minutes ((uint32_t)0x00008000)
+#define RTC_AlarmMask_Seconds ((uint32_t)0x00000080)
+#define RTC_AlarmMask_All ((uint32_t)0x80808080)
+#define IS_ALARM_MASK(MASK) (((MASK) & 0x7F7F7F7F) == (uint32_t)RESET)
+# 288 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_Alarm_A ((uint32_t)0x00000100)
+#define RTC_Alarm_B ((uint32_t)0x00000200)
+#define IS_RTC_ALARM(ALARM) (((ALARM) == RTC_Alarm_A) || ((ALARM) == RTC_Alarm_B))
+#define IS_RTC_CMD_ALARM(ALARM) (((ALARM) & (RTC_Alarm_A | RTC_Alarm_B)) != (uint32_t)RESET)
+# 300 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_AlarmSubSecondMask_All ((uint32_t)0x00000000)
 
-    uint32_t get_bus_id(void) const {
-        return _bus_id.devid;
-    }
 
+#define RTC_AlarmSubSecondMask_SS14_1 ((uint32_t)0x01000000)
 
-    uint8_t get_bus_address(void) const {
-        return _bus_id.devid_s.address;
-    }
+#define RTC_AlarmSubSecondMask_SS14_2 ((uint32_t)0x02000000)
 
+#define RTC_AlarmSubSecondMask_SS14_3 ((uint32_t)0x03000000)
 
-    void set_device_type(uint8_t devtype) {
-        _bus_id.devid_s.devtype = devtype;
-    }
+#define RTC_AlarmSubSecondMask_SS14_4 ((uint32_t)0x04000000)
 
+#define RTC_AlarmSubSecondMask_SS14_5 ((uint32_t)0x05000000)
 
-    virtual ~Device() {
-        if (_checked.regs != nullptr) {
-            delete[] _checked.regs;
-        }
-    }
-# 88 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h"
-    virtual bool set_speed(Speed speed) = 0;
+#define RTC_AlarmSubSecondMask_SS14_6 ((uint32_t)0x06000000)
 
+#define RTC_AlarmSubSecondMask_SS14_7 ((uint32_t)0x07000000)
 
+#define RTC_AlarmSubSecondMask_SS14_8 ((uint32_t)0x08000000)
 
+#define RTC_AlarmSubSecondMask_SS14_9 ((uint32_t)0x09000000)
 
+#define RTC_AlarmSubSecondMask_SS14_10 ((uint32_t)0x0A000000)
 
+#define RTC_AlarmSubSecondMask_SS14_11 ((uint32_t)0x0B000000)
 
+#define RTC_AlarmSubSecondMask_SS14_12 ((uint32_t)0x0C000000)
 
-    virtual bool transfer(const uint8_t *send, uint32_t send_len,
-                          uint8_t *recv, uint32_t recv_len) = 0;
-# 107 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h"
-    bool read_registers(uint8_t first_reg, uint8_t *recv, uint32_t recv_len)
-    {
-        first_reg |= _read_flag;
-        return transfer(&first_reg, 1, recv, recv_len);
-    }
+#define RTC_AlarmSubSecondMask_SS14_13 ((uint32_t)0x0D000000)
 
+#define RTC_AlarmSubSecondMask_SS14 ((uint32_t)0x0E000000)
 
+#define RTC_AlarmSubSecondMask_None ((uint32_t)0x0F000000)
 
+#define IS_RTC_ALARM_SUB_SECOND_MASK(MASK) (((MASK) == RTC_AlarmSubSecondMask_All) || ((MASK) == RTC_AlarmSubSecondMask_SS14_1) || ((MASK) == RTC_AlarmSubSecondMask_SS14_2) || ((MASK) == RTC_AlarmSubSecondMask_SS14_3) || ((MASK) == RTC_AlarmSubSecondMask_SS14_4) || ((MASK) == RTC_AlarmSubSecondMask_SS14_5) || ((MASK) == RTC_AlarmSubSecondMask_SS14_6) || ((MASK) == RTC_AlarmSubSecondMask_SS14_7) || ((MASK) == RTC_AlarmSubSecondMask_SS14_8) || ((MASK) == RTC_AlarmSubSecondMask_SS14_9) || ((MASK) == RTC_AlarmSubSecondMask_SS14_10) || ((MASK) == RTC_AlarmSubSecondMask_SS14_11) || ((MASK) == RTC_AlarmSubSecondMask_SS14_12) || ((MASK) == RTC_AlarmSubSecondMask_SS14_13) || ((MASK) == RTC_AlarmSubSecondMask_SS14) || ((MASK) == RTC_AlarmSubSecondMask_None))
+# 357 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_ALARM_SUB_SECOND_VALUE(VALUE) ((VALUE) <= 0x00007FFF)
+# 366 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_WakeUpClock_RTCCLK_Div16 ((uint32_t)0x00000000)
+#define RTC_WakeUpClock_RTCCLK_Div8 ((uint32_t)0x00000001)
+#define RTC_WakeUpClock_RTCCLK_Div4 ((uint32_t)0x00000002)
+#define RTC_WakeUpClock_RTCCLK_Div2 ((uint32_t)0x00000003)
+#define RTC_WakeUpClock_CK_SPRE_16bits ((uint32_t)0x00000004)
+#define RTC_WakeUpClock_CK_SPRE_17bits ((uint32_t)0x00000006)
+#define IS_RTC_WAKEUP_CLOCK(CLOCK) (((CLOCK) == RTC_WakeUpClock_RTCCLK_Div16) || ((CLOCK) == RTC_WakeUpClock_RTCCLK_Div8) || ((CLOCK) == RTC_WakeUpClock_RTCCLK_Div4) || ((CLOCK) == RTC_WakeUpClock_RTCCLK_Div2) || ((CLOCK) == RTC_WakeUpClock_CK_SPRE_16bits) || ((CLOCK) == RTC_WakeUpClock_CK_SPRE_17bits))
 
 
 
-    bool read_uint16_le(uint8_t first_reg, uint16_t &value);
 
 
+#define IS_RTC_WAKEUP_COUNTER(COUNTER) ((COUNTER) <= 0xFFFF)
 
 
 
 
-    bool read_uint16_be(uint8_t first_reg, uint16_t &value);
 
 
 
+#define RTC_TimeStampEdge_Rising ((uint32_t)0x00000000)
+#define RTC_TimeStampEdge_Falling ((uint32_t)0x00000008)
+#define IS_RTC_TIMESTAMP_EDGE(EDGE) (((EDGE) == RTC_TimeStampEdge_Rising) || ((EDGE) == RTC_TimeStampEdge_Falling))
+# 397 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_Output_Disable ((uint32_t)0x00000000)
+#define RTC_Output_AlarmA ((uint32_t)0x00200000)
+#define RTC_Output_AlarmB ((uint32_t)0x00400000)
+#define RTC_Output_WakeUp ((uint32_t)0x00600000)
 
+#define IS_RTC_OUTPUT(OUTPUT) (((OUTPUT) == RTC_Output_Disable) || ((OUTPUT) == RTC_Output_AlarmA) || ((OUTPUT) == RTC_Output_AlarmB) || ((OUTPUT) == RTC_Output_WakeUp))
+# 414 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_OutputPolarity_High ((uint32_t)0x00000000)
+#define RTC_OutputPolarity_Low ((uint32_t)0x00100000)
+#define IS_RTC_OUTPUT_POL(POL) (((POL) == RTC_OutputPolarity_High) || ((POL) == RTC_OutputPolarity_Low))
+# 426 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_CalibSign_Positive ((uint32_t)0x00000000)
+#define RTC_CalibSign_Negative ((uint32_t)0x00000080)
+#define IS_RTC_CALIB_SIGN(SIGN) (((SIGN) == RTC_CalibSign_Positive) || ((SIGN) == RTC_CalibSign_Negative))
 
+#define IS_RTC_CALIB_VALUE(VALUE) ((VALUE) < 0x20)
+# 439 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_CalibOutput_512Hz ((uint32_t)0x00000000)
+#define RTC_CalibOutput_1Hz ((uint32_t)0x00080000)
+#define IS_RTC_CALIB_OUTPUT(OUTPUT) (((OUTPUT) == RTC_CalibOutput_512Hz) || ((OUTPUT) == RTC_CalibOutput_1Hz))
+# 450 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_SmoothCalibPeriod_32sec ((uint32_t)0x00000000)
 
+#define RTC_SmoothCalibPeriod_16sec ((uint32_t)0x00002000)
 
-    bool write_register(uint8_t reg, uint8_t val, bool checked=false)
-    {
-        uint8_t buf[2] = { reg, val };
-        if (checked) {
-            set_checked_register(reg, val);
-        }
-        return transfer(buf, sizeof(buf), nullptr, 0);
-    }
+#define RTC_SmoothCalibPeriod_8sec ((uint32_t)0x00004000)
 
+#define IS_RTC_SMOOTH_CALIB_PERIOD(PERIOD) (((PERIOD) == RTC_SmoothCalibPeriod_32sec) || ((PERIOD) == RTC_SmoothCalibPeriod_16sec) || ((PERIOD) == RTC_SmoothCalibPeriod_8sec))
+# 467 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_SmoothCalibPlusPulses_Set ((uint32_t)0x00008000)
 
 
+#define RTC_SmoothCalibPlusPulses_Reset ((uint32_t)0x00000000)
 
-    void set_checked_register(uint8_t reg, uint8_t val);
+#define IS_RTC_SMOOTH_CALIB_PLUS(PLUS) (((PLUS) == RTC_SmoothCalibPlusPulses_Set) || ((PLUS) == RTC_SmoothCalibPlusPulses_Reset))
+# 482 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_SMOOTH_CALIB_MINUS(VALUE) ((VALUE) <= 0x000001FF)
+# 491 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_DayLightSaving_SUB1H ((uint32_t)0x00020000)
+#define RTC_DayLightSaving_ADD1H ((uint32_t)0x00010000)
+#define IS_RTC_DAYLIGHT_SAVING(SAVE) (((SAVE) == RTC_DayLightSaving_SUB1H) || ((SAVE) == RTC_DayLightSaving_ADD1H))
 
 
+#define RTC_StoreOperation_Reset ((uint32_t)0x00000000)
+#define RTC_StoreOperation_Set ((uint32_t)0x00040000)
+#define IS_RTC_STORE_OPERATION(OPERATION) (((OPERATION) == RTC_StoreOperation_Reset) || ((OPERATION) == RTC_StoreOperation_Set))
+# 507 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_TamperTrigger_RisingEdge ((uint32_t)0x00000000)
+#define RTC_TamperTrigger_FallingEdge ((uint32_t)0x00000001)
+#define RTC_TamperTrigger_LowLevel ((uint32_t)0x00000000)
+#define RTC_TamperTrigger_HighLevel ((uint32_t)0x00000001)
+#define IS_RTC_TAMPER_TRIGGER(TRIGGER) (((TRIGGER) == RTC_TamperTrigger_RisingEdge) || ((TRIGGER) == RTC_TamperTrigger_FallingEdge) || ((TRIGGER) == RTC_TamperTrigger_LowLevel) || ((TRIGGER) == RTC_TamperTrigger_HighLevel))
+# 523 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_TamperFilter_Disable ((uint32_t)0x00000000)
 
+#define RTC_TamperFilter_2Sample ((uint32_t)0x00000800)
 
+#define RTC_TamperFilter_4Sample ((uint32_t)0x00001000)
 
-    bool setup_checked_registers(uint8_t num_regs, uint8_t frequency=10);
+#define RTC_TamperFilter_8Sample ((uint32_t)0x00001800)
 
+#define IS_RTC_TAMPER_FILTER(FILTER) (((FILTER) == RTC_TamperFilter_Disable) || ((FILTER) == RTC_TamperFilter_2Sample) || ((FILTER) == RTC_TamperFilter_4Sample) || ((FILTER) == RTC_TamperFilter_8Sample))
+# 542 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_TamperSamplingFreq_RTCCLK_Div32768 ((uint32_t)0x00000000)
 
+#define RTC_TamperSamplingFreq_RTCCLK_Div16384 ((uint32_t)0x000000100)
 
+#define RTC_TamperSamplingFreq_RTCCLK_Div8192 ((uint32_t)0x00000200)
 
+#define RTC_TamperSamplingFreq_RTCCLK_Div4096 ((uint32_t)0x00000300)
 
-    bool check_next_register(void);
+#define RTC_TamperSamplingFreq_RTCCLK_Div2048 ((uint32_t)0x00000400)
 
+#define RTC_TamperSamplingFreq_RTCCLK_Div1024 ((uint32_t)0x00000500)
 
+#define RTC_TamperSamplingFreq_RTCCLK_Div512 ((uint32_t)0x00000600)
 
+#define RTC_TamperSamplingFreq_RTCCLK_Div256 ((uint32_t)0x00000700)
 
+#define IS_RTC_TAMPER_SAMPLING_FREQ(FREQ) (((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div32768) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div16384) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div8192) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div4096) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div2048) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div1024) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div512) || ((FREQ) ==RTC_TamperSamplingFreq_RTCCLK_Div256))
+# 574 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_TamperPrechargeDuration_1RTCCLK ((uint32_t)0x00000000)
 
+#define RTC_TamperPrechargeDuration_2RTCCLK ((uint32_t)0x00002000)
 
-    bool read(uint8_t *recv, uint32_t recv_len)
-    {
-        return transfer(nullptr, 0, recv, recv_len);
-    }
+#define RTC_TamperPrechargeDuration_4RTCCLK ((uint32_t)0x00004000)
 
+#define RTC_TamperPrechargeDuration_8RTCCLK ((uint32_t)0x00006000)
 
 
+#define IS_RTC_TAMPER_PRECHARGE_DURATION(DURATION) (((DURATION) == RTC_TamperPrechargeDuration_1RTCCLK) || ((DURATION) == RTC_TamperPrechargeDuration_2RTCCLK) || ((DURATION) == RTC_TamperPrechargeDuration_4RTCCLK) || ((DURATION) == RTC_TamperPrechargeDuration_8RTCCLK))
+# 594 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_Tamper_1 RTC_TAFCR_TAMP1E
+#define IS_RTC_TAMPER(TAMPER) (((TAMPER) == RTC_Tamper_1))
+# 604 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_TamperPin_PC13 ((uint32_t)0x00000000)
+#define RTC_TamperPin_PI8 ((uint32_t)0x00010000)
+#define IS_RTC_TAMPER_PIN(PIN) (((PIN) == RTC_TamperPin_PC13) || ((PIN) == RTC_TamperPin_PI8))
+# 615 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_TimeStampPin_PC13 ((uint32_t)0x00000000)
+#define RTC_TimeStampPin_PI8 ((uint32_t)0x00020000)
+#define IS_RTC_TIMESTAMP_PIN(PIN) (((PIN) == RTC_TimeStampPin_PC13) || ((PIN) == RTC_TimeStampPin_PI8))
+# 626 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_OutputType_OpenDrain ((uint32_t)0x00000000)
+#define RTC_OutputType_PushPull ((uint32_t)0x00040000)
+#define IS_RTC_OUTPUT_TYPE(TYPE) (((TYPE) == RTC_OutputType_OpenDrain) || ((TYPE) == RTC_OutputType_PushPull))
+# 638 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_ShiftAdd1S_Reset ((uint32_t)0x00000000)
+#define RTC_ShiftAdd1S_Set ((uint32_t)0x80000000)
+#define IS_RTC_SHIFT_ADD1S(SEL) (((SEL) == RTC_ShiftAdd1S_Reset) || ((SEL) == RTC_ShiftAdd1S_Set))
+# 649 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define IS_RTC_SHIFT_SUBFS(FS) ((FS) <= 0x00007FFF)
+# 659 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_BKP_DR0 ((uint32_t)0x00000000)
+#define RTC_BKP_DR1 ((uint32_t)0x00000001)
+#define RTC_BKP_DR2 ((uint32_t)0x00000002)
+#define RTC_BKP_DR3 ((uint32_t)0x00000003)
+#define RTC_BKP_DR4 ((uint32_t)0x00000004)
+#define RTC_BKP_DR5 ((uint32_t)0x00000005)
+#define RTC_BKP_DR6 ((uint32_t)0x00000006)
+#define RTC_BKP_DR7 ((uint32_t)0x00000007)
+#define RTC_BKP_DR8 ((uint32_t)0x00000008)
+#define RTC_BKP_DR9 ((uint32_t)0x00000009)
+#define RTC_BKP_DR10 ((uint32_t)0x0000000A)
+#define RTC_BKP_DR11 ((uint32_t)0x0000000B)
+#define RTC_BKP_DR12 ((uint32_t)0x0000000C)
+#define RTC_BKP_DR13 ((uint32_t)0x0000000D)
+#define RTC_BKP_DR14 ((uint32_t)0x0000000E)
+#define RTC_BKP_DR15 ((uint32_t)0x0000000F)
+#define RTC_BKP_DR16 ((uint32_t)0x00000010)
+#define RTC_BKP_DR17 ((uint32_t)0x00000011)
+#define RTC_BKP_DR18 ((uint32_t)0x00000012)
+#define RTC_BKP_DR19 ((uint32_t)0x00000013)
+#define IS_RTC_BKP(BKP) (((BKP) == RTC_BKP_DR0) || ((BKP) == RTC_BKP_DR1) || ((BKP) == RTC_BKP_DR2) || ((BKP) == RTC_BKP_DR3) || ((BKP) == RTC_BKP_DR4) || ((BKP) == RTC_BKP_DR5) || ((BKP) == RTC_BKP_DR6) || ((BKP) == RTC_BKP_DR7) || ((BKP) == RTC_BKP_DR8) || ((BKP) == RTC_BKP_DR9) || ((BKP) == RTC_BKP_DR10) || ((BKP) == RTC_BKP_DR11) || ((BKP) == RTC_BKP_DR12) || ((BKP) == RTC_BKP_DR13) || ((BKP) == RTC_BKP_DR14) || ((BKP) == RTC_BKP_DR15) || ((BKP) == RTC_BKP_DR16) || ((BKP) == RTC_BKP_DR17) || ((BKP) == RTC_BKP_DR18) || ((BKP) == RTC_BKP_DR19))
+# 706 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_Format_BIN ((uint32_t)0x000000000)
+#define RTC_Format_BCD ((uint32_t)0x000000001)
+#define IS_RTC_FORMAT(FORMAT) (((FORMAT) == RTC_Format_BIN) || ((FORMAT) == RTC_Format_BCD))
+# 717 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_FLAG_RECALPF ((uint32_t)0x00010000)
+#define RTC_FLAG_TAMP1F ((uint32_t)0x00002000)
+#define RTC_FLAG_TSOVF ((uint32_t)0x00001000)
+#define RTC_FLAG_TSF ((uint32_t)0x00000800)
+#define RTC_FLAG_WUTF ((uint32_t)0x00000400)
+#define RTC_FLAG_ALRBF ((uint32_t)0x00000200)
+#define RTC_FLAG_ALRAF ((uint32_t)0x00000100)
+#define RTC_FLAG_INITF ((uint32_t)0x00000040)
+#define RTC_FLAG_RSF ((uint32_t)0x00000020)
+#define RTC_FLAG_INITS ((uint32_t)0x00000010)
+#define RTC_FLAG_SHPF ((uint32_t)0x00000008)
+#define RTC_FLAG_WUTWF ((uint32_t)0x00000004)
+#define RTC_FLAG_ALRBWF ((uint32_t)0x00000002)
+#define RTC_FLAG_ALRAWF ((uint32_t)0x00000001)
+#define IS_RTC_GET_FLAG(FLAG) (((FLAG) == RTC_FLAG_TSOVF) || ((FLAG) == RTC_FLAG_TSF) || ((FLAG) == RTC_FLAG_WUTF) || ((FLAG) == RTC_FLAG_ALRBF) || ((FLAG) == RTC_FLAG_ALRAF) || ((FLAG) == RTC_FLAG_INITF) || ((FLAG) == RTC_FLAG_RSF) || ((FLAG) == RTC_FLAG_WUTWF) || ((FLAG) == RTC_FLAG_ALRBWF) || ((FLAG) == RTC_FLAG_ALRAWF) || ((FLAG) == RTC_FLAG_TAMP1F) || ((FLAG) == RTC_FLAG_RECALPF) || ((FLAG) == RTC_FLAG_SHPF))
 
 
-    virtual AP_HAL::Semaphore *get_semaphore() = 0;
-# 189 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h"
-    virtual PeriodicHandle register_periodic_callback(uint32_t period_usec, PeriodicCb) = 0;
-# 198 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Device.h"
-    virtual bool adjust_periodic_callback(PeriodicHandle h, uint32_t period_usec) = 0;
 
 
 
 
+#define IS_RTC_CLEAR_FLAG(FLAG) (((FLAG) != (uint32_t)RESET) && (((FLAG) & 0xFFFF00DF) == (uint32_t)RESET))
 
 
 
-    virtual bool unregister_callback(PeriodicHandle h) { return false; }
 
 
 
 
+#define RTC_IT_TS ((uint32_t)0x00008000)
+#define RTC_IT_WUT ((uint32_t)0x00004000)
+#define RTC_IT_ALRB ((uint32_t)0x00002000)
+#define RTC_IT_ALRA ((uint32_t)0x00001000)
+#define RTC_IT_TAMP ((uint32_t)0x00000004)
+#define RTC_IT_TAMP1 ((uint32_t)0x00020000)
 
+#define IS_RTC_CONFIG_IT(IT) (((IT) != (uint32_t)RESET) && (((IT) & 0xFFFF0FFB) == (uint32_t)RESET))
+#define IS_RTC_GET_IT(IT) (((IT) == RTC_IT_TS) || ((IT) == RTC_IT_WUT) || ((IT) == RTC_IT_ALRB) || ((IT) == RTC_IT_ALRA) || ((IT) == RTC_IT_TAMP1))
 
-    virtual bool set_chip_select(bool set) { return false; }
 
+#define IS_RTC_CLEAR_IT(IT) (((IT) != (uint32_t)RESET) && (((IT) & 0xFFFD0FFF) == (uint32_t)RESET))
+# 766 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+#define RTC_DigitalCalibConfig RTC_CoarseCalibConfig
+#define RTC_DigitalCalibCmd RTC_CoarseCalibCmd
+# 781 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
+ErrorStatus RTC_DeInit(void);
 
 
+ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct);
+void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct);
+void RTC_WriteProtectionCmd(FunctionalState NewState);
+ErrorStatus RTC_EnterInitMode(void);
+void RTC_ExitInitMode(void);
+ErrorStatus RTC_WaitForSynchro(void);
+ErrorStatus RTC_RefClockCmd(FunctionalState NewState);
+void RTC_BypassShadowCmd(FunctionalState NewState);
 
 
+ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct);
+void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct);
+void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct);
+uint32_t RTC_GetSubSecond(void);
+ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct);
+void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct);
+void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct);
 
-    void set_read_flag(uint8_t flag)
-    {
-        _read_flag = flag;
-    }
 
+void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct);
+void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct);
+void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct);
+ErrorStatus RTC_AlarmCmd(uint32_t RTC_Alarm, FunctionalState NewState);
+void RTC_AlarmSubSecondConfig(uint32_t RTC_Alarm, uint32_t RTC_AlarmSubSecondValue, uint32_t RTC_AlarmSubSecondMask);
+uint32_t RTC_GetAlarmSubSecond(uint32_t RTC_Alarm);
 
 
+void RTC_WakeUpClockConfig(uint32_t RTC_WakeUpClock);
+void RTC_SetWakeUpCounter(uint32_t RTC_WakeUpCounter);
+uint32_t RTC_GetWakeUpCounter(void);
+ErrorStatus RTC_WakeUpCmd(FunctionalState NewState);
 
 
+void RTC_DayLightSavingConfig(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation);
+uint32_t RTC_GetStoreOperation(void);
 
 
-    static uint32_t make_bus_id(enum BusType bus_type, uint8_t bus, uint8_t address, uint8_t devtype) {
-        union DeviceId d;
-        d.devid_s.bus_type = bus_type;
-        d.devid_s.bus = bus;
-        d.devid_s.address = address;
-        d.devid_s.devtype = devtype;
-        return d.devid;
-    }
+void RTC_OutputConfig(uint32_t RTC_Output, uint32_t RTC_OutputPolarity);
 
 
+ErrorStatus RTC_CoarseCalibConfig(uint32_t RTC_CalibSign, uint32_t Value);
+ErrorStatus RTC_CoarseCalibCmd(FunctionalState NewState);
+void RTC_CalibOutputCmd(FunctionalState NewState);
+void RTC_CalibOutputConfig(uint32_t RTC_CalibOutput);
+ErrorStatus RTC_SmoothCalibConfig(uint32_t RTC_SmoothCalibPeriod,
+                                  uint32_t RTC_SmoothCalibPlusPulses,
+                                  uint32_t RTC_SmouthCalibMinusPulsesValue);
 
 
+void RTC_TimeStampCmd(uint32_t RTC_TimeStampEdge, FunctionalState NewState);
+void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct,
+                                      RTC_DateTypeDef* RTC_StampDateStruct);
+uint32_t RTC_GetTimeStampSubSecond(void);
 
-    static uint32_t change_bus_id(uint32_t old_id, uint8_t devtype) {
-        union DeviceId d;
-        d.devid = old_id;
-        d.devid_s.devtype = devtype;
-        return d.devid;
-    }
 
+void RTC_TamperTriggerConfig(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger);
+void RTC_TamperCmd(uint32_t RTC_Tamper, FunctionalState NewState);
+void RTC_TamperFilterConfig(uint32_t RTC_TamperFilter);
+void RTC_TamperSamplingFreqConfig(uint32_t RTC_TamperSamplingFreq);
+void RTC_TamperPinsPrechargeDuration(uint32_t RTC_TamperPrechargeDuration);
+void RTC_TimeStampOnTamperDetectionCmd(FunctionalState NewState);
+void RTC_TamperPullUpCmd(FunctionalState NewState);
 
 
+void RTC_WriteBackupRegister(uint32_t RTC_BKP_DR, uint32_t Data);
+uint32_t RTC_ReadBackupRegister(uint32_t RTC_BKP_DR);
 
-    uint32_t get_bus_id_devtype(uint8_t devtype) {
-        return change_bus_id(get_bus_id(), devtype);
-    }
 
 
-    virtual void set_retries(uint8_t retries) {};
+void RTC_TamperPinSelection(uint32_t RTC_TamperPin);
+void RTC_TimeStampPinSelection(uint32_t RTC_TimeStampPin);
+void RTC_OutputTypeConfig(uint32_t RTC_OutputType);
 
-protected:
-    uint8_t _read_flag = 0;
 
+ErrorStatus RTC_SynchroShiftConfig(uint32_t RTC_ShiftAdd1S, uint32_t RTC_ShiftSubFS);
 
 
+void RTC_ITConfig(uint32_t RTC_IT, FunctionalState NewState);
+FlagStatus RTC_GetFlagStatus(uint32_t RTC_FLAG);
+void RTC_ClearFlag(uint32_t RTC_FLAG);
+ITStatus RTC_GetITStatus(uint32_t RTC_IT);
+void RTC_ClearITPendingBit(uint32_t RTC_IT);
 
 
+}
+# 47 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define __STM32F4xx_SDIO_H 
 
 
-    struct DeviceStructure {
-        enum BusType bus_type : 3;
-        uint8_t bus: 5;
-        uint8_t address;
-        uint8_t devtype;
-    };
+ extern "C" {
+# 50 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+typedef struct
+{
+  uint32_t SDIO_ClockEdge;
 
-    union DeviceId {
-        struct DeviceStructure devid_s;
-        uint32_t devid;
-    };
 
-    union DeviceId _bus_id;
+  uint32_t SDIO_ClockBypass;
 
 
-    void set_device_address(uint8_t address) {
-        _bus_id.devid_s.address = address;
-    }
 
+  uint32_t SDIO_ClockPowerSave;
 
-    void set_device_bus(uint8_t bus) {
-        _bus_id.devid_s.bus = bus;
-    }
 
-private:
 
-    struct checkreg {
-        uint8_t regnum;
-        uint8_t value;
-    };
-    struct {
-        uint8_t n_allocated;
-        uint8_t n_set;
-        uint8_t next;
-        uint8_t frequency;
-        uint8_t counter;
-        struct checkreg *regs;
-    } _checked;
-};
-# 23 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/SPIDevice.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/OwnPtr.h" 1
-# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/OwnPtr.h"
+  uint32_t SDIO_BusWide;
        
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/cstddef" 1
+  uint32_t SDIO_HardwareFlowControl;
        
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cstddef" 1
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cstddef"
-#define __INCLUDE_CXX_CSTDDEF 
-# 52 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/cxx/cstddef"
-namespace std
+  uint8_t SDIO_ClockDiv;
+
+
+} SDIO_InitTypeDef;
+
+typedef struct
 {
+  uint32_t SDIO_Argument;
 
 
-  using ::float32;
 
 
+  uint32_t SDIO_CmdIndex;
 
+  uint32_t SDIO_Response;
 
-  using ::double_t;
-  using ::float64;
 
-  using ::mode_t;
-  using ::size_t;
-  using ::ssize_t;
-  using ::off_t;
-  using ::blksize_t;
-  using ::blkcnt_t;
-  using ::fpos_t;
-  using ::uid_t;
-  using ::gid_t;
-  using ::dev_t;
-  using ::ino_t;
-  using ::pid_t;
+  uint32_t SDIO_Wait;
 
-  using ::socklen_t;
-  using ::sa_family_t;
-}
-# 4 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Common/missing/cstddef" 2
 
+  uint32_t SDIO_CPSM;
 
 
-namespace std {
-    typedef decltype(nullptr) nullptr_t;
-}
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/OwnPtr.h" 2
+} SDIO_CmdInitTypeDef;
 
-namespace AP_HAL {
-# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/OwnPtr.h"
-template<typename T>
-class OwnPtr {
-public:
-    OwnPtr() : _ptr(nullptr) { }
-    OwnPtr(std::nullptr_t) : _ptr(nullptr) { }
+typedef struct
+{
+  uint32_t SDIO_DataTimeOut;
 
+  uint32_t SDIO_DataLength;
 
-    OwnPtr(const OwnPtr<T> &other) = delete;
+  uint32_t SDIO_DataBlockSize;
 
 
-    template<typename U>
-    OwnPtr(OwnPtr<U>&& other) : _ptr(other.leak()) { }
+  uint32_t SDIO_TransferDir;
 
-    OwnPtr(T *ptr) : _ptr(ptr) { }
 
-    OwnPtr<T>& operator=(std::nullptr_t) { clear(); return *this; }
 
-    template<typename U>
-    OwnPtr<T>& operator=(OwnPtr<U>&& other)
-    {
-        T *old = _ptr;
-        _ptr = other.leak();
-        delete old;
-        return *this;
-    }
+  uint32_t SDIO_TransferMode;
+
+
+  uint32_t SDIO_DPSM;
+
+
+} SDIO_DataInitTypeDef;
+# 126 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_ClockEdge_Rising ((uint32_t)0x00000000)
+#define SDIO_ClockEdge_Falling ((uint32_t)0x00002000)
+#define IS_SDIO_CLOCK_EDGE(EDGE) (((EDGE) == SDIO_ClockEdge_Rising) || ((EDGE) == SDIO_ClockEdge_Falling))
+# 138 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_ClockBypass_Disable ((uint32_t)0x00000000)
+#define SDIO_ClockBypass_Enable ((uint32_t)0x00000400)
+#define IS_SDIO_CLOCK_BYPASS(BYPASS) (((BYPASS) == SDIO_ClockBypass_Disable) || ((BYPASS) == SDIO_ClockBypass_Enable))
+# 150 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_ClockPowerSave_Disable ((uint32_t)0x00000000)
+#define SDIO_ClockPowerSave_Enable ((uint32_t)0x00000200)
+#define IS_SDIO_CLOCK_POWER_SAVE(SAVE) (((SAVE) == SDIO_ClockPowerSave_Disable) || ((SAVE) == SDIO_ClockPowerSave_Enable))
+# 162 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_BusWide_1b ((uint32_t)0x00000000)
+#define SDIO_BusWide_4b ((uint32_t)0x00000800)
+#define SDIO_BusWide_8b ((uint32_t)0x00001000)
+#define IS_SDIO_BUS_WIDE(WIDE) (((WIDE) == SDIO_BusWide_1b) || ((WIDE) == SDIO_BusWide_4b) || ((WIDE) == SDIO_BusWide_8b))
+# 176 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_HardwareFlowControl_Disable ((uint32_t)0x00000000)
+#define SDIO_HardwareFlowControl_Enable ((uint32_t)0x00004000)
+#define IS_SDIO_HARDWARE_FLOW_CONTROL(CONTROL) (((CONTROL) == SDIO_HardwareFlowControl_Disable) || ((CONTROL) == SDIO_HardwareFlowControl_Enable))
+# 188 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_PowerState_OFF ((uint32_t)0x00000000)
+#define SDIO_PowerState_ON ((uint32_t)0x00000003)
+#define IS_SDIO_POWER_STATE(STATE) (((STATE) == SDIO_PowerState_OFF) || ((STATE) == SDIO_PowerState_ON))
+# 200 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_IT_CCRCFAIL ((uint32_t)0x00000001)
+#define SDIO_IT_DCRCFAIL ((uint32_t)0x00000002)
+#define SDIO_IT_CTIMEOUT ((uint32_t)0x00000004)
+#define SDIO_IT_DTIMEOUT ((uint32_t)0x00000008)
+#define SDIO_IT_TXUNDERR ((uint32_t)0x00000010)
+#define SDIO_IT_RXOVERR ((uint32_t)0x00000020)
+#define SDIO_IT_CMDREND ((uint32_t)0x00000040)
+#define SDIO_IT_CMDSENT ((uint32_t)0x00000080)
+#define SDIO_IT_DATAEND ((uint32_t)0x00000100)
+#define SDIO_IT_STBITERR ((uint32_t)0x00000200)
+#define SDIO_IT_DBCKEND ((uint32_t)0x00000400)
+#define SDIO_IT_CMDACT ((uint32_t)0x00000800)
+#define SDIO_IT_TXACT ((uint32_t)0x00001000)
+#define SDIO_IT_RXACT ((uint32_t)0x00002000)
+#define SDIO_IT_TXFIFOHE ((uint32_t)0x00004000)
+#define SDIO_IT_RXFIFOHF ((uint32_t)0x00008000)
+#define SDIO_IT_TXFIFOF ((uint32_t)0x00010000)
+#define SDIO_IT_RXFIFOF ((uint32_t)0x00020000)
+#define SDIO_IT_TXFIFOE ((uint32_t)0x00040000)
+#define SDIO_IT_RXFIFOE ((uint32_t)0x00080000)
+#define SDIO_IT_TXDAVL ((uint32_t)0x00100000)
+#define SDIO_IT_RXDAVL ((uint32_t)0x00200000)
+#define SDIO_IT_SDIOIT ((uint32_t)0x00400000)
+#define SDIO_IT_CEATAEND ((uint32_t)0x00800000)
+#define IS_SDIO_IT(IT) ((((IT) & (uint32_t)0xFF000000) == 0x00) && ((IT) != (uint32_t)0x00))
+# 233 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define IS_SDIO_CMD_INDEX(INDEX) ((INDEX) < 0x40)
+# 242 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_Response_No ((uint32_t)0x00000000)
+#define SDIO_Response_Short ((uint32_t)0x00000040)
+#define SDIO_Response_Long ((uint32_t)0x000000C0)
+#define IS_SDIO_RESPONSE(RESPONSE) (((RESPONSE) == SDIO_Response_No) || ((RESPONSE) == SDIO_Response_Short) || ((RESPONSE) == SDIO_Response_Long))
+# 256 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_Wait_No ((uint32_t)0x00000000)
+#define SDIO_Wait_IT ((uint32_t)0x00000100)
+#define SDIO_Wait_Pend ((uint32_t)0x00000200)
+#define IS_SDIO_WAIT(WAIT) (((WAIT) == SDIO_Wait_No) || ((WAIT) == SDIO_Wait_IT) || ((WAIT) == SDIO_Wait_Pend))
+# 269 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_CPSM_Disable ((uint32_t)0x00000000)
+#define SDIO_CPSM_Enable ((uint32_t)0x00000400)
+#define IS_SDIO_CPSM(CPSM) (((CPSM) == SDIO_CPSM_Enable) || ((CPSM) == SDIO_CPSM_Disable))
+# 280 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_RESP1 ((uint32_t)0x00000000)
+#define SDIO_RESP2 ((uint32_t)0x00000004)
+#define SDIO_RESP3 ((uint32_t)0x00000008)
+#define SDIO_RESP4 ((uint32_t)0x0000000C)
+#define IS_SDIO_RESP(RESP) (((RESP) == SDIO_RESP1) || ((RESP) == SDIO_RESP2) || ((RESP) == SDIO_RESP3) || ((RESP) == SDIO_RESP4))
+# 294 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define IS_SDIO_DATA_LENGTH(LENGTH) ((LENGTH) <= 0x01FFFFFF)
+# 303 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_DataBlockSize_1b ((uint32_t)0x00000000)
+#define SDIO_DataBlockSize_2b ((uint32_t)0x00000010)
+#define SDIO_DataBlockSize_4b ((uint32_t)0x00000020)
+#define SDIO_DataBlockSize_8b ((uint32_t)0x00000030)
+#define SDIO_DataBlockSize_16b ((uint32_t)0x00000040)
+#define SDIO_DataBlockSize_32b ((uint32_t)0x00000050)
+#define SDIO_DataBlockSize_64b ((uint32_t)0x00000060)
+#define SDIO_DataBlockSize_128b ((uint32_t)0x00000070)
+#define SDIO_DataBlockSize_256b ((uint32_t)0x00000080)
+#define SDIO_DataBlockSize_512b ((uint32_t)0x00000090)
+#define SDIO_DataBlockSize_1024b ((uint32_t)0x000000A0)
+#define SDIO_DataBlockSize_2048b ((uint32_t)0x000000B0)
+#define SDIO_DataBlockSize_4096b ((uint32_t)0x000000C0)
+#define SDIO_DataBlockSize_8192b ((uint32_t)0x000000D0)
+#define SDIO_DataBlockSize_16384b ((uint32_t)0x000000E0)
+#define IS_SDIO_BLOCK_SIZE(SIZE) (((SIZE) == SDIO_DataBlockSize_1b) || ((SIZE) == SDIO_DataBlockSize_2b) || ((SIZE) == SDIO_DataBlockSize_4b) || ((SIZE) == SDIO_DataBlockSize_8b) || ((SIZE) == SDIO_DataBlockSize_16b) || ((SIZE) == SDIO_DataBlockSize_32b) || ((SIZE) == SDIO_DataBlockSize_64b) || ((SIZE) == SDIO_DataBlockSize_128b) || ((SIZE) == SDIO_DataBlockSize_256b) || ((SIZE) == SDIO_DataBlockSize_512b) || ((SIZE) == SDIO_DataBlockSize_1024b) || ((SIZE) == SDIO_DataBlockSize_2048b) || ((SIZE) == SDIO_DataBlockSize_4096b) || ((SIZE) == SDIO_DataBlockSize_8192b) || ((SIZE) == SDIO_DataBlockSize_16384b))
+# 341 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_TransferDir_ToCard ((uint32_t)0x00000000)
+#define SDIO_TransferDir_ToSDIO ((uint32_t)0x00000002)
+#define IS_SDIO_TRANSFER_DIR(DIR) (((DIR) == SDIO_TransferDir_ToCard) || ((DIR) == SDIO_TransferDir_ToSDIO))
+# 353 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_TransferMode_Block ((uint32_t)0x00000000)
+#define SDIO_TransferMode_Stream ((uint32_t)0x00000004)
+#define IS_SDIO_TRANSFER_MODE(MODE) (((MODE) == SDIO_TransferMode_Stream) || ((MODE) == SDIO_TransferMode_Block))
+# 365 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_DPSM_Disable ((uint32_t)0x00000000)
+#define SDIO_DPSM_Enable ((uint32_t)0x00000001)
+#define IS_SDIO_DPSM(DPSM) (((DPSM) == SDIO_DPSM_Enable) || ((DPSM) == SDIO_DPSM_Disable))
+# 376 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_FLAG_CCRCFAIL ((uint32_t)0x00000001)
+#define SDIO_FLAG_DCRCFAIL ((uint32_t)0x00000002)
+#define SDIO_FLAG_CTIMEOUT ((uint32_t)0x00000004)
+#define SDIO_FLAG_DTIMEOUT ((uint32_t)0x00000008)
+#define SDIO_FLAG_TXUNDERR ((uint32_t)0x00000010)
+#define SDIO_FLAG_RXOVERR ((uint32_t)0x00000020)
+#define SDIO_FLAG_CMDREND ((uint32_t)0x00000040)
+#define SDIO_FLAG_CMDSENT ((uint32_t)0x00000080)
+#define SDIO_FLAG_DATAEND ((uint32_t)0x00000100)
+#define SDIO_FLAG_STBITERR ((uint32_t)0x00000200)
+#define SDIO_FLAG_DBCKEND ((uint32_t)0x00000400)
+#define SDIO_FLAG_CMDACT ((uint32_t)0x00000800)
+#define SDIO_FLAG_TXACT ((uint32_t)0x00001000)
+#define SDIO_FLAG_RXACT ((uint32_t)0x00002000)
+#define SDIO_FLAG_TXFIFOHE ((uint32_t)0x00004000)
+#define SDIO_FLAG_RXFIFOHF ((uint32_t)0x00008000)
+#define SDIO_FLAG_TXFIFOF ((uint32_t)0x00010000)
+#define SDIO_FLAG_RXFIFOF ((uint32_t)0x00020000)
+#define SDIO_FLAG_TXFIFOE ((uint32_t)0x00040000)
+#define SDIO_FLAG_RXFIFOE ((uint32_t)0x00080000)
+#define SDIO_FLAG_TXDAVL ((uint32_t)0x00100000)
+#define SDIO_FLAG_RXDAVL ((uint32_t)0x00200000)
+#define SDIO_FLAG_SDIOIT ((uint32_t)0x00400000)
+#define SDIO_FLAG_CEATAEND ((uint32_t)0x00800000)
+#define IS_SDIO_FLAG(FLAG) (((FLAG) == SDIO_FLAG_CCRCFAIL) || ((FLAG) == SDIO_FLAG_DCRCFAIL) || ((FLAG) == SDIO_FLAG_CTIMEOUT) || ((FLAG) == SDIO_FLAG_DTIMEOUT) || ((FLAG) == SDIO_FLAG_TXUNDERR) || ((FLAG) == SDIO_FLAG_RXOVERR) || ((FLAG) == SDIO_FLAG_CMDREND) || ((FLAG) == SDIO_FLAG_CMDSENT) || ((FLAG) == SDIO_FLAG_DATAEND) || ((FLAG) == SDIO_FLAG_STBITERR) || ((FLAG) == SDIO_FLAG_DBCKEND) || ((FLAG) == SDIO_FLAG_CMDACT) || ((FLAG) == SDIO_FLAG_TXACT) || ((FLAG) == SDIO_FLAG_RXACT) || ((FLAG) == SDIO_FLAG_TXFIFOHE) || ((FLAG) == SDIO_FLAG_RXFIFOHF) || ((FLAG) == SDIO_FLAG_TXFIFOF) || ((FLAG) == SDIO_FLAG_RXFIFOF) || ((FLAG) == SDIO_FLAG_TXFIFOE) || ((FLAG) == SDIO_FLAG_RXFIFOE) || ((FLAG) == SDIO_FLAG_TXDAVL) || ((FLAG) == SDIO_FLAG_RXDAVL) || ((FLAG) == SDIO_FLAG_SDIOIT) || ((FLAG) == SDIO_FLAG_CEATAEND))
+# 425 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define IS_SDIO_CLEAR_FLAG(FLAG) ((((FLAG) & (uint32_t)0xFF3FF800) == 0x00) && ((FLAG) != (uint32_t)0x00))
+
+#define IS_SDIO_GET_IT(IT) (((IT) == SDIO_IT_CCRCFAIL) || ((IT) == SDIO_IT_DCRCFAIL) || ((IT) == SDIO_IT_CTIMEOUT) || ((IT) == SDIO_IT_DTIMEOUT) || ((IT) == SDIO_IT_TXUNDERR) || ((IT) == SDIO_IT_RXOVERR) || ((IT) == SDIO_IT_CMDREND) || ((IT) == SDIO_IT_CMDSENT) || ((IT) == SDIO_IT_DATAEND) || ((IT) == SDIO_IT_STBITERR) || ((IT) == SDIO_IT_DBCKEND) || ((IT) == SDIO_IT_CMDACT) || ((IT) == SDIO_IT_TXACT) || ((IT) == SDIO_IT_RXACT) || ((IT) == SDIO_IT_TXFIFOHE) || ((IT) == SDIO_IT_RXFIFOHF) || ((IT) == SDIO_IT_TXFIFOF) || ((IT) == SDIO_IT_RXFIFOF) || ((IT) == SDIO_IT_TXFIFOE) || ((IT) == SDIO_IT_RXFIFOE) || ((IT) == SDIO_IT_TXDAVL) || ((IT) == SDIO_IT_RXDAVL) || ((IT) == SDIO_IT_SDIOIT) || ((IT) == SDIO_IT_CEATAEND))
+# 452 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define IS_SDIO_CLEAR_IT(IT) ((((IT) & (uint32_t)0xFF3FF800) == 0x00) && ((IT) != (uint32_t)0x00))
+# 462 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+#define SDIO_ReadWaitMode_CLK ((uint32_t)0x00000000)
+#define SDIO_ReadWaitMode_DATA2 ((uint32_t)0x00000001)
+#define IS_SDIO_READWAIT_MODE(MODE) (((MODE) == SDIO_ReadWaitMode_CLK) || ((MODE) == SDIO_ReadWaitMode_DATA2))
+# 477 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
+void SDIO_DeInit(void);
+
+
+void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct);
+void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct);
+void SDIO_ClockCmd(FunctionalState NewState);
+void SDIO_SetPowerState(uint32_t SDIO_PowerState);
+uint32_t SDIO_GetPowerState(void);
+
+
+void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct);
+void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct);
+uint8_t SDIO_GetCommandResponse(void);
+uint32_t SDIO_GetResponse(uint32_t SDIO_RESP);
+
+
+void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct);
+void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct);
+uint32_t SDIO_GetDataCounter(void);
+uint32_t SDIO_ReadData(void);
+void SDIO_WriteData(uint32_t Data);
+uint32_t SDIO_GetFIFOCount(void);
+
+
+void SDIO_StartSDIOReadWait(FunctionalState NewState);
+void SDIO_StopSDIOReadWait(FunctionalState NewState);
+void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode);
+void SDIO_SetSDIOOperation(FunctionalState NewState);
+void SDIO_SendSDIOSuspendCmd(FunctionalState NewState);
+
+
+void SDIO_CommandCompletionCmd(FunctionalState NewState);
+void SDIO_CEATAITCmd(FunctionalState NewState);
+void SDIO_SendCEATACmd(FunctionalState NewState);
+
+
+void SDIO_DMACmd(FunctionalState NewState);
+
+
+void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState);
+FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG);
+void SDIO_ClearFlag(uint32_t SDIO_FLAG);
+ITStatus SDIO_GetITStatus(uint32_t SDIO_IT);
+void SDIO_ClearITPendingBit(uint32_t SDIO_IT);
 
-    template<typename U>
-    OwnPtr<T>& operator=(U *other)
-    {
-        T *old = _ptr;
-        _ptr = other;
-        delete old;
-        return *this;
-    }
 
-    ~OwnPtr() { delete _ptr; }
+}
+# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define __STM32F4xx_SPI_H 
 
-    void clear()
-    {
-        delete leak();
-    }
 
-    T *leak()
-    {
-        T *old = _ptr;
-        _ptr = nullptr;
-        return old;
-    }
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+typedef struct
+{
+  uint16_t SPI_Direction;
 
-    T *get() const
-    {
-        return _ptr;
-    }
 
-    T& operator*() const { return *_ptr; }
-    T *operator->() const { return _ptr; }
-    bool operator !() const { return !_ptr; }
-    explicit operator bool() const { return _ptr != nullptr; }
+  uint16_t SPI_Mode;
 
-private:
-    T *_ptr;
-};
 
-template<typename T>
-inline bool operator==(T* a, const OwnPtr<T>& b)
-{
-    return a == b.get();
-}
+  uint16_t SPI_DataSize;
 
-template<typename T>
-inline bool operator==(const OwnPtr<T>& a, T* b)
-{
-    return a.get() == b;
-}
 
-template<typename T>
-inline bool operator!=(T* a, const OwnPtr<T>& b)
-{
-    return a != b.get();
-}
+  uint16_t SPI_CPOL;
 
-template<typename T>
-inline bool operator!=(const OwnPtr<T>& a, T* b)
-{
-    return a.get() != b;
-}
 
-}
-# 24 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/SPIDevice.h" 2
+  uint16_t SPI_CPHA;
 
-namespace AP_HAL {
 
-class SPIDevice : public Device {
-public:
-    SPIDevice() : Device(BUS_TYPE_SPI) { }
+  uint16_t SPI_NSS;
 
-    virtual ~SPIDevice() { }
 
 
+  uint16_t SPI_BaudRatePrescaler;
 
-    virtual bool set_speed(Device::Speed speed) override = 0;
 
 
-    virtual bool transfer(const uint8_t *send, uint32_t send_len,
-                          uint8_t *recv, uint32_t recv_len) override = 0;
 
 
+  uint16_t SPI_FirstBit;
 
 
+  uint16_t SPI_CRCPolynomial;
+}SPI_InitTypeDef;
 
-    virtual bool transfer_fullduplex(const uint8_t *send, uint8_t *recv,
-                                     uint32_t len) = 0;
 
 
-    virtual Semaphore *get_semaphore() override = 0;
 
 
-    virtual Device::PeriodicHandle register_periodic_callback(
-        uint32_t period_usec, Device::PeriodicCb) override = 0;
+typedef struct
+{
 
+  uint16_t I2S_Mode;
 
-    virtual bool adjust_periodic_callback(
-        PeriodicHandle h, uint32_t period_usec) override { return false; }
-};
 
-class SPIDeviceManager {
-public:
-    virtual OwnPtr<SPIDevice> get_device(const char *name)
-    {
-        return nullptr;
-    }
-};
+  uint16_t I2S_Standard;
 
-}
-# 10 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Storage.h" 1
        
+  uint16_t I2S_DataFormat;
 
 
+  uint16_t I2S_MCLKOutput;
+
+
+  uint32_t I2S_AudioFreq;
+
+
+  uint16_t I2S_CPOL;
+
+}I2S_InitTypeDef;
 
 
-class AP_HAL::Storage {
-public:
-    virtual void init() = 0;
-    virtual void read_block(void *dst, uint16_t src, size_t n) = 0;
-    virtual void write_block(uint16_t dst, const void* src, size_t n) = 0;
-};
-# 11 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/UARTDriver.h" 1
        
 
 
 
 
+#define IS_SPI_ALL_PERIPH(PERIPH) (((PERIPH) == SPI1) || ((PERIPH) == SPI2) || ((PERIPH) == SPI3) || ((PERIPH) == SPI4) || ((PERIPH) == SPI5) || ((PERIPH) == SPI6))
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/BetterStream.h" 1
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/BetterStream.h"
        
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h" 1 3 4
-# 31 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h" 3 4
-#define _STDARG_H 
-#define _ANSI_STDARG_H_ 
 
-#undef __need___va_list
 
+#define IS_SPI_ALL_PERIPH_EXT(PERIPH) (((PERIPH) == SPI1) || ((PERIPH) == SPI2) || ((PERIPH) == SPI3) || ((PERIPH) == SPI4) || ((PERIPH) == SPI5) || ((PERIPH) == SPI6) || ((PERIPH) == I2S2ext) || ((PERIPH) == I2S3ext))
+# 135 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define IS_SPI_23_PERIPH(PERIPH) (((PERIPH) == SPI2) || ((PERIPH) == SPI3))
+
+
+#define IS_SPI_23_PERIPH_EXT(PERIPH) (((PERIPH) == SPI2) || ((PERIPH) == SPI3) || ((PERIPH) == I2S2ext) || ((PERIPH) == I2S3ext))
+
+
+
+
+#define IS_I2S_EXT_PERIPH(PERIPH) (((PERIPH) == I2S2ext) || ((PERIPH) == I2S3ext))
 
 
 
-#define __GNUC_VA_LIST 
-typedef __builtin_va_list __gnuc_va_list;
 
 
 
 
+#define SPI_Direction_2Lines_FullDuplex ((uint16_t)0x0000)
+#define SPI_Direction_2Lines_RxOnly ((uint16_t)0x0400)
+#define SPI_Direction_1Line_Rx ((uint16_t)0x8000)
+#define SPI_Direction_1Line_Tx ((uint16_t)0xC000)
+#define IS_SPI_DIRECTION_MODE(MODE) (((MODE) == SPI_Direction_2Lines_FullDuplex) || ((MODE) == SPI_Direction_2Lines_RxOnly) || ((MODE) == SPI_Direction_1Line_Rx) || ((MODE) == SPI_Direction_1Line_Tx))
+# 167 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_Mode_Master ((uint16_t)0x0104)
+#define SPI_Mode_Slave ((uint16_t)0x0000)
+#define IS_SPI_MODE(MODE) (((MODE) == SPI_Mode_Master) || ((MODE) == SPI_Mode_Slave))
+# 179 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_DataSize_16b ((uint16_t)0x0800)
+#define SPI_DataSize_8b ((uint16_t)0x0000)
+#define IS_SPI_DATASIZE(DATASIZE) (((DATASIZE) == SPI_DataSize_16b) || ((DATASIZE) == SPI_DataSize_8b))
+# 191 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_CPOL_Low ((uint16_t)0x0000)
+#define SPI_CPOL_High ((uint16_t)0x0002)
+#define IS_SPI_CPOL(CPOL) (((CPOL) == SPI_CPOL_Low) || ((CPOL) == SPI_CPOL_High))
+# 203 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_CPHA_1Edge ((uint16_t)0x0000)
+#define SPI_CPHA_2Edge ((uint16_t)0x0001)
+#define IS_SPI_CPHA(CPHA) (((CPHA) == SPI_CPHA_1Edge) || ((CPHA) == SPI_CPHA_2Edge))
+# 215 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_NSS_Soft ((uint16_t)0x0200)
+#define SPI_NSS_Hard ((uint16_t)0x0000)
+#define IS_SPI_NSS(NSS) (((NSS) == SPI_NSS_Soft) || ((NSS) == SPI_NSS_Hard))
+# 227 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_BaudRatePrescaler_2 ((uint16_t)0x0000)
+#define SPI_BaudRatePrescaler_4 ((uint16_t)0x0008)
+#define SPI_BaudRatePrescaler_8 ((uint16_t)0x0010)
+#define SPI_BaudRatePrescaler_16 ((uint16_t)0x0018)
+#define SPI_BaudRatePrescaler_32 ((uint16_t)0x0020)
+#define SPI_BaudRatePrescaler_64 ((uint16_t)0x0028)
+#define SPI_BaudRatePrescaler_128 ((uint16_t)0x0030)
+#define SPI_BaudRatePrescaler_256 ((uint16_t)0x0038)
+#define IS_SPI_BAUDRATE_PRESCALER(PRESCALER) (((PRESCALER) == SPI_BaudRatePrescaler_2) || ((PRESCALER) == SPI_BaudRatePrescaler_4) || ((PRESCALER) == SPI_BaudRatePrescaler_8) || ((PRESCALER) == SPI_BaudRatePrescaler_16) || ((PRESCALER) == SPI_BaudRatePrescaler_32) || ((PRESCALER) == SPI_BaudRatePrescaler_64) || ((PRESCALER) == SPI_BaudRatePrescaler_128) || ((PRESCALER) == SPI_BaudRatePrescaler_256))
+# 251 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_FirstBit_MSB ((uint16_t)0x0000)
+#define SPI_FirstBit_LSB ((uint16_t)0x0080)
+#define IS_SPI_FIRST_BIT(BIT) (((BIT) == SPI_FirstBit_MSB) || ((BIT) == SPI_FirstBit_LSB))
+# 263 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define I2S_Mode_SlaveTx ((uint16_t)0x0000)
+#define I2S_Mode_SlaveRx ((uint16_t)0x0100)
+#define I2S_Mode_MasterTx ((uint16_t)0x0200)
+#define I2S_Mode_MasterRx ((uint16_t)0x0300)
+#define IS_I2S_MODE(MODE) (((MODE) == I2S_Mode_SlaveTx) || ((MODE) == I2S_Mode_SlaveRx) || ((MODE) == I2S_Mode_MasterTx)|| ((MODE) == I2S_Mode_MasterRx))
+# 280 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define I2S_Standard_Phillips ((uint16_t)0x0000)
+#define I2S_Standard_MSB ((uint16_t)0x0010)
+#define I2S_Standard_LSB ((uint16_t)0x0020)
+#define I2S_Standard_PCMShort ((uint16_t)0x0030)
+#define I2S_Standard_PCMLong ((uint16_t)0x00B0)
+#define IS_I2S_STANDARD(STANDARD) (((STANDARD) == I2S_Standard_Phillips) || ((STANDARD) == I2S_Standard_MSB) || ((STANDARD) == I2S_Standard_LSB) || ((STANDARD) == I2S_Standard_PCMShort) || ((STANDARD) == I2S_Standard_PCMLong))
+# 298 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define I2S_DataFormat_16b ((uint16_t)0x0000)
+#define I2S_DataFormat_16bextended ((uint16_t)0x0001)
+#define I2S_DataFormat_24b ((uint16_t)0x0003)
+#define I2S_DataFormat_32b ((uint16_t)0x0005)
+#define IS_I2S_DATA_FORMAT(FORMAT) (((FORMAT) == I2S_DataFormat_16b) || ((FORMAT) == I2S_DataFormat_16bextended) || ((FORMAT) == I2S_DataFormat_24b) || ((FORMAT) == I2S_DataFormat_32b))
+# 314 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define I2S_MCLKOutput_Enable ((uint16_t)0x0200)
+#define I2S_MCLKOutput_Disable ((uint16_t)0x0000)
+#define IS_I2S_MCLK_OUTPUT(OUTPUT) (((OUTPUT) == I2S_MCLKOutput_Enable) || ((OUTPUT) == I2S_MCLKOutput_Disable))
+# 326 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define I2S_AudioFreq_192k ((uint32_t)192000)
+#define I2S_AudioFreq_96k ((uint32_t)96000)
+#define I2S_AudioFreq_48k ((uint32_t)48000)
+#define I2S_AudioFreq_44k ((uint32_t)44100)
+#define I2S_AudioFreq_32k ((uint32_t)32000)
+#define I2S_AudioFreq_22k ((uint32_t)22050)
+#define I2S_AudioFreq_16k ((uint32_t)16000)
+#define I2S_AudioFreq_11k ((uint32_t)11025)
+#define I2S_AudioFreq_8k ((uint32_t)8000)
+#define I2S_AudioFreq_Default ((uint32_t)2)
+
+#define IS_I2S_AUDIO_FREQ(FREQ) ((((FREQ) >= I2S_AudioFreq_8k) && ((FREQ) <= I2S_AudioFreq_192k)) || ((FREQ) == I2S_AudioFreq_Default))
+# 348 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define I2S_CPOL_Low ((uint16_t)0x0000)
+#define I2S_CPOL_High ((uint16_t)0x0008)
+#define IS_I2S_CPOL(CPOL) (((CPOL) == I2S_CPOL_Low) || ((CPOL) == I2S_CPOL_High))
+# 360 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_I2S_DMAReq_Tx ((uint16_t)0x0002)
+#define SPI_I2S_DMAReq_Rx ((uint16_t)0x0001)
+#define IS_SPI_I2S_DMAREQ(DMAREQ) ((((DMAREQ) & (uint16_t)0xFFFC) == 0x00) && ((DMAREQ) != 0x00))
+# 371 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_NSSInternalSoft_Set ((uint16_t)0x0100)
+#define SPI_NSSInternalSoft_Reset ((uint16_t)0xFEFF)
+#define IS_SPI_NSS_INTERNAL(INTERNAL) (((INTERNAL) == SPI_NSSInternalSoft_Set) || ((INTERNAL) == SPI_NSSInternalSoft_Reset))
+# 383 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_CRC_Tx ((uint8_t)0x00)
+#define SPI_CRC_Rx ((uint8_t)0x01)
+#define IS_SPI_CRC(CRC) (((CRC) == SPI_CRC_Tx) || ((CRC) == SPI_CRC_Rx))
+# 394 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_Direction_Rx ((uint16_t)0xBFFF)
+#define SPI_Direction_Tx ((uint16_t)0x4000)
+#define IS_SPI_DIRECTION(DIRECTION) (((DIRECTION) == SPI_Direction_Rx) || ((DIRECTION) == SPI_Direction_Tx))
+# 406 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_I2S_IT_TXE ((uint8_t)0x71)
+#define SPI_I2S_IT_RXNE ((uint8_t)0x60)
+#define SPI_I2S_IT_ERR ((uint8_t)0x50)
+#define I2S_IT_UDR ((uint8_t)0x53)
+#define SPI_I2S_IT_TIFRFE ((uint8_t)0x58)
+
+#define IS_SPI_I2S_CONFIG_IT(IT) (((IT) == SPI_I2S_IT_TXE) || ((IT) == SPI_I2S_IT_RXNE) || ((IT) == SPI_I2S_IT_ERR))
+
+
+
+#define SPI_I2S_IT_OVR ((uint8_t)0x56)
+#define SPI_IT_MODF ((uint8_t)0x55)
+#define SPI_IT_CRCERR ((uint8_t)0x54)
+
+#define IS_SPI_I2S_CLEAR_IT(IT) (((IT) == SPI_IT_CRCERR))
+
+#define IS_SPI_I2S_GET_IT(IT) (((IT) == SPI_I2S_IT_RXNE)|| ((IT) == SPI_I2S_IT_TXE) || ((IT) == SPI_IT_CRCERR) || ((IT) == SPI_IT_MODF) || ((IT) == SPI_I2S_IT_OVR) || ((IT) == I2S_IT_UDR) || ((IT) == SPI_I2S_IT_TIFRFE))
+# 434 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_I2S_FLAG_RXNE ((uint16_t)0x0001)
+#define SPI_I2S_FLAG_TXE ((uint16_t)0x0002)
+#define I2S_FLAG_CHSIDE ((uint16_t)0x0004)
+#define I2S_FLAG_UDR ((uint16_t)0x0008)
+#define SPI_FLAG_CRCERR ((uint16_t)0x0010)
+#define SPI_FLAG_MODF ((uint16_t)0x0020)
+#define SPI_I2S_FLAG_OVR ((uint16_t)0x0040)
+#define SPI_I2S_FLAG_BSY ((uint16_t)0x0080)
+#define SPI_I2S_FLAG_TIFRFE ((uint16_t)0x0100)
+
+#define IS_SPI_I2S_CLEAR_FLAG(FLAG) (((FLAG) == SPI_FLAG_CRCERR))
+#define IS_SPI_I2S_GET_FLAG(FLAG) (((FLAG) == SPI_I2S_FLAG_BSY) || ((FLAG) == SPI_I2S_FLAG_OVR) || ((FLAG) == SPI_FLAG_MODF) || ((FLAG) == SPI_FLAG_CRCERR) || ((FLAG) == I2S_FLAG_UDR) || ((FLAG) == I2S_FLAG_CHSIDE) || ((FLAG) == SPI_I2S_FLAG_TXE) || ((FLAG) == SPI_I2S_FLAG_RXNE)|| ((FLAG) == SPI_I2S_FLAG_TIFRFE))
+# 458 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define IS_SPI_CRC_POLYNOMIAL(POLYNOMIAL) ((POLYNOMIAL) >= 0x1)
+# 467 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+#define SPI_DMAReq_Tx SPI_I2S_DMAReq_Tx
+#define SPI_DMAReq_Rx SPI_I2S_DMAReq_Rx
+#define SPI_IT_TXE SPI_I2S_IT_TXE
+#define SPI_IT_RXNE SPI_I2S_IT_RXNE
+#define SPI_IT_ERR SPI_I2S_IT_ERR
+#define SPI_IT_OVR SPI_I2S_IT_OVR
+#define SPI_FLAG_RXNE SPI_I2S_FLAG_RXNE
+#define SPI_FLAG_TXE SPI_I2S_FLAG_TXE
+#define SPI_FLAG_OVR SPI_I2S_FLAG_OVR
+#define SPI_FLAG_BSY SPI_I2S_FLAG_BSY
+#define SPI_DeInit SPI_I2S_DeInit
+#define SPI_ITConfig SPI_I2S_ITConfig
+#define SPI_DMACmd SPI_I2S_DMACmd
+#define SPI_SendData SPI_I2S_SendData
+#define SPI_ReceiveData SPI_I2S_ReceiveData
+#define SPI_GetFlagStatus SPI_I2S_GetFlagStatus
+#define SPI_ClearFlag SPI_I2S_ClearFlag
+#define SPI_GetITStatus SPI_I2S_GetITStatus
+#define SPI_ClearITPendingBit SPI_I2S_ClearITPendingBit
+# 498 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
+void SPI_I2S_DeInit(SPI_TypeDef* SPIx);
+
+
+void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct);
+void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct);
+void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct);
+void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct);
+void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState);
+void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState);
+void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize);
+void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction);
+void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft);
+void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState);
+void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState);
+
+void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct);
+
+
+void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data);
+uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx);
+
+
+void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState);
+void SPI_TransmitCRC(SPI_TypeDef* SPIx);
+uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC);
+uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx);
+
+
+void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState);
+
+
+void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);
+FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
+void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
+ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
+void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
 
 
-#define va_start(v,l) __builtin_va_start(v,l)
-#define va_end(v) __builtin_va_end(v)
-#define va_arg(v,l) __builtin_va_arg(v,l)
+}
+# 49 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h"
+#define __STM32F4xx_SYSCFG_H 
+
+
+ extern "C" {
+# 58 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h"
+#define EXTI_PortSourceGPIOA ((uint8_t)0x00)
+#define EXTI_PortSourceGPIOB ((uint8_t)0x01)
+#define EXTI_PortSourceGPIOC ((uint8_t)0x02)
+#define EXTI_PortSourceGPIOD ((uint8_t)0x03)
+#define EXTI_PortSourceGPIOE ((uint8_t)0x04)
+#define EXTI_PortSourceGPIOF ((uint8_t)0x05)
+#define EXTI_PortSourceGPIOG ((uint8_t)0x06)
+#define EXTI_PortSourceGPIOH ((uint8_t)0x07)
+#define EXTI_PortSourceGPIOI ((uint8_t)0x08)
+
+#define IS_EXTI_PORT_SOURCE(PORTSOURCE) (((PORTSOURCE) == EXTI_PortSourceGPIOA) || ((PORTSOURCE) == EXTI_PortSourceGPIOB) || ((PORTSOURCE) == EXTI_PortSourceGPIOC) || ((PORTSOURCE) == EXTI_PortSourceGPIOD) || ((PORTSOURCE) == EXTI_PortSourceGPIOE) || ((PORTSOURCE) == EXTI_PortSourceGPIOF) || ((PORTSOURCE) == EXTI_PortSourceGPIOG) || ((PORTSOURCE) == EXTI_PortSourceGPIOH) || ((PORTSOURCE) == EXTI_PortSourceGPIOI))
+# 86 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h"
+#define EXTI_PinSource0 ((uint8_t)0x00)
+#define EXTI_PinSource1 ((uint8_t)0x01)
+#define EXTI_PinSource2 ((uint8_t)0x02)
+#define EXTI_PinSource3 ((uint8_t)0x03)
+#define EXTI_PinSource4 ((uint8_t)0x04)
+#define EXTI_PinSource5 ((uint8_t)0x05)
+#define EXTI_PinSource6 ((uint8_t)0x06)
+#define EXTI_PinSource7 ((uint8_t)0x07)
+#define EXTI_PinSource8 ((uint8_t)0x08)
+#define EXTI_PinSource9 ((uint8_t)0x09)
+#define EXTI_PinSource10 ((uint8_t)0x0A)
+#define EXTI_PinSource11 ((uint8_t)0x0B)
+#define EXTI_PinSource12 ((uint8_t)0x0C)
+#define EXTI_PinSource13 ((uint8_t)0x0D)
+#define EXTI_PinSource14 ((uint8_t)0x0E)
+#define EXTI_PinSource15 ((uint8_t)0x0F)
+#define IS_EXTI_PIN_SOURCE(PINSOURCE) (((PINSOURCE) == EXTI_PinSource0) || ((PINSOURCE) == EXTI_PinSource1) || ((PINSOURCE) == EXTI_PinSource2) || ((PINSOURCE) == EXTI_PinSource3) || ((PINSOURCE) == EXTI_PinSource4) || ((PINSOURCE) == EXTI_PinSource5) || ((PINSOURCE) == EXTI_PinSource6) || ((PINSOURCE) == EXTI_PinSource7) || ((PINSOURCE) == EXTI_PinSource8) || ((PINSOURCE) == EXTI_PinSource9) || ((PINSOURCE) == EXTI_PinSource10) || ((PINSOURCE) == EXTI_PinSource11) || ((PINSOURCE) == EXTI_PinSource12) || ((PINSOURCE) == EXTI_PinSource13) || ((PINSOURCE) == EXTI_PinSource14) || ((PINSOURCE) == EXTI_PinSource15))
+# 126 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h"
+#define SYSCFG_MemoryRemap_Flash ((uint8_t)0x00)
+#define SYSCFG_MemoryRemap_SystemFlash ((uint8_t)0x01)
+#define SYSCFG_MemoryRemap_SRAM ((uint8_t)0x03)
+#define SYSCFG_MemoryRemap_FSMC ((uint8_t)0x02)
+
+#define IS_SYSCFG_MEMORY_REMAP_CONFING(REMAP) (((REMAP) == SYSCFG_MemoryRemap_Flash) || ((REMAP) == SYSCFG_MemoryRemap_SystemFlash) || ((REMAP) == SYSCFG_MemoryRemap_SRAM) || ((REMAP) == SYSCFG_MemoryRemap_FSMC))
+# 144 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h"
+#define SYSCFG_ETH_MediaInterface_MII ((uint32_t)0x00000000)
+#define SYSCFG_ETH_MediaInterface_RMII ((uint32_t)0x00000001)
+
+#define IS_SYSCFG_ETH_MEDIA_INTERFACE(INTERFACE) (((INTERFACE) == SYSCFG_ETH_MediaInterface_MII) || ((INTERFACE) == SYSCFG_ETH_MediaInterface_RMII))
+# 160 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h"
+void SYSCFG_DeInit(void);
+void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap);
+void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex);
+void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface);
+void SYSCFG_CompensationCellCmd(FunctionalState NewState);
+FlagStatus SYSCFG_GetCompensationCellStatus(void);
 
-#define va_copy(d,s) __builtin_va_copy(d,s)
 
-#define __va_copy(d,s) __builtin_va_copy(d,s)
-# 98 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h" 3 4
-typedef __gnuc_va_list va_list;
+}
+# 50 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define __STM32F4xx_TIM_H 
 
 
+ extern "C" {
+# 55 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+typedef struct
+{
+  uint16_t TIM_Prescaler;
 
 
+  uint16_t TIM_CounterMode;
 
-#define _VA_LIST_ 
 
+  uint32_t TIM_Period;
 
-#define _VA_LIST 
 
 
-#define _VA_LIST_DEFINED 
+  uint16_t TIM_ClockDivision;
 
 
-#define _VA_LIST_T_H 
+  uint8_t TIM_RepetitionCounter;
 
 
-#define __va_list__ 
-# 23 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/BetterStream.h" 2
 
 
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/Stream.h" 1
        
+} TIM_TimeBaseInitTypeDef;
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/Print.h" 1
-# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/Print.h"
        
-# 33 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/Print.h"
-enum {
-    BASE_DEFAULT = 0,
-    BASE_BIN = 2,
-    BASE_OCT = 8,
-    BASE_DEC = 10,
-    BASE_HEX = 16
-};
 
 
-class AP_HAL::Print {
-  private:
-    size_t printNumber(unsigned long, uint8_t);
-    size_t printFloat(float, uint8_t);
-  public:
-    Print() {}
+typedef struct
+{
+  uint16_t TIM_OCMode;
 
-    virtual size_t write(uint8_t) = 0;
-    virtual size_t write(const uint8_t *buffer, size_t size) = 0;
 
-    size_t write(const char *str) { return write((const uint8_t *)str, strlen(str)); }
-  public:
-    size_t print(const char[]);
-    size_t print(char);
-    size_t print(unsigned char, int = BASE_DEC);
-    size_t print(int, int = BASE_DEC);
-    size_t print(unsigned int, int = BASE_DEC);
-    size_t print(long, int = BASE_DEC);
-    size_t print(unsigned long, int = BASE_DEC);
-    size_t print(float , int = 2);
-    size_t print(double , int = 2);
+  uint16_t TIM_OutputState;
 
-    size_t println(const char[]);
-    size_t println(char);
-    size_t println(unsigned char, int = BASE_DEC);
-    size_t println(int, int = BASE_DEC);
-    size_t println(unsigned int, int = BASE_DEC);
-    size_t println(long, int = BASE_DEC);
-    size_t println(unsigned long, int = BASE_DEC);
-    size_t println(float , int = 2);
-    size_t println(double , int = 2);
-    size_t println(void);
 
-};
-# 5 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/Stream.h" 2
+  uint16_t TIM_OutputNState;
 
 
 
+  uint32_t TIM_Pulse;
 
-class AP_HAL::Stream : public AP_HAL::Print {
-public:
-    virtual uint32_t available() = 0;
 
+  uint16_t TIM_OCPolarity;
 
-    virtual uint32_t txspace() = 0;
 
+  uint16_t TIM_OCNPolarity;
 
 
-    virtual int16_t read() = 0;
 
-};
-# 28 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/utility/BetterStream.h" 2
+  uint16_t TIM_OCIdleState;
 
-class AP_HAL::BetterStream : public AP_HAL::Stream {
-public:
-    BetterStream(void) {}
 
-    virtual void printf(const char *, ...) __attribute__((format(printf, 2, 3))) = 0;
-    virtual void vprintf(const char *, va_list) = 0;
-};
-# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/UARTDriver.h" 2
 
+  uint16_t TIM_OCNIdleState;
 
-class AP_HAL::UARTDriver : public AP_HAL::BetterStream {
-public:
-    UARTDriver() {}
-    virtual void begin(uint32_t baud) = 0;
-# 35 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/UARTDriver.h"
-    virtual void begin(uint32_t baud, uint16_t rxSpace, uint16_t txSpace) = 0;
-    virtual void end() = 0;
-    virtual void flush() = 0;
-    virtual bool is_initialized() = 0;
-    virtual void set_blocking_writes(bool blocking) = 0;
-    virtual bool tx_pending() = 0;
 
-    enum flow_control {
-        FLOW_CONTROL_DISABLE=0, FLOW_CONTROL_ENABLE=1, FLOW_CONTROL_AUTO=2
-    };
-    virtual void set_flow_control(enum flow_control flow_control_setting) {};
-    virtual enum flow_control get_flow_control(void) { return FLOW_CONTROL_DISABLE; }
+} TIM_OCInitTypeDef;
 
 
 
 
 
-    void printf(const char *s, ...) __attribute__((format(printf, 2, 3)));
-    void vprintf(const char *s, va_list ap);
-};
-# 12 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/system.h" 1
+typedef struct
+{
        
+  uint16_t TIM_Channel;
 
 
+  uint16_t TIM_ICPolarity;
 
 
+  uint16_t TIM_ICSelection;
 
 
+  uint16_t TIM_ICPrescaler;
 
-namespace AP_HAL {
 
-void init();
+  uint16_t TIM_ICFilter;
 
-void panic(const char *errormsg, ...) __attribute__((format(printf, 1, 2))) __attribute__ ((noreturn));
+} TIM_ICInitTypeDef;
 
-uint32_t micros();
-uint32_t millis();
-uint64_t micros64();
-uint64_t millis64();
 
-}
-# 13 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/OpticalFlow.h" 1
-# 15 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/OpticalFlow.h"
        
 
-class AP_HAL::OpticalFlow {
-public:
-    class Data_Frame {
-    public:
-        float pixel_flow_x_integral;
-        float pixel_flow_y_integral;
-        float gyro_x_integral;
-        float gyro_y_integral;
-        uint32_t delta_time;
-        uint8_t quality;
-    };
 
-    typedef Functor<void, float&, float&, float&> Gyro_Cb;
 
-    virtual void init(Gyro_Cb) = 0;
-    virtual bool read(Data_Frame& frame) = 0;
-};
-# 14 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/HAL.h" 2
+typedef struct
+{
+
+  uint16_t TIM_OSSRState;
+
+
+  uint16_t TIM_OSSIState;
 
-class AP_HAL::HAL {
-public:
-    HAL(AP_HAL::UARTDriver* _uartA,
-        AP_HAL::UARTDriver* _uartB,
-        AP_HAL::UARTDriver* _uartC,
-        AP_HAL::UARTDriver* _uartD,
-        AP_HAL::UARTDriver* _uartE,
-        AP_HAL::UARTDriver* _uartF,
-        AP_HAL::I2CDeviceManager* _i2c_mgr,
-        AP_HAL::SPIDeviceManager* _spi,
-        AP_HAL::AnalogIn* _analogin,
-        AP_HAL::Storage* _storage,
-        AP_HAL::UARTDriver* _console,
-        AP_HAL::GPIO* _gpio,
-        AP_HAL::RCInput* _rcin,
-        AP_HAL::RCOutput* _rcout,
-        AP_HAL::Scheduler* _scheduler,
-        AP_HAL::Util* _util,
-        AP_HAL::OpticalFlow *_opticalflow)
-        :
-        uartA(_uartA),
-        uartB(_uartB),
-        uartC(_uartC),
-        uartD(_uartD),
-        uartE(_uartE),
-        uartF(_uartF),
-        i2c_mgr(_i2c_mgr),
-        spi(_spi),
-        analogin(_analogin),
-        storage(_storage),
-        console(_console),
-        gpio(_gpio),
-        rcin(_rcin),
-        rcout(_rcout),
-        scheduler(_scheduler),
-        util(_util),
-        opticalflow(_opticalflow)
-    {
-        AP_HAL::init();
-    }
 
-    struct Callbacks {
-        virtual void setup() = 0;
-        virtual void loop() = 0;
-    };
+  uint16_t TIM_LOCKLevel;
 
-    struct FunCallbacks : public Callbacks {
-        FunCallbacks(void (*setup_fun)(void), void (*loop_fun)(void));
 
-        void setup() override { _setup(); }
-        void loop() override { _loop(); }
+  uint16_t TIM_DeadTime;
+
+
+
+  uint16_t TIM_Break;
+
+
+  uint16_t TIM_BreakPolarity;
+
+
+  uint16_t TIM_AutomaticOutput;
+
+} TIM_BDTRInitTypeDef;
+
+
+
+
+
+
+
+#define IS_TIM_ALL_PERIPH(PERIPH) (((PERIPH) == TIM1) || ((PERIPH) == TIM2) || ((PERIPH) == TIM3) || ((PERIPH) == TIM4) || ((PERIPH) == TIM5) || ((PERIPH) == TIM6) || ((PERIPH) == TIM7) || ((PERIPH) == TIM8) || ((PERIPH) == TIM9) || ((PERIPH) == TIM10) || ((PERIPH) == TIM11) || ((PERIPH) == TIM12) || (((PERIPH) == TIM13) || ((PERIPH) == TIM14)))
+# 190 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define IS_TIM_LIST1_PERIPH(PERIPH) (((PERIPH) == TIM1) || ((PERIPH) == TIM2) || ((PERIPH) == TIM3) || ((PERIPH) == TIM4) || ((PERIPH) == TIM5) || ((PERIPH) == TIM8) || ((PERIPH) == TIM9) || ((PERIPH) == TIM10) || ((PERIPH) == TIM11) || ((PERIPH) == TIM12) || ((PERIPH) == TIM13) || ((PERIPH) == TIM14))
+# 204 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define IS_TIM_LIST2_PERIPH(PERIPH) (((PERIPH) == TIM1) || ((PERIPH) == TIM2) || ((PERIPH) == TIM3) || ((PERIPH) == TIM4) || ((PERIPH) == TIM5) || ((PERIPH) == TIM8) || ((PERIPH) == TIM9) || ((PERIPH) == TIM12))
+# 213 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define IS_TIM_LIST3_PERIPH(PERIPH) (((PERIPH) == TIM1) || ((PERIPH) == TIM2) || ((PERIPH) == TIM3) || ((PERIPH) == TIM4) || ((PERIPH) == TIM5) || ((PERIPH) == TIM8))
+
+
+
+
+
+
+#define IS_TIM_LIST4_PERIPH(PERIPH) (((PERIPH) == TIM1) || ((PERIPH) == TIM8))
+
+
+#define IS_TIM_LIST5_PERIPH(PERIPH) (((PERIPH) == TIM1) || ((PERIPH) == TIM2) || ((PERIPH) == TIM3) || ((PERIPH) == TIM4) || ((PERIPH) == TIM5) || ((PERIPH) == TIM6) || ((PERIPH) == TIM7) || ((PERIPH) == TIM8))
+# 232 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define IS_TIM_LIST6_PERIPH(TIMx) (((TIMx) == TIM2) || ((TIMx) == TIM5) || ((TIMx) == TIM11))
+
+
+
+
+
+
+
+#define TIM_OCMode_Timing ((uint16_t)0x0000)
+#define TIM_OCMode_Active ((uint16_t)0x0010)
+#define TIM_OCMode_Inactive ((uint16_t)0x0020)
+#define TIM_OCMode_Toggle ((uint16_t)0x0030)
+#define TIM_OCMode_PWM1 ((uint16_t)0x0060)
+#define TIM_OCMode_PWM2 ((uint16_t)0x0070)
+#define IS_TIM_OC_MODE(MODE) (((MODE) == TIM_OCMode_Timing) || ((MODE) == TIM_OCMode_Active) || ((MODE) == TIM_OCMode_Inactive) || ((MODE) == TIM_OCMode_Toggle)|| ((MODE) == TIM_OCMode_PWM1) || ((MODE) == TIM_OCMode_PWM2))
+
+
+
+
+
+#define IS_TIM_OCM(MODE) (((MODE) == TIM_OCMode_Timing) || ((MODE) == TIM_OCMode_Active) || ((MODE) == TIM_OCMode_Inactive) || ((MODE) == TIM_OCMode_Toggle)|| ((MODE) == TIM_OCMode_PWM1) || ((MODE) == TIM_OCMode_PWM2) || ((MODE) == TIM_ForcedAction_Active) || ((MODE) == TIM_ForcedAction_InActive))
+# 268 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OPMode_Single ((uint16_t)0x0008)
+#define TIM_OPMode_Repetitive ((uint16_t)0x0000)
+#define IS_TIM_OPM_MODE(MODE) (((MODE) == TIM_OPMode_Single) || ((MODE) == TIM_OPMode_Repetitive))
+# 280 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_Channel_1 ((uint16_t)0x0000)
+#define TIM_Channel_2 ((uint16_t)0x0004)
+#define TIM_Channel_3 ((uint16_t)0x0008)
+#define TIM_Channel_4 ((uint16_t)0x000C)
+
+#define IS_TIM_CHANNEL(CHANNEL) (((CHANNEL) == TIM_Channel_1) || ((CHANNEL) == TIM_Channel_2) || ((CHANNEL) == TIM_Channel_3) || ((CHANNEL) == TIM_Channel_4))
+
+
+
+
+#define IS_TIM_PWMI_CHANNEL(CHANNEL) (((CHANNEL) == TIM_Channel_1) || ((CHANNEL) == TIM_Channel_2))
+
+#define IS_TIM_COMPLEMENTARY_CHANNEL(CHANNEL) (((CHANNEL) == TIM_Channel_1) || ((CHANNEL) == TIM_Channel_2) || ((CHANNEL) == TIM_Channel_3))
+# 303 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_CKD_DIV1 ((uint16_t)0x0000)
+#define TIM_CKD_DIV2 ((uint16_t)0x0100)
+#define TIM_CKD_DIV4 ((uint16_t)0x0200)
+#define IS_TIM_CKD_DIV(DIV) (((DIV) == TIM_CKD_DIV1) || ((DIV) == TIM_CKD_DIV2) || ((DIV) == TIM_CKD_DIV4))
+# 317 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_CounterMode_Up ((uint16_t)0x0000)
+#define TIM_CounterMode_Down ((uint16_t)0x0010)
+#define TIM_CounterMode_CenterAligned1 ((uint16_t)0x0020)
+#define TIM_CounterMode_CenterAligned2 ((uint16_t)0x0040)
+#define TIM_CounterMode_CenterAligned3 ((uint16_t)0x0060)
+#define IS_TIM_COUNTER_MODE(MODE) (((MODE) == TIM_CounterMode_Up) || ((MODE) == TIM_CounterMode_Down) || ((MODE) == TIM_CounterMode_CenterAligned1) || ((MODE) == TIM_CounterMode_CenterAligned2) || ((MODE) == TIM_CounterMode_CenterAligned3))
+# 335 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCPolarity_High ((uint16_t)0x0000)
+#define TIM_OCPolarity_Low ((uint16_t)0x0002)
+#define IS_TIM_OC_POLARITY(POLARITY) (((POLARITY) == TIM_OCPolarity_High) || ((POLARITY) == TIM_OCPolarity_Low))
+# 347 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCNPolarity_High ((uint16_t)0x0000)
+#define TIM_OCNPolarity_Low ((uint16_t)0x0008)
+#define IS_TIM_OCN_POLARITY(POLARITY) (((POLARITY) == TIM_OCNPolarity_High) || ((POLARITY) == TIM_OCNPolarity_Low))
+# 359 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OutputState_Disable ((uint16_t)0x0000)
+#define TIM_OutputState_Enable ((uint16_t)0x0001)
+#define IS_TIM_OUTPUT_STATE(STATE) (((STATE) == TIM_OutputState_Disable) || ((STATE) == TIM_OutputState_Enable))
+# 371 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OutputNState_Disable ((uint16_t)0x0000)
+#define TIM_OutputNState_Enable ((uint16_t)0x0004)
+#define IS_TIM_OUTPUTN_STATE(STATE) (((STATE) == TIM_OutputNState_Disable) || ((STATE) == TIM_OutputNState_Enable))
+# 383 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_CCx_Enable ((uint16_t)0x0001)
+#define TIM_CCx_Disable ((uint16_t)0x0000)
+#define IS_TIM_CCX(CCX) (((CCX) == TIM_CCx_Enable) || ((CCX) == TIM_CCx_Disable))
+# 395 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_CCxN_Enable ((uint16_t)0x0004)
+#define TIM_CCxN_Disable ((uint16_t)0x0000)
+#define IS_TIM_CCXN(CCXN) (((CCXN) == TIM_CCxN_Enable) || ((CCXN) == TIM_CCxN_Disable))
+# 407 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_Break_Enable ((uint16_t)0x1000)
+#define TIM_Break_Disable ((uint16_t)0x0000)
+#define IS_TIM_BREAK_STATE(STATE) (((STATE) == TIM_Break_Enable) || ((STATE) == TIM_Break_Disable))
+# 419 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_BreakPolarity_Low ((uint16_t)0x0000)
+#define TIM_BreakPolarity_High ((uint16_t)0x2000)
+#define IS_TIM_BREAK_POLARITY(POLARITY) (((POLARITY) == TIM_BreakPolarity_Low) || ((POLARITY) == TIM_BreakPolarity_High))
+# 431 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_AutomaticOutput_Enable ((uint16_t)0x4000)
+#define TIM_AutomaticOutput_Disable ((uint16_t)0x0000)
+#define IS_TIM_AUTOMATIC_OUTPUT_STATE(STATE) (((STATE) == TIM_AutomaticOutput_Enable) || ((STATE) == TIM_AutomaticOutput_Disable))
+# 443 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_LOCKLevel_OFF ((uint16_t)0x0000)
+#define TIM_LOCKLevel_1 ((uint16_t)0x0100)
+#define TIM_LOCKLevel_2 ((uint16_t)0x0200)
+#define TIM_LOCKLevel_3 ((uint16_t)0x0300)
+#define IS_TIM_LOCK_LEVEL(LEVEL) (((LEVEL) == TIM_LOCKLevel_OFF) || ((LEVEL) == TIM_LOCKLevel_1) || ((LEVEL) == TIM_LOCKLevel_2) || ((LEVEL) == TIM_LOCKLevel_3))
+# 459 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OSSIState_Enable ((uint16_t)0x0400)
+#define TIM_OSSIState_Disable ((uint16_t)0x0000)
+#define IS_TIM_OSSI_STATE(STATE) (((STATE) == TIM_OSSIState_Enable) || ((STATE) == TIM_OSSIState_Disable))
+# 471 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OSSRState_Enable ((uint16_t)0x0800)
+#define TIM_OSSRState_Disable ((uint16_t)0x0000)
+#define IS_TIM_OSSR_STATE(STATE) (((STATE) == TIM_OSSRState_Enable) || ((STATE) == TIM_OSSRState_Disable))
+# 483 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCIdleState_Set ((uint16_t)0x0100)
+#define TIM_OCIdleState_Reset ((uint16_t)0x0000)
+#define IS_TIM_OCIDLE_STATE(STATE) (((STATE) == TIM_OCIdleState_Set) || ((STATE) == TIM_OCIdleState_Reset))
+# 495 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCNIdleState_Set ((uint16_t)0x0200)
+#define TIM_OCNIdleState_Reset ((uint16_t)0x0000)
+#define IS_TIM_OCNIDLE_STATE(STATE) (((STATE) == TIM_OCNIdleState_Set) || ((STATE) == TIM_OCNIdleState_Reset))
+# 507 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_ICPolarity_Rising ((uint16_t)0x0000)
+#define TIM_ICPolarity_Falling ((uint16_t)0x0002)
+#define TIM_ICPolarity_BothEdge ((uint16_t)0x000A)
+#define IS_TIM_IC_POLARITY(POLARITY) (((POLARITY) == TIM_ICPolarity_Rising) || ((POLARITY) == TIM_ICPolarity_Falling)|| ((POLARITY) == TIM_ICPolarity_BothEdge))
+# 521 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_ICSelection_DirectTI ((uint16_t)0x0001)
+
+#define TIM_ICSelection_IndirectTI ((uint16_t)0x0002)
+
+#define TIM_ICSelection_TRC ((uint16_t)0x0003)
+#define IS_TIM_IC_SELECTION(SELECTION) (((SELECTION) == TIM_ICSelection_DirectTI) || ((SELECTION) == TIM_ICSelection_IndirectTI) || ((SELECTION) == TIM_ICSelection_TRC))
+# 537 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_ICPSC_DIV1 ((uint16_t)0x0000)
+#define TIM_ICPSC_DIV2 ((uint16_t)0x0004)
+#define TIM_ICPSC_DIV4 ((uint16_t)0x0008)
+#define TIM_ICPSC_DIV8 ((uint16_t)0x000C)
+#define IS_TIM_IC_PRESCALER(PRESCALER) (((PRESCALER) == TIM_ICPSC_DIV1) || ((PRESCALER) == TIM_ICPSC_DIV2) || ((PRESCALER) == TIM_ICPSC_DIV4) || ((PRESCALER) == TIM_ICPSC_DIV8))
+# 553 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_IT_Update ((uint16_t)0x0001)
+#define TIM_IT_CC1 ((uint16_t)0x0002)
+#define TIM_IT_CC2 ((uint16_t)0x0004)
+#define TIM_IT_CC3 ((uint16_t)0x0008)
+#define TIM_IT_CC4 ((uint16_t)0x0010)
+#define TIM_IT_COM ((uint16_t)0x0020)
+#define TIM_IT_Trigger ((uint16_t)0x0040)
+#define TIM_IT_Break ((uint16_t)0x0080)
+#define IS_TIM_IT(IT) ((((IT) & (uint16_t)0xFF00) == 0x0000) && ((IT) != 0x0000))
+
+#define IS_TIM_GET_IT(IT) (((IT) == TIM_IT_Update) || ((IT) == TIM_IT_CC1) || ((IT) == TIM_IT_CC2) || ((IT) == TIM_IT_CC3) || ((IT) == TIM_IT_CC4) || ((IT) == TIM_IT_COM) || ((IT) == TIM_IT_Trigger) || ((IT) == TIM_IT_Break))
+# 579 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_DMABase_CR1 ((uint16_t)0x0000)
+#define TIM_DMABase_CR2 ((uint16_t)0x0001)
+#define TIM_DMABase_SMCR ((uint16_t)0x0002)
+#define TIM_DMABase_DIER ((uint16_t)0x0003)
+#define TIM_DMABase_SR ((uint16_t)0x0004)
+#define TIM_DMABase_EGR ((uint16_t)0x0005)
+#define TIM_DMABase_CCMR1 ((uint16_t)0x0006)
+#define TIM_DMABase_CCMR2 ((uint16_t)0x0007)
+#define TIM_DMABase_CCER ((uint16_t)0x0008)
+#define TIM_DMABase_CNT ((uint16_t)0x0009)
+#define TIM_DMABase_PSC ((uint16_t)0x000A)
+#define TIM_DMABase_ARR ((uint16_t)0x000B)
+#define TIM_DMABase_RCR ((uint16_t)0x000C)
+#define TIM_DMABase_CCR1 ((uint16_t)0x000D)
+#define TIM_DMABase_CCR2 ((uint16_t)0x000E)
+#define TIM_DMABase_CCR3 ((uint16_t)0x000F)
+#define TIM_DMABase_CCR4 ((uint16_t)0x0010)
+#define TIM_DMABase_BDTR ((uint16_t)0x0011)
+#define TIM_DMABase_DCR ((uint16_t)0x0012)
+#define TIM_DMABase_OR ((uint16_t)0x0013)
+#define IS_TIM_DMA_BASE(BASE) (((BASE) == TIM_DMABase_CR1) || ((BASE) == TIM_DMABase_CR2) || ((BASE) == TIM_DMABase_SMCR) || ((BASE) == TIM_DMABase_DIER) || ((BASE) == TIM_DMABase_SR) || ((BASE) == TIM_DMABase_EGR) || ((BASE) == TIM_DMABase_CCMR1) || ((BASE) == TIM_DMABase_CCMR2) || ((BASE) == TIM_DMABase_CCER) || ((BASE) == TIM_DMABase_CNT) || ((BASE) == TIM_DMABase_PSC) || ((BASE) == TIM_DMABase_ARR) || ((BASE) == TIM_DMABase_RCR) || ((BASE) == TIM_DMABase_CCR1) || ((BASE) == TIM_DMABase_CCR2) || ((BASE) == TIM_DMABase_CCR3) || ((BASE) == TIM_DMABase_CCR4) || ((BASE) == TIM_DMABase_BDTR) || ((BASE) == TIM_DMABase_DCR) || ((BASE) == TIM_DMABase_OR))
+# 627 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_DMABurstLength_1Transfer ((uint16_t)0x0000)
+#define TIM_DMABurstLength_2Transfers ((uint16_t)0x0100)
+#define TIM_DMABurstLength_3Transfers ((uint16_t)0x0200)
+#define TIM_DMABurstLength_4Transfers ((uint16_t)0x0300)
+#define TIM_DMABurstLength_5Transfers ((uint16_t)0x0400)
+#define TIM_DMABurstLength_6Transfers ((uint16_t)0x0500)
+#define TIM_DMABurstLength_7Transfers ((uint16_t)0x0600)
+#define TIM_DMABurstLength_8Transfers ((uint16_t)0x0700)
+#define TIM_DMABurstLength_9Transfers ((uint16_t)0x0800)
+#define TIM_DMABurstLength_10Transfers ((uint16_t)0x0900)
+#define TIM_DMABurstLength_11Transfers ((uint16_t)0x0A00)
+#define TIM_DMABurstLength_12Transfers ((uint16_t)0x0B00)
+#define TIM_DMABurstLength_13Transfers ((uint16_t)0x0C00)
+#define TIM_DMABurstLength_14Transfers ((uint16_t)0x0D00)
+#define TIM_DMABurstLength_15Transfers ((uint16_t)0x0E00)
+#define TIM_DMABurstLength_16Transfers ((uint16_t)0x0F00)
+#define TIM_DMABurstLength_17Transfers ((uint16_t)0x1000)
+#define TIM_DMABurstLength_18Transfers ((uint16_t)0x1100)
+#define IS_TIM_DMA_LENGTH(LENGTH) (((LENGTH) == TIM_DMABurstLength_1Transfer) || ((LENGTH) == TIM_DMABurstLength_2Transfers) || ((LENGTH) == TIM_DMABurstLength_3Transfers) || ((LENGTH) == TIM_DMABurstLength_4Transfers) || ((LENGTH) == TIM_DMABurstLength_5Transfers) || ((LENGTH) == TIM_DMABurstLength_6Transfers) || ((LENGTH) == TIM_DMABurstLength_7Transfers) || ((LENGTH) == TIM_DMABurstLength_8Transfers) || ((LENGTH) == TIM_DMABurstLength_9Transfers) || ((LENGTH) == TIM_DMABurstLength_10Transfers) || ((LENGTH) == TIM_DMABurstLength_11Transfers) || ((LENGTH) == TIM_DMABurstLength_12Transfers) || ((LENGTH) == TIM_DMABurstLength_13Transfers) || ((LENGTH) == TIM_DMABurstLength_14Transfers) || ((LENGTH) == TIM_DMABurstLength_15Transfers) || ((LENGTH) == TIM_DMABurstLength_16Transfers) || ((LENGTH) == TIM_DMABurstLength_17Transfers) || ((LENGTH) == TIM_DMABurstLength_18Transfers))
+# 671 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_DMA_Update ((uint16_t)0x0100)
+#define TIM_DMA_CC1 ((uint16_t)0x0200)
+#define TIM_DMA_CC2 ((uint16_t)0x0400)
+#define TIM_DMA_CC3 ((uint16_t)0x0800)
+#define TIM_DMA_CC4 ((uint16_t)0x1000)
+#define TIM_DMA_COM ((uint16_t)0x2000)
+#define TIM_DMA_Trigger ((uint16_t)0x4000)
+#define IS_TIM_DMA_SOURCE(SOURCE) ((((SOURCE) & (uint16_t)0x80FF) == 0x0000) && ((SOURCE) != 0x0000))
+# 688 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_ExtTRGPSC_OFF ((uint16_t)0x0000)
+#define TIM_ExtTRGPSC_DIV2 ((uint16_t)0x1000)
+#define TIM_ExtTRGPSC_DIV4 ((uint16_t)0x2000)
+#define TIM_ExtTRGPSC_DIV8 ((uint16_t)0x3000)
+#define IS_TIM_EXT_PRESCALER(PRESCALER) (((PRESCALER) == TIM_ExtTRGPSC_OFF) || ((PRESCALER) == TIM_ExtTRGPSC_DIV2) || ((PRESCALER) == TIM_ExtTRGPSC_DIV4) || ((PRESCALER) == TIM_ExtTRGPSC_DIV8))
+# 704 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_TS_ITR0 ((uint16_t)0x0000)
+#define TIM_TS_ITR1 ((uint16_t)0x0010)
+#define TIM_TS_ITR2 ((uint16_t)0x0020)
+#define TIM_TS_ITR3 ((uint16_t)0x0030)
+#define TIM_TS_TI1F_ED ((uint16_t)0x0040)
+#define TIM_TS_TI1FP1 ((uint16_t)0x0050)
+#define TIM_TS_TI2FP2 ((uint16_t)0x0060)
+#define TIM_TS_ETRF ((uint16_t)0x0070)
+#define IS_TIM_TRIGGER_SELECTION(SELECTION) (((SELECTION) == TIM_TS_ITR0) || ((SELECTION) == TIM_TS_ITR1) || ((SELECTION) == TIM_TS_ITR2) || ((SELECTION) == TIM_TS_ITR3) || ((SELECTION) == TIM_TS_TI1F_ED) || ((SELECTION) == TIM_TS_TI1FP1) || ((SELECTION) == TIM_TS_TI2FP2) || ((SELECTION) == TIM_TS_ETRF))
+
+
+
+
+
+
+
+#define IS_TIM_INTERNAL_TRIGGER_SELECTION(SELECTION) (((SELECTION) == TIM_TS_ITR0) || ((SELECTION) == TIM_TS_ITR1) || ((SELECTION) == TIM_TS_ITR2) || ((SELECTION) == TIM_TS_ITR3))
+# 732 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_TIxExternalCLK1Source_TI1 ((uint16_t)0x0050)
+#define TIM_TIxExternalCLK1Source_TI2 ((uint16_t)0x0060)
+#define TIM_TIxExternalCLK1Source_TI1ED ((uint16_t)0x0040)
+# 743 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_ExtTRGPolarity_Inverted ((uint16_t)0x8000)
+#define TIM_ExtTRGPolarity_NonInverted ((uint16_t)0x0000)
+#define IS_TIM_EXT_POLARITY(POLARITY) (((POLARITY) == TIM_ExtTRGPolarity_Inverted) || ((POLARITY) == TIM_ExtTRGPolarity_NonInverted))
+# 755 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_PSCReloadMode_Update ((uint16_t)0x0000)
+#define TIM_PSCReloadMode_Immediate ((uint16_t)0x0001)
+#define IS_TIM_PRESCALER_RELOAD(RELOAD) (((RELOAD) == TIM_PSCReloadMode_Update) || ((RELOAD) == TIM_PSCReloadMode_Immediate))
+# 767 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_ForcedAction_Active ((uint16_t)0x0050)
+#define TIM_ForcedAction_InActive ((uint16_t)0x0040)
+#define IS_TIM_FORCED_ACTION(ACTION) (((ACTION) == TIM_ForcedAction_Active) || ((ACTION) == TIM_ForcedAction_InActive))
+# 779 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_EncoderMode_TI1 ((uint16_t)0x0001)
+#define TIM_EncoderMode_TI2 ((uint16_t)0x0002)
+#define TIM_EncoderMode_TI12 ((uint16_t)0x0003)
+#define IS_TIM_ENCODER_MODE(MODE) (((MODE) == TIM_EncoderMode_TI1) || ((MODE) == TIM_EncoderMode_TI2) || ((MODE) == TIM_EncoderMode_TI12))
+# 794 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_EventSource_Update ((uint16_t)0x0001)
+#define TIM_EventSource_CC1 ((uint16_t)0x0002)
+#define TIM_EventSource_CC2 ((uint16_t)0x0004)
+#define TIM_EventSource_CC3 ((uint16_t)0x0008)
+#define TIM_EventSource_CC4 ((uint16_t)0x0010)
+#define TIM_EventSource_COM ((uint16_t)0x0020)
+#define TIM_EventSource_Trigger ((uint16_t)0x0040)
+#define TIM_EventSource_Break ((uint16_t)0x0080)
+#define IS_TIM_EVENT_SOURCE(SOURCE) ((((SOURCE) & (uint16_t)0xFF00) == 0x0000) && ((SOURCE) != 0x0000))
+# 812 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_UpdateSource_Global ((uint16_t)0x0000)
+
+
+#define TIM_UpdateSource_Regular ((uint16_t)0x0001)
+#define IS_TIM_UPDATE_SOURCE(SOURCE) (((SOURCE) == TIM_UpdateSource_Global) || ((SOURCE) == TIM_UpdateSource_Regular))
+# 826 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCPreload_Enable ((uint16_t)0x0008)
+#define TIM_OCPreload_Disable ((uint16_t)0x0000)
+#define IS_TIM_OCPRELOAD_STATE(STATE) (((STATE) == TIM_OCPreload_Enable) || ((STATE) == TIM_OCPreload_Disable))
+# 838 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCFast_Enable ((uint16_t)0x0004)
+#define TIM_OCFast_Disable ((uint16_t)0x0000)
+#define IS_TIM_OCFAST_STATE(STATE) (((STATE) == TIM_OCFast_Enable) || ((STATE) == TIM_OCFast_Disable))
+# 851 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_OCClear_Enable ((uint16_t)0x0080)
+#define TIM_OCClear_Disable ((uint16_t)0x0000)
+#define IS_TIM_OCCLEAR_STATE(STATE) (((STATE) == TIM_OCClear_Enable) || ((STATE) == TIM_OCClear_Disable))
+# 863 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_TRGOSource_Reset ((uint16_t)0x0000)
+#define TIM_TRGOSource_Enable ((uint16_t)0x0010)
+#define TIM_TRGOSource_Update ((uint16_t)0x0020)
+#define TIM_TRGOSource_OC1 ((uint16_t)0x0030)
+#define TIM_TRGOSource_OC1Ref ((uint16_t)0x0040)
+#define TIM_TRGOSource_OC2Ref ((uint16_t)0x0050)
+#define TIM_TRGOSource_OC3Ref ((uint16_t)0x0060)
+#define TIM_TRGOSource_OC4Ref ((uint16_t)0x0070)
+#define IS_TIM_TRGO_SOURCE(SOURCE) (((SOURCE) == TIM_TRGOSource_Reset) || ((SOURCE) == TIM_TRGOSource_Enable) || ((SOURCE) == TIM_TRGOSource_Update) || ((SOURCE) == TIM_TRGOSource_OC1) || ((SOURCE) == TIM_TRGOSource_OC1Ref) || ((SOURCE) == TIM_TRGOSource_OC2Ref) || ((SOURCE) == TIM_TRGOSource_OC3Ref) || ((SOURCE) == TIM_TRGOSource_OC4Ref))
+# 887 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_SlaveMode_Reset ((uint16_t)0x0004)
+#define TIM_SlaveMode_Gated ((uint16_t)0x0005)
+#define TIM_SlaveMode_Trigger ((uint16_t)0x0006)
+#define TIM_SlaveMode_External1 ((uint16_t)0x0007)
+#define IS_TIM_SLAVE_MODE(MODE) (((MODE) == TIM_SlaveMode_Reset) || ((MODE) == TIM_SlaveMode_Gated) || ((MODE) == TIM_SlaveMode_Trigger) || ((MODE) == TIM_SlaveMode_External1))
+# 903 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_MasterSlaveMode_Enable ((uint16_t)0x0080)
+#define TIM_MasterSlaveMode_Disable ((uint16_t)0x0000)
+#define IS_TIM_MSM_STATE(STATE) (((STATE) == TIM_MasterSlaveMode_Enable) || ((STATE) == TIM_MasterSlaveMode_Disable))
+# 914 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM2_TIM8_TRGO ((uint16_t)0x0000)
+#define TIM2_ETH_PTP ((uint16_t)0x0400)
+#define TIM2_USBFS_SOF ((uint16_t)0x0800)
+#define TIM2_USBHS_SOF ((uint16_t)0x0C00)
+
+#define TIM5_GPIO ((uint16_t)0x0000)
+#define TIM5_LSI ((uint16_t)0x0040)
+#define TIM5_LSE ((uint16_t)0x0080)
+#define TIM5_RTC ((uint16_t)0x00C0)
+
+#define TIM11_GPIO ((uint16_t)0x0000)
+#define TIM11_HSE ((uint16_t)0x0002)
+
+#define IS_TIM_REMAP(TIM_REMAP) (((TIM_REMAP) == TIM2_TIM8_TRGO)|| ((TIM_REMAP) == TIM2_ETH_PTP)|| ((TIM_REMAP) == TIM2_USBFS_SOF)|| ((TIM_REMAP) == TIM2_USBHS_SOF)|| ((TIM_REMAP) == TIM5_GPIO)|| ((TIM_REMAP) == TIM5_LSI)|| ((TIM_REMAP) == TIM5_LSE)|| ((TIM_REMAP) == TIM5_RTC)|| ((TIM_REMAP) == TIM11_GPIO)|| ((TIM_REMAP) == TIM11_HSE))
+# 945 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_FLAG_Update ((uint16_t)0x0001)
+#define TIM_FLAG_CC1 ((uint16_t)0x0002)
+#define TIM_FLAG_CC2 ((uint16_t)0x0004)
+#define TIM_FLAG_CC3 ((uint16_t)0x0008)
+#define TIM_FLAG_CC4 ((uint16_t)0x0010)
+#define TIM_FLAG_COM ((uint16_t)0x0020)
+#define TIM_FLAG_Trigger ((uint16_t)0x0040)
+#define TIM_FLAG_Break ((uint16_t)0x0080)
+#define TIM_FLAG_CC1OF ((uint16_t)0x0200)
+#define TIM_FLAG_CC2OF ((uint16_t)0x0400)
+#define TIM_FLAG_CC3OF ((uint16_t)0x0800)
+#define TIM_FLAG_CC4OF ((uint16_t)0x1000)
+#define IS_TIM_GET_FLAG(FLAG) (((FLAG) == TIM_FLAG_Update) || ((FLAG) == TIM_FLAG_CC1) || ((FLAG) == TIM_FLAG_CC2) || ((FLAG) == TIM_FLAG_CC3) || ((FLAG) == TIM_FLAG_CC4) || ((FLAG) == TIM_FLAG_COM) || ((FLAG) == TIM_FLAG_Trigger) || ((FLAG) == TIM_FLAG_Break) || ((FLAG) == TIM_FLAG_CC1OF) || ((FLAG) == TIM_FLAG_CC2OF) || ((FLAG) == TIM_FLAG_CC3OF) || ((FLAG) == TIM_FLAG_CC4OF))
+# 978 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define IS_TIM_IC_FILTER(ICFILTER) ((ICFILTER) <= 0xF)
+# 987 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define IS_TIM_EXT_FILTER(EXTFILTER) ((EXTFILTER) <= 0xF)
+# 996 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+#define TIM_DMABurstLength_1Byte TIM_DMABurstLength_1Transfer
+#define TIM_DMABurstLength_2Bytes TIM_DMABurstLength_2Transfers
+#define TIM_DMABurstLength_3Bytes TIM_DMABurstLength_3Transfers
+#define TIM_DMABurstLength_4Bytes TIM_DMABurstLength_4Transfers
+#define TIM_DMABurstLength_5Bytes TIM_DMABurstLength_5Transfers
+#define TIM_DMABurstLength_6Bytes TIM_DMABurstLength_6Transfers
+#define TIM_DMABurstLength_7Bytes TIM_DMABurstLength_7Transfers
+#define TIM_DMABurstLength_8Bytes TIM_DMABurstLength_8Transfers
+#define TIM_DMABurstLength_9Bytes TIM_DMABurstLength_9Transfers
+#define TIM_DMABurstLength_10Bytes TIM_DMABurstLength_10Transfers
+#define TIM_DMABurstLength_11Bytes TIM_DMABurstLength_11Transfers
+#define TIM_DMABurstLength_12Bytes TIM_DMABurstLength_12Transfers
+#define TIM_DMABurstLength_13Bytes TIM_DMABurstLength_13Transfers
+#define TIM_DMABurstLength_14Bytes TIM_DMABurstLength_14Transfers
+#define TIM_DMABurstLength_15Bytes TIM_DMABurstLength_15Transfers
+#define TIM_DMABurstLength_16Bytes TIM_DMABurstLength_16Transfers
+#define TIM_DMABurstLength_17Bytes TIM_DMABurstLength_17Transfers
+#define TIM_DMABurstLength_18Bytes TIM_DMABurstLength_18Transfers
+# 1026 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
+void TIM_DeInit(TIM_TypeDef* TIMx);
+void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct);
+void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct);
+void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode);
+void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode);
+void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter);
+void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload);
+uint32_t TIM_GetCounter(TIM_TypeDef* TIMx);
+uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx);
+void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState);
+void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource);
+void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState);
+void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode);
+void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD);
+void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState);
+
+
+void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
+void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
+void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
+void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct);
+void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct);
+void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);
+void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1);
+void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2);
+void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3);
+void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4);
+void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);
+void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);
+void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);
+void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction);
+void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);
+void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);
+void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);
+void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload);
+void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);
+void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);
+void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);
+void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);
+void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);
+void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);
+void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);
+void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);
+void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);
+void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);
+void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);
+void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);
+void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);
+void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);
+void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);
+void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);
+void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);
+
+
+void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct);
+void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct);
+void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct);
+uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx);
+uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx);
+uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx);
+uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx);
+void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);
+void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);
+void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);
+void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);
+
+
+void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct);
+void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct);
+void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState);
+void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState);
+void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState);
+
+
+void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState);
+void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource);
+FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);
+void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);
+ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT);
+void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT);
+void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength);
+void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState);
+void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState);
+
+
+void TIM_InternalClockConfig(TIM_TypeDef* TIMx);
+void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);
+void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
+                                uint16_t TIM_ICPolarity, uint16_t ICFilter);
+void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
+                             uint16_t ExtTRGFilter);
+void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
+                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter);
+
+
+void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);
+void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource);
+void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);
+void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);
+void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
+                   uint16_t ExtTRGFilter);
+
+
+void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
+                                uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity);
+void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState);
 
-    private:
-        void (*_setup)(void);
-        void (*_loop)(void);
-    };
 
-    virtual void run(int argc, char * const argv[], Callbacks* callbacks) const = 0;
+void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap);
 
-    AP_HAL::UARTDriver* uartA;
-    AP_HAL::UARTDriver* uartB;
-    AP_HAL::UARTDriver* uartC;
-    AP_HAL::UARTDriver* uartD;
-    AP_HAL::UARTDriver* uartE;
-    AP_HAL::UARTDriver* uartF;
-    AP_HAL::I2CDeviceManager* i2c_mgr;
-    AP_HAL::SPIDeviceManager* spi;
-    AP_HAL::AnalogIn* analogin;
-    AP_HAL::Storage* storage;
-    AP_HAL::UARTDriver* console;
-    AP_HAL::GPIO* gpio;
-    AP_HAL::RCInput* rcin;
-    AP_HAL::RCOutput* rcout;
-    AP_HAL::Scheduler* scheduler;
-    AP_HAL::Util *util;
-    AP_HAL::OpticalFlow *opticalflow;
-};
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Main.h" 2
 
+}
+# 51 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define __STM32F4xx_USART_H 
 
-#define AP_MAIN __EXPORT ArduPilot_main
 
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+typedef struct
+{
+  uint32_t USART_BaudRate;
 
 
 
 
 
-#define AP_HAL_MAIN() AP_HAL::HAL::FunCallbacks callbacks(setup, loop); extern "C" { int AP_MAIN(int argc, char* const argv[]); int AP_MAIN(int argc, char* const argv[]) { hal.run(argc, argv, &callbacks); return 0; } }
-# 39 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL_Main.h"
-#define AP_HAL_MAIN_CALLBACKS(CALLBACKS) extern "C" { int AP_MAIN(int argc, char* const argv[]); int AP_MAIN(int argc, char* const argv[]) { hal.run(argc, argv, CALLBACKS); return 0; } }
-# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 2
-# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Scheduler.h" 1
+  uint16_t USART_WordLength;
        
-# 11 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Scheduler.h"
-class AP_HAL::Scheduler {
-public:
-    Scheduler() {}
-    virtual void init() = 0;
-    virtual void delay(uint16_t ms) = 0;
 
+  uint16_t USART_StopBits;
 
 
+  uint16_t USART_Parity;
 
 
-    virtual void delay_microseconds(uint16_t us) = 0;
-# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Scheduler.h"
-    virtual void delay_microseconds_boost(uint16_t us) { delay_microseconds(us); }
 
-    virtual void register_delay_callback(AP_HAL::Proc,
-                                             uint16_t min_time_ms) = 0;
 
 
-    virtual void register_timer_process(AP_HAL::MemberProc) = 0;
-    virtual bool register_timer_process(AP_HAL::MemberProc proc, uint8_t freq_div)
-    {
-        register_timer_process(proc);
-        return false;
-    }
 
+  uint16_t USART_Mode;
 
-    virtual void register_io_process(AP_HAL::MemberProc) = 0;
 
+  uint16_t USART_HardwareFlowControl;
 
-    virtual void suspend_timer_procs() = 0;
-    virtual void resume_timer_procs() = 0;
 
-    virtual bool in_timerprocess() = 0;
+} USART_InitTypeDef;
 
-    virtual void register_timer_failsafe(AP_HAL::Proc,
-                                             uint32_t period_us) = 0;
 
-    virtual void system_initialized() = 0;
 
-    virtual void reboot(bool hold_in_bootloader) = 0;
 
 
+typedef struct
+{
 
+  uint16_t USART_Clock;
 
-    virtual void stop_clock(uint64_t time_usec) {}
-};
-# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Semaphores.h" 1
        
+  uint16_t USART_CPOL;
 
 
+  uint16_t USART_CPHA;
 
-#define HAL_SEMAPHORE_BLOCK_FOREVER 0
 
-class AP_HAL::Semaphore {
-public:
-    virtual bool take(uint32_t timeout_ms) __attribute__ ((warn_unused_result)) = 0 ;
-    virtual bool take_nonblocking() __attribute__ ((warn_unused_result)) = 0;
-    virtual bool give() = 0;
-    virtual ~Semaphore(void) {}
-};
-# 19 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Util.h" 1
+  uint16_t USART_LastBit;
        
 
+} USART_ClockInitTypeDef;
 
 
 
-class AP_HAL::Util {
-public:
-    int snprintf(char* str, size_t size,
-                 const char *format, ...);
 
-    int vsnprintf(char* str, size_t size,
-                  const char *format, va_list ap);
 
-    void set_soft_armed(const bool b) { soft_armed = b; }
-    bool get_soft_armed() const { return soft_armed; }
 
-    void set_capabilities(uint64_t cap) { capabilities |= cap; }
-    void clear_capabilities(uint64_t cap) { capabilities &= ~(cap); }
-    uint64_t get_capabilities() const { return capabilities; }
 
-    virtual const char* get_custom_log_directory() { return nullptr; }
-    virtual const char* get_custom_terrain_directory() const { return nullptr; }
+#define IS_USART_ALL_PERIPH(PERIPH) (((PERIPH) == USART1) || ((PERIPH) == USART2) || ((PERIPH) == USART3) || ((PERIPH) == UART4) || ((PERIPH) == UART5) || ((PERIPH) == USART6) || ((PERIPH) == UART7) || ((PERIPH) == UART8))
+# 119 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define IS_USART_1236_PERIPH(PERIPH) (((PERIPH) == USART1) || ((PERIPH) == USART2) || ((PERIPH) == USART3) || ((PERIPH) == USART6))
+# 128 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_WordLength_8b ((uint16_t)0x0000)
+#define USART_WordLength_9b ((uint16_t)0x1000)
 
+#define IS_USART_WORD_LENGTH(LENGTH) (((LENGTH) == USART_WordLength_8b) || ((LENGTH) == USART_WordLength_9b))
+# 141 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_StopBits_1 ((uint16_t)0x0000)
+#define USART_StopBits_0_5 ((uint16_t)0x1000)
+#define USART_StopBits_2 ((uint16_t)0x2000)
+#define USART_StopBits_1_5 ((uint16_t)0x3000)
+#define IS_USART_STOPBITS(STOPBITS) (((STOPBITS) == USART_StopBits_1) || ((STOPBITS) == USART_StopBits_0_5) || ((STOPBITS) == USART_StopBits_2) || ((STOPBITS) == USART_StopBits_1_5))
+# 157 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_Parity_No ((uint16_t)0x0000)
+#define USART_Parity_Even ((uint16_t)0x0400)
+#define USART_Parity_Odd ((uint16_t)0x0600)
+#define IS_USART_PARITY(PARITY) (((PARITY) == USART_Parity_No) || ((PARITY) == USART_Parity_Even) || ((PARITY) == USART_Parity_Odd))
+# 171 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_Mode_Rx ((uint16_t)0x0004)
+#define USART_Mode_Tx ((uint16_t)0x0008)
+#define IS_USART_MODE(MODE) ((((MODE) & (uint16_t)0xFFF3) == 0x00) && ((MODE) != (uint16_t)0x00))
 
-    virtual const char* get_custom_defaults_file() const {
-        return "/etc/defaults.parm";
-    }
 
 
 
 
-    virtual bool run_debug_shell(AP_HAL::BetterStream *stream) = 0;
 
-    enum safety_state {
-        SAFETY_NONE, SAFETY_DISARMED, SAFETY_ARMED
-    };
 
+#define USART_HardwareFlowControl_None ((uint16_t)0x0000)
+#define USART_HardwareFlowControl_RTS ((uint16_t)0x0100)
+#define USART_HardwareFlowControl_CTS ((uint16_t)0x0200)
+#define USART_HardwareFlowControl_RTS_CTS ((uint16_t)0x0300)
+#define IS_USART_HARDWARE_FLOW_CONTROL(CONTROL) (((CONTROL) == USART_HardwareFlowControl_None) || ((CONTROL) == USART_HardwareFlowControl_RTS) || ((CONTROL) == USART_HardwareFlowControl_CTS) || ((CONTROL) == USART_HardwareFlowControl_RTS_CTS))
+# 197 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_Clock_Disable ((uint16_t)0x0000)
+#define USART_Clock_Enable ((uint16_t)0x0800)
+#define IS_USART_CLOCK(CLOCK) (((CLOCK) == USART_Clock_Disable) || ((CLOCK) == USART_Clock_Enable))
+# 209 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_CPOL_Low ((uint16_t)0x0000)
+#define USART_CPOL_High ((uint16_t)0x0400)
+#define IS_USART_CPOL(CPOL) (((CPOL) == USART_CPOL_Low) || ((CPOL) == USART_CPOL_High))
+# 221 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_CPHA_1Edge ((uint16_t)0x0000)
+#define USART_CPHA_2Edge ((uint16_t)0x0200)
+#define IS_USART_CPHA(CPHA) (((CPHA) == USART_CPHA_1Edge) || ((CPHA) == USART_CPHA_2Edge))
+# 233 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_LastBit_Disable ((uint16_t)0x0000)
+#define USART_LastBit_Enable ((uint16_t)0x0100)
+#define IS_USART_LASTBIT(LASTBIT) (((LASTBIT) == USART_LastBit_Disable) || ((LASTBIT) == USART_LastBit_Enable))
+# 245 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_IT_PE ((uint16_t)0x0028)
+#define USART_IT_TXE ((uint16_t)0x0727)
+#define USART_IT_TC ((uint16_t)0x0626)
+#define USART_IT_RXNE ((uint16_t)0x0525)
+#define USART_IT_ORE_RX ((uint16_t)0x0325)
+#define USART_IT_IDLE ((uint16_t)0x0424)
+#define USART_IT_LBD ((uint16_t)0x0846)
+#define USART_IT_CTS ((uint16_t)0x096A)
+#define USART_IT_ERR ((uint16_t)0x0060)
+#define USART_IT_ORE_ER ((uint16_t)0x0360)
+#define USART_IT_NE ((uint16_t)0x0260)
+#define USART_IT_FE ((uint16_t)0x0160)
 
 
 
-    virtual enum safety_state safety_switch_state(void) { return SAFETY_NONE; }
 
+#define USART_IT_ORE USART_IT_ORE_ER
 
 
 
-    virtual void set_system_clock(uint64_t time_utc_usec) {}
 
+#define IS_USART_CONFIG_IT(IT) (((IT) == USART_IT_PE) || ((IT) == USART_IT_TXE) || ((IT) == USART_IT_TC) || ((IT) == USART_IT_RXNE) || ((IT) == USART_IT_IDLE) || ((IT) == USART_IT_LBD) || ((IT) == USART_IT_CTS) || ((IT) == USART_IT_ERR))
 
 
 
-    uint64_t get_system_clock_ms() const;
+#define IS_USART_GET_IT(IT) (((IT) == USART_IT_PE) || ((IT) == USART_IT_TXE) || ((IT) == USART_IT_TC) || ((IT) == USART_IT_RXNE) || ((IT) == USART_IT_IDLE) || ((IT) == USART_IT_LBD) || ((IT) == USART_IT_CTS) || ((IT) == USART_IT_ORE) || ((IT) == USART_IT_ORE_RX) || ((IT) == USART_IT_ORE_ER) || ((IT) == USART_IT_NE) || ((IT) == USART_IT_FE))
 
 
 
 
-    void get_system_clock_utc(int32_t &hour, int32_t &min, int32_t &sec, int32_t &ms) const;
 
-    uint32_t get_time_utc(int32_t hour, int32_t min, int32_t sec, int32_t ms) const;
-# 67 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/Util.h"
-    virtual bool get_system_id(char buf[40]) { return false; }
+#define IS_USART_CLEAR_IT(IT) (((IT) == USART_IT_TC) || ((IT) == USART_IT_RXNE) || ((IT) == USART_IT_LBD) || ((IT) == USART_IT_CTS))
+# 286 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_DMAReq_Tx ((uint16_t)0x0080)
+#define USART_DMAReq_Rx ((uint16_t)0x0040)
+#define IS_USART_DMAREQ(DMAREQ) ((((DMAREQ) & (uint16_t)0xFF3F) == 0x00) && ((DMAREQ) != (uint16_t)0x00))
+# 298 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_WakeUp_IdleLine ((uint16_t)0x0000)
+#define USART_WakeUp_AddressMark ((uint16_t)0x0800)
+#define IS_USART_WAKEUP(WAKEUP) (((WAKEUP) == USART_WakeUp_IdleLine) || ((WAKEUP) == USART_WakeUp_AddressMark))
+# 310 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_LINBreakDetectLength_10b ((uint16_t)0x0000)
+#define USART_LINBreakDetectLength_11b ((uint16_t)0x0020)
+#define IS_USART_LIN_BREAK_DETECT_LENGTH(LENGTH) (((LENGTH) == USART_LINBreakDetectLength_10b) || ((LENGTH) == USART_LINBreakDetectLength_11b))
+# 323 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_IrDAMode_LowPower ((uint16_t)0x0004)
+#define USART_IrDAMode_Normal ((uint16_t)0x0000)
+#define IS_USART_IRDA_MODE(MODE) (((MODE) == USART_IrDAMode_LowPower) || ((MODE) == USART_IrDAMode_Normal))
+# 335 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+#define USART_FLAG_CTS ((uint16_t)0x0200)
+#define USART_FLAG_LBD ((uint16_t)0x0100)
+#define USART_FLAG_TXE ((uint16_t)0x0080)
+#define USART_FLAG_TC ((uint16_t)0x0040)
+#define USART_FLAG_RXNE ((uint16_t)0x0020)
+#define USART_FLAG_IDLE ((uint16_t)0x0010)
+#define USART_FLAG_ORE ((uint16_t)0x0008)
+#define USART_FLAG_NE ((uint16_t)0x0004)
+#define USART_FLAG_FE ((uint16_t)0x0002)
+#define USART_FLAG_PE ((uint16_t)0x0001)
+#define IS_USART_FLAG(FLAG) (((FLAG) == USART_FLAG_PE) || ((FLAG) == USART_FLAG_TXE) || ((FLAG) == USART_FLAG_TC) || ((FLAG) == USART_FLAG_RXNE) || ((FLAG) == USART_FLAG_IDLE) || ((FLAG) == USART_FLAG_LBD) || ((FLAG) == USART_FLAG_CTS) || ((FLAG) == USART_FLAG_ORE) || ((FLAG) == USART_FLAG_NE) || ((FLAG) == USART_FLAG_FE))
 
 
 
 
-    virtual uint32_t available_memory(void) { return 4096; }
 
+#define IS_USART_CLEAR_FLAG(FLAG) ((((FLAG) & (uint16_t)0xFC9F) == 0x00) && ((FLAG) != (uint16_t)0x00))
 
+#define IS_USART_BAUDRATE(BAUDRATE) (((BAUDRATE) > 0) && ((BAUDRATE) < 7500001))
+#define IS_USART_ADDRESS(ADDRESS) ((ADDRESS) <= 0xF)
+#define IS_USART_DATA(DATA) ((DATA) <= 0x1FF)
+# 369 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
+void USART_DeInit(USART_TypeDef* USARTx);
 
 
-    virtual void commandline_arguments(uint8_t &argc, char * const *&argv) { argc = 0; }
+void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct);
+void USART_StructInit(USART_InitTypeDef* USART_InitStruct);
+void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct);
+void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct);
+void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState);
+void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler);
+void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState);
+void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState);
 
 
+void USART_SendData(USART_TypeDef* USARTx, uint16_t Data);
+uint16_t USART_ReceiveData(USART_TypeDef* USARTx);
 
 
-    virtual bool toneAlarm_init() { return false;}
-    virtual void toneAlarm_set_tune(uint8_t tune) {}
-    virtual void _toneAlarm_timer_tick() {}
+void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address);
+void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp);
+void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState);
 
 
+void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength);
+void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState);
+void USART_SendBreak(USART_TypeDef* USARTx);
 
 
-    virtual AP_HAL::Stream *get_shell_stream() { return nullptr; }
+void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState);
 
 
-    virtual void set_imu_temp(float current) {}
+void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState);
+void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState);
+void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime);
 
 
-    virtual void set_imu_target_temp(int8_t *target) {}
+void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode);
+void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState);
 
 
+void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState);
 
 
-    enum perf_counter_type {
-        PC_COUNT,
-        PC_ELAPSED,
-        PC_INTERVAL
-    };
-    typedef void *perf_counter_t;
-    virtual perf_counter_t perf_alloc(perf_counter_type t, const char *name) { return nullptr; }
-    virtual void perf_begin(perf_counter_t h) {}
-    virtual void perf_end(perf_counter_t h) {}
-    virtual void perf_count(perf_counter_t h) {}
+void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState);
+FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG);
+void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG);
+ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT);
+void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT);
 
 
-    virtual Semaphore *new_semaphore(void) { return nullptr; }
+}
+# 52 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_wwdg.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_wwdg.h"
+#define __STM32F4xx_WWDG_H 
 
 
-    virtual void *dma_allocate(size_t size) { return malloc(size); }
-    virtual void dma_free(void *ptr, size_t size) { return free(ptr); }
+ extern "C" {
+# 59 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_wwdg.h"
+#define WWDG_Prescaler_1 ((uint32_t)0x00000000)
+#define WWDG_Prescaler_2 ((uint32_t)0x00000080)
+#define WWDG_Prescaler_4 ((uint32_t)0x00000100)
+#define WWDG_Prescaler_8 ((uint32_t)0x00000180)
+#define IS_WWDG_PRESCALER(PRESCALER) (((PRESCALER) == WWDG_Prescaler_1) || ((PRESCALER) == WWDG_Prescaler_2) || ((PRESCALER) == WWDG_Prescaler_4) || ((PRESCALER) == WWDG_Prescaler_8))
 
-protected:
 
 
-    bool soft_armed = false;
-    uint64_t capabilities = 0;
-};
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_HAL/AP_HAL.h" 2
-# 28 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/StorageManager/StorageManager.h" 1
-# 21 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/StorageManager/StorageManager.h"
-       
-# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/StorageManager/StorageManager.h"
-#define STORAGE_NUM_AREAS 13
-# 42 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/StorageManager/StorageManager.h"
-class StorageManager {
-    friend class StorageAccess;
-public:
-    enum StorageType {
-        StorageParam = 0,
-        StorageFence = 1,
-        StorageRally = 2,
-        StorageMission = 3,
-        StorageKeys = 4
-    };
+#define IS_WWDG_WINDOW_VALUE(VALUE) ((VALUE) <= 0x7F)
+#define IS_WWDG_COUNTER(COUNTER) (((COUNTER) >= 0x40) && ((COUNTER) <= 0x7F))
+# 82 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_wwdg.h"
+void WWDG_DeInit(void);
 
 
-    static void erase(void);
+void WWDG_SetPrescaler(uint32_t WWDG_Prescaler);
+void WWDG_SetWindowValue(uint8_t WindowValue);
+void WWDG_EnableIT(void);
+void WWDG_SetCounter(uint8_t Counter);
 
 
-    static void set_layout_copter(void) { layout = layout_copter; }
+void WWDG_Enable(uint8_t Counter);
 
-private:
-    struct StorageArea {
-        StorageType type;
-        uint16_t offset;
-        uint16_t length;
-    };
 
+FlagStatus WWDG_GetFlagStatus(void);
+void WWDG_ClearFlag(void);
 
-    static const StorageArea layout_copter[13];
-    static const StorageArea layout_default[13];
-    static const StorageArea *layout;
-};
 
+}
+# 53 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h" 1
+# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+#define __MISC_H 
 
 
+ extern "C" {
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+typedef struct
+{
+  uint8_t NVIC_IRQChannel;
 
-class StorageAccess {
-public:
 
-    StorageAccess(StorageManager::StorageType _type);
 
 
-    uint16_t size(void) const { return total_size; }
+  uint8_t NVIC_IRQChannelPreemptionPriority;
 
 
-    bool read_block(void *dst, uint16_t src, size_t n) const;
-    bool write_block(uint16_t dst, const void* src, size_t n) const;
 
 
-    uint8_t read_byte(uint16_t loc) const;
-    uint16_t read_uint16(uint16_t loc) const;
-    uint32_t read_uint32(uint16_t loc) const;
+  uint8_t NVIC_IRQChannelSubPriority;
 
-    void write_byte(uint16_t loc, uint8_t value) const;
-    void write_uint16(uint16_t loc, uint16_t value) const;
-    void write_uint32(uint16_t loc, uint32_t value) const;
 
-private:
-    const StorageManager::StorageType type;
-    uint16_t total_size;
-};
-# 29 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h" 2
 
-# 1 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/float.h" 1 3 4
-# 29 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/float.h" 3 4
-#define _FLOAT_H___ 
 
+  FunctionalState NVIC_IRQChannelCmd;
 
-#undef FLT_RADIX
-#define FLT_RADIX __FLT_RADIX__
 
+} NVIC_InitTypeDef;
+# 86 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+#define NVIC_VectTab_RAM ((uint32_t)0x20000000)
+#define NVIC_VectTab_FLASH ((uint32_t)0x08000000)
+#define IS_NVIC_VECTTAB(VECTTAB) (((VECTTAB) == NVIC_VectTab_RAM) || ((VECTTAB) == NVIC_VectTab_FLASH))
+# 98 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+#define NVIC_LP_SEVONPEND ((uint8_t)0x10)
+#define NVIC_LP_SLEEPDEEP ((uint8_t)0x04)
+#define NVIC_LP_SLEEPONEXIT ((uint8_t)0x02)
+#define IS_NVIC_LP(LP) (((LP) == NVIC_LP_SEVONPEND) || ((LP) == NVIC_LP_SLEEPDEEP) || ((LP) == NVIC_LP_SLEEPONEXIT))
+# 112 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+#define NVIC_PriorityGroup_0 ((uint32_t)0x700)
 
-#undef FLT_MANT_DIG
-#undef DBL_MANT_DIG
-#undef LDBL_MANT_DIG
-#define FLT_MANT_DIG __FLT_MANT_DIG__
-#define DBL_MANT_DIG __DBL_MANT_DIG__
-#define LDBL_MANT_DIG __LDBL_MANT_DIG__
-# 50 "/usr/local/gcc-arm-none-eabi-4_9-2014q4/lib/gcc/arm-none-eabi/4.9.3/include/float.h" 3 4
-#undef FLT_DIG
-#undef DBL_DIG
-#undef LDBL_DIG
-#define FLT_DIG __FLT_DIG__
-#define DBL_DIG __DBL_DIG__
-#define LDBL_DIG __LDBL_DIG__
+#define NVIC_PriorityGroup_1 ((uint32_t)0x600)
 
+#define NVIC_PriorityGroup_2 ((uint32_t)0x500)
 
-#undef FLT_MIN_EXP
-#undef DBL_MIN_EXP
-#undef LDBL_MIN_EXP
-#define FLT_MIN_EXP __FLT_MIN_EXP__
-#define DBL_MIN_EXP __DBL_MIN_EXP__
-#define LDBL_MIN_EXP __LDBL_MIN_EXP__
+#define NVIC_PriorityGroup_3 ((uint32_t)0x400)
 
+#define NVIC_PriorityGroup_4 ((uint32_t)0x300)
 
 
+#define IS_NVIC_PRIORITY_GROUP(GROUP) (((GROUP) == NVIC_PriorityGroup_0) || ((GROUP) == NVIC_PriorityGroup_1) || ((GROUP) == NVIC_PriorityGroup_2) || ((GROUP) == NVIC_PriorityGroup_3) || ((GROUP) == NVIC_PriorityGroup_4))
 
 
 
-#undef FLT_MIN_10_EXP
-#undef DBL_MIN_10_EXP
-#undef LDBL_MIN_10_EXP
-#define FLT_MIN_10_EXP __FLT_MIN_10_EXP__
-#define DBL_MIN_10_EXP __DBL_MIN_10_EXP__
-#define LDBL_MIN_10_EXP __LDBL_MIN_10_EXP__
 
 
-#undef FLT_MAX_EXP
-#undef DBL_MAX_EXP
-#undef LDBL_MAX_EXP
-#define FLT_MAX_EXP __FLT_MAX_EXP__
-#define DBL_MAX_EXP __DBL_MAX_EXP__
-#define LDBL_MAX_EXP __LDBL_MAX_EXP__
+#define IS_NVIC_PREEMPTION_PRIORITY(PRIORITY) ((PRIORITY) < 0x10)
 
+#define IS_NVIC_SUB_PRIORITY(PRIORITY) ((PRIORITY) < 0x10)
 
+#define IS_NVIC_OFFSET(OFFSET) ((OFFSET) < 0x000FFFFF)
+# 143 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+#define SysTick_CLKSource_HCLK_Div8 ((uint32_t)0xFFFFFFFB)
+#define SysTick_CLKSource_HCLK ((uint32_t)0x00000004)
+#define IS_SYSTICK_CLK_SOURCE(SOURCE) (((SOURCE) == SysTick_CLKSource_HCLK) || ((SOURCE) == SysTick_CLKSource_HCLK_Div8))
+# 158 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
+void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup);
+void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct);
+void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset);
+void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState);
+void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource);
 
 
+}
+# 54 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h" 2
+# 83 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/boards/revomini_MP32V1F4/stm32f4xx_conf.h"
+#define assert_param(expr) ((void)0)
+# 7117 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/STM32F4xx_DSP_StdPeriph_Lib_V1.1.0/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h" 2
 
 
-#undef FLT_MAX_10_EXP
-#undef DBL_MAX_10_EXP
-#undef LDBL_MAX_10_EXP
-#define FLT_MAX_10_EXP __FLT_MAX_10_EXP__
-#define DBL_MAX_10_EXP __DBL_MAX_10_EXP__
-#define LDBL_MAX_10_EXP __LDBL_MAX_10_EXP__
 
 
 
 
+#define SET_BIT(REG,BIT) ((REG) |= (BIT))
 
-#undef FLT_MAX
-#undef DBL_MAX
-#undef LDBL_MAX
-#define FLT_MAX __FLT_MAX__
-#define DBL_MAX __DBL_MAX__
-#define LDBL_MAX __LDBL_MAX__
+#define CLEAR_BIT(REG,BIT) ((REG) &= ~(BIT))
 
+#define READ_BIT(REG,BIT) ((REG) & (BIT))
 
+#define CLEAR_REG(REG) ((REG) = (0x0))
 
-#undef FLT_EPSILON
-#undef DBL_EPSILON
-#undef LDBL_EPSILON
-#define FLT_EPSILON __FLT_EPSILON__
-#define DBL_EPSILON __DBL_EPSILON__
-#define LDBL_EPSILON __LDBL_EPSILON__
+#define WRITE_REG(REG,VAL) ((REG) = (VAL))
 
+#define READ_REG(REG) ((REG))
 
-#undef FLT_MIN
-#undef DBL_MIN
-#undef LDBL_MIN
-#define FLT_MIN __FLT_MIN__
-#define DBL_MIN __DBL_MIN__
-#define LDBL_MIN __LDBL_MIN__
+#define MODIFY_REG(REG,CLEARMASK,SETMASK) WRITE_REG((REG), (((READ_REG(REG)) & (~(CLEARMASK))) | (SETMASK)))
 
 
 
-#undef FLT_ROUNDS
-#define FLT_ROUNDS 1
-# 31 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h" 2
+
+
+
+}
+# 28 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/hardware/hal/hal_types.h" 1
+
+#define _HAL_TYPES_H_ 
+
+
+
+
+typedef void (*voidFuncPtr)(void);
+
+#define __attr_flash __attribute__((section (".USER_FLASH")))
+#define __packed __attribute__((__packed__))
+# 29 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h" 2
+# 38 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h"
+#define _EXT_INTERRUPTS_H_ 
+
+
+
+
+
+typedef enum ExtIntTriggerMode {
+    RISING,
+
+    FALLING,
+
+    CHANGE
+
+
+} ExtIntTriggerMode;
+# 71 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h"
+void attachInterrupt(uint8_t pin, voidFuncPtr handler, ExtIntTriggerMode mode);
+
+
+
+
+
+
+
+void detachInterrupt(uint8_t pin);
+# 89 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h"
+static inline void interrupts() {
+ __enable_irq();
+}
+# 103 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/ArduPlane/../libraries/AP_HAL_REVOMINI/wirish/ext_interrupts.h"
+static inline void noInterrupts() {
+ __disable_irq();
+}
+# 33 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h" 2
 
 #define AP_MAX_NAME_SIZE 16
 
@@ -8402,7 +25169,7 @@
 
 
     static uint32_t group_id(const struct GroupInfo *grpinfo, uint32_t base, uint8_t i, uint8_t shift);
-# 184 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 186 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
     void copy_name_info(const struct AP_Param::Info *info,
                         const struct GroupInfo *ginfo,
                         const struct GroupNesting &group_nesting,
@@ -8413,7 +25180,7 @@
 
 
     void copy_name_token(const ParamToken &token, char *buffer, size_t bufferSize, bool force_scalar=false) const;
-# 203 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 205 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
     static AP_Param * find(const char *name, enum ap_var_type *ptype);
 
 
@@ -8422,7 +25189,7 @@
 
 
     static bool set_default_by_name(const char *name, float value);
-# 219 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 221 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
     static AP_Param * find_by_index(uint16_t idx, enum ap_var_type *ptype, ParamToken *token);
 
 
@@ -8460,7 +25227,7 @@
 
 
     bool load(void);
-# 265 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 267 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
     static bool load_all(void);
 
     static void load_object_from_eeprom(const void *object_pointer, const struct GroupInfo *group_info);
@@ -8561,7 +25328,7 @@
         uint8_t revision;
         uint8_t spare;
     };
-# 378 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 380 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
     struct Param_header {
 
         uint32_t key_low : 8;
@@ -8654,16 +25421,7 @@
 
 
     static const float *find_def_value_ptr(const char *name);
-
-
-
-
-
-    static bool parse_param_line(char *line, char **vname, float &value);
-    static bool load_defaults_file(const char *filename);
-
-
-
+# 482 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
     void send_parameter(const char *name, enum ap_var_type param_header_type, uint8_t idx) const;
 
     static StorageAccess _storage;
@@ -8688,7 +25446,7 @@
 
     static bool _hide_disabled_groups;
 };
-# 513 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 515 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
 template<typename T, ap_var_type PT>
 class AP_ParamT : public AP_Param
 {
@@ -8791,7 +25549,7 @@
 protected:
     T _value;
 };
-# 625 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 627 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
 template<typename T, ap_var_type PT>
 class AP_ParamV : public AP_Param
 {
@@ -8846,7 +25604,7 @@
 protected:
     T _value;
 };
-# 690 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 692 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
 template<typename T, uint8_t N, ap_var_type PT>
 class AP_ParamA : public AP_Param
 {
@@ -8891,7 +25649,7 @@
 protected:
     T _value[N];
 };
-# 743 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Param/AP_Param.h"
+# 745 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Param/AP_Param.h"
 #define AP_PARAMDEF(_t,_suffix,_pt) typedef AP_ParamT<_t, _pt> AP_ ## _suffix;
 typedef AP_ParamT<float, AP_PARAM_FLOAT> AP_Float;;
 typedef AP_ParamT<int8_t, AP_PARAM_INT8> AP_Int8;;
@@ -8904,11 +25662,11 @@
 
 
 #define AP_PARAMDEFV(_t,_suffix,_pt) typedef AP_ParamV<_t, _pt> AP_ ## _suffix;
-# 10 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
+# 10 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/definitions.h" 1
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/definitions.h" 1
        
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/definitions.h"
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/definitions.h"
 #undef M_PI
 
 #define M_PI (3.141592653589793f)
@@ -8969,16 +25727,16 @@
 #define NSEC_PER_USEC 1000ULL
 #define USEC_PER_SEC 1000000ULL
 #define USEC_PER_MSEC 1000ULL
-# 12 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/edc.h" 1
-# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/edc.h"
+# 12 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/edc.h" 1
+# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/edc.h"
        
 
 
 
 uint16_t crc16_ccitt(const uint8_t *buf, uint32_t len, uint16_t crc);
-# 13 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/location.h" 1
+# 13 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/location.h" 1
        
 
 
@@ -8986,8 +25744,8 @@
 
 
 
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/vector2.h" 1
-# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/vector2.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/vector2.h" 1
+# 30 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/vector2.h"
        
 
 
@@ -9182,15 +25940,15 @@
 typedef Vector2<int32_t> Vector2l;
 typedef Vector2<uint32_t> Vector2ul;
 typedef Vector2<float> Vector2f;
-# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/location.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/vector3.h" 1
-# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/vector3.h"
-       
-# 57 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/vector3.h"
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/rotations.h" 1
-# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/rotations.h"
+# 9 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/location.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/vector3.h" 1
+# 48 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/vector3.h"
+       
+# 57 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/vector3.h"
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/rotations.h" 1
+# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/rotations.h"
        
-# 27 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/rotations.h"
+# 27 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/rotations.h"
 enum Rotation {
     ROTATION_NONE = 0,
     ROTATION_YAW_45 = 1,
@@ -9233,7 +25991,7 @@
     ROTATION_ROLL_90_PITCH_68_YAW_293 = 38,
     ROTATION_MAX
 };
-# 58 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/vector3.h" 2
+# 58 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/vector3.h" 2
 
 template <typename T>
 class Matrix3;
@@ -9413,7 +26171,7 @@
 typedef Vector3<uint32_t> Vector3ul;
 typedef Vector3<float> Vector3f;
 typedef Vector3<double> Vector3d;
-# 10 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/location.h" 2
+# 10 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/location.h" 2
 
 
 
@@ -9499,9 +26257,9 @@
 bool check_latlng(float lat, float lng);
 bool check_latlng(int32_t lat, int32_t lng);
 bool check_latlng(Location loc);
-# 14 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/matrix3.h" 1
-# 38 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/matrix3.h"
+# 14 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/matrix3.h" 1
+# 38 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/matrix3.h"
        
 
 
@@ -9660,7 +26418,7 @@
 
 
     T det() const;
-# 205 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/matrix3.h"
+# 205 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/matrix3.h"
     bool inverse(Matrix3<T>& inv) const;
 
 
@@ -9725,9 +26483,9 @@
 typedef Matrix3<uint32_t> Matrix3ul;
 typedef Matrix3<float> Matrix3f;
 typedef Matrix3<double> Matrix3d;
-# 15 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.h" 1
-# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.h"
+# 15 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.h" 1
+# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.h"
        
 
 
@@ -9736,9 +26494,9 @@
 bool Polygon_outside(const Vector2<T> &P, const Vector2<T> *V, unsigned n);
 template <typename T>
 bool Polygon_complete(const Vector2<T> *V, unsigned n);
-# 16 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
-# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/quaternion.h" 1
-# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/quaternion.h"
+# 16 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
+# 1 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/quaternion.h" 1
+# 18 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/quaternion.h"
        
 
 
@@ -9776,7 +26534,7 @@
 
     bool is_nan(void) const
     {
-        return (((sizeof(q1) == sizeof(float)) ? __fpclassifyf(q1) : __fpclassifyd(q1)) == 0) || (((sizeof(q2) == sizeof(float)) ? __fpclassifyf(q2) : __fpclassifyd(q2)) == 0) || (((sizeof(q3) == sizeof(float)) ? __fpclassifyf(q3) : __fpclassifyd(q3)) == 0) || (((sizeof(q4) == sizeof(float)) ? __fpclassifyf(q4) : __fpclassifyd(q4)) == 0);
+        return isnan(q1) || isnan(q2) || isnan(q3) || isnan(q4);
     }
 
 
@@ -9859,7 +26617,7 @@
     Quaternion &operator*=(const Quaternion &v);
     Quaternion operator/(const Quaternion &v) const;
 };
-# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/AP_Math.h" 2
+# 17 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/AP_Math.h" 2
 
 
 
@@ -10066,8 +26824,8 @@
 
 
 uint16_t get_random16(void);
-# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.cpp" 2
-# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.cpp"
+# 20 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.cpp" 2
+# 37 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.cpp"
 template <typename T>
 bool Polygon_outside(const Vector2<T> &P, const Vector2<T> *V, unsigned n)
 {
@@ -10111,7 +26869,7 @@
     }
     return outside;
 }
-# 88 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot/libraries/AP_Math/polygon.cpp"
+# 88 "/mnt/disk_d/src/quad-copter/ardu-copter/3.4.2-git/ardupilot.my.revomini.build/libraries/AP_Math/polygon.cpp"
 template <typename T>
 bool Polygon_complete(const Vector2<T> *V, unsigned n)
 {
